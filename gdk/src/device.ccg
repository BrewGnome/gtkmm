// -*- c++ -*-
/* $Id: device.ccg,v 1.1 2003/01/21 13:38:07 murrayc Exp $ */

/* Copyright 2002 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <gdk/gdk.h>
#include <gdkmm/cursor.h>
#include <gdkmm/display.h>

namespace Gdk
{

void Device::get_position(int& x, int& y) const
{
  gdk_device_get_position(const_cast<GdkDevice*>(gobj()), 0, &x, &y);
}

void Device::get_position(Glib::RefPtr<Screen>& screen, int& x, int& y) const
{
  GdkScreen* cScreen = 0;
  gdk_device_get_position(const_cast<GdkDevice*>(gobj()), &cScreen, &x, &y);
  screen = Glib::wrap(cScreen, true);
}

Glib::RefPtr<Window> Device::get_window_at_position()
{
  Glib::RefPtr<Window> retvalue = Glib::wrap(gdk_device_get_window_at_position(gobj(), 0, 0));
  if(retvalue)
    retvalue->reference(); //The function does not do a ref for us.
  return retvalue;
}

Glib::RefPtr<const Window> Device::get_window_at_position() const
{
  return const_cast<Device*>(this)->get_window_at_position();
}


} // namespace Gdk

