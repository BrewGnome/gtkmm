/* $Id: devicemanager.hg,v 1.3 2004/02/10 17:29:54 mxpxpod Exp $ */

/* Copyright (C) 20010 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <gdkmm/device.h>
#include <gdkmm/display.h>
#include <gdk/gdk.h>


_DEFS(gdkmm,gdk)
_PINCLUDE(glibmm/private/object_p.h)


namespace Gdk
{

/** TODO
 * @newin{2,26}
 */
class DeviceManager : public Glib::Object
{
  _CLASS_GOBJECT(DeviceManager,GdkDeviceManager,GDK_DEVICE,Glib::Object,GObject)

protected:
  _CTOR_DEFAULT()

public:

  _WRAP_METHOD(Glib::RefPtr<Display> get_display(), gdk_device_manager_get_display, refreturn)
  _WRAP_METHOD(Glib::RefPtr<const Display> get_display() const, gdk_device_manager_get_display, refreturn, constversion)
  _WRAP_METHOD(Glib::ListHandle< Glib::RefPtr<Device> > list_devices(DeviceType type), gdk_device_manager_list_devices)
  _WRAP_METHOD(Glib::ListHandle< Glib::RefPtr<const Device> > list_devices(DeviceType type) const, gdk_device_manager_list_devices)
  

  _WRAP_METHOD(Glib::RefPtr<Device> get_client_pointer(), gdk_device_manager_get_client_pointer, refreturn)
  _WRAP_METHOD(Glib::RefPtr<const Device> get_client_pointer() const, gdk_device_manager_get_client_pointer, refreturn, constversion)
   
  //TODO: Signals, properties.

};

} // namespace Gdk
