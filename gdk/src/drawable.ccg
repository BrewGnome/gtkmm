// -*- c++ -*-
/* $Id$ */

/* Copyright 1998-2002 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <gdkmm/gc.h>
#include <gdkmm/display.h>
#include <gdkmm/pixbuf.h>
#include <gdk/gdkdrawable.h>

namespace Gdk
{

void Drawable::draw_points(const Glib::RefPtr<const GC>& gc, const Glib::ArrayHandle<Point>& points)
{
  // Don't assume the reinterpret_cast<> works everywhere.  Gdk::Point is *special*.
  gdk_draw_points(
      gobj(), const_cast<GdkGC*>(Glib::unwrap<Gdk::GC>(gc)),
      reinterpret_cast<GdkPoint*>(const_cast<Point*>(points.data())),
      points.size());
}

void Drawable::draw_lines(const Glib::RefPtr<const GC>& gc, const Glib::ArrayHandle<Point>& points)
{
  // Don't assume the reinterpret_cast<> works everywhere.  Gdk::Point is *special*.
  gdk_draw_lines(
      gobj(), const_cast<GdkGC*>(Glib::unwrap<Gdk::GC>(gc)),
      reinterpret_cast<GdkPoint*>(const_cast<Point*>(points.data())),
      points.size());
}

void Drawable::draw_polygon(const Glib::RefPtr<const GC>& gc, bool filled,
                            const Glib::ArrayHandle<Point>& points)
{
  // Don't assume the reinterpret_cast<> works everywhere.  Gdk::Point is *special*.
  gdk_draw_polygon(
      gobj(), const_cast<GdkGC*>(Glib::unwrap<Gdk::GC>(gc)), filled,
      reinterpret_cast<GdkPoint*>(const_cast<Point*>(points.data())),
      points.size());
}

} // namespace Gdk

