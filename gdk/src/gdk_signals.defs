(define-signal changed
  (of-object "GdkDevice")
  (return-type "void")
  (when "last")
)

(define-signal tool-changed
  (of-object "GdkDevice")
  (return-type "void")
  (when "last")
  (parameters
    '("GdkDeviceTool*" "tool")
  )
)

(define-signal device-added
  (of-object "GdkDeviceManager")
  (return-type "void")
  (when "last")
  (parameters
    '("GdkDevice*" "device")
  )
)

(define-signal device-changed
  (of-object "GdkDeviceManager")
  (return-type "void")
  (when "last")
  (parameters
    '("GdkDevice*" "device")
  )
)

(define-signal device-removed
  (of-object "GdkDeviceManager")
  (return-type "void")
  (when "last")
  (parameters
    '("GdkDevice*" "device")
  )
)

(define-signal closed
  (of-object "GdkDisplay")
  (return-type "void")
  (when "last")
  (parameters
    '("gboolean" "is_error")
  )
)

(define-signal monitor-added
  (of-object "GdkDisplay")
  (return-type "void")
  (when "last")
  (parameters
    '("GdkMonitor*" "monitor")
  )
)

(define-signal monitor-removed
  (of-object "GdkDisplay")
  (return-type "void")
  (when "last")
  (parameters
    '("GdkMonitor*" "monitor")
  )
)

(define-signal opened
  (of-object "GdkDisplay")
  (return-type "void")
  (when "last")
)

(define-signal seat-added
  (of-object "GdkDisplay")
  (return-type "void")
  (when "last")
  (parameters
    '("GdkSeat*" "seat")
  )
)

(define-signal seat-removed
  (of-object "GdkDisplay")
  (return-type "void")
  (when "last")
  (parameters
    '("GdkSeat*" "seat")
  )
)

(define-signal display-opened
  (of-object "GdkDisplayManager")
  (return-type "void")
  (when "last")
  (parameters
    '("GdkDisplay*" "display")
  )
)

(define-signal action-changed
  (of-object "GdkDragContext")
  (return-type "void")
  (when "last")
  (parameters
    '("GdkDragAction" "action")
  )
)

(define-signal cancel
  (of-object "GdkDragContext")
  (return-type "void")
  (when "last")
  (parameters
    '("GdkDragCancelReason" "reason")
  )
)

(define-signal dnd-finished
  (of-object "GdkDragContext")
  (return-type "void")
  (when "last")
)

(define-signal drop-performed
  (of-object "GdkDragContext")
  (return-type "void")
  (when "last")
  (parameters
    '("gint" "time")
  )
)

(define-signal after-paint
  (of-object "GdkFrameClock")
  (return-type "void")
  (when "last")
)

(define-signal before-paint
  (of-object "GdkFrameClock")
  (return-type "void")
  (when "last")
)

(define-signal flush-events
  (of-object "GdkFrameClock")
  (return-type "void")
  (when "last")
)

(define-signal layout
  (of-object "GdkFrameClock")
  (return-type "void")
  (when "last")
)

(define-signal paint
  (of-object "GdkFrameClock")
  (return-type "void")
  (when "last")
)

(define-signal resume-events
  (of-object "GdkFrameClock")
  (return-type "void")
  (when "last")
)

(define-signal update
  (of-object "GdkFrameClock")
  (return-type "void")
  (when "last")
)

(define-signal direction-changed
  (of-object "GdkKeymap")
  (return-type "void")
  (when "last")
)

(define-signal keys-changed
  (of-object "GdkKeymap")
  (return-type "void")
  (when "last")
)

(define-signal state-changed
  (of-object "GdkKeymap")
  (return-type "void")
  (when "last")
)

(define-signal invalidate
  (of-object "GdkMonitor")
  (return-type "void")
  (when "first")
)

(define-signal composited-changed
  (of-object "GdkScreen")
  (return-type "void")
  (when "last")
)

(define-signal monitors-changed
  (of-object "GdkScreen")
  (return-type "void")
  (when "last")
)

(define-signal size-changed
  (of-object "GdkScreen")
  (return-type "void")
  (when "last")
)

(define-signal device-added
  (of-object "GdkSeat")
  (return-type "void")
  (when "last")
  (parameters
    '("GdkDevice*" "device")
  )
)

(define-signal device-removed
  (of-object "GdkSeat")
  (return-type "void")
  (when "last")
  (parameters
    '("GdkDevice*" "device")
  )
)

(define-signal tool-added
  (of-object "GdkSeat")
  (return-type "void")
  (when "last")
  (parameters
    '("GdkDeviceTool*" "tool")
  )
)

(define-signal tool-removed
  (of-object "GdkSeat")
  (return-type "void")
  (when "last")
  (parameters
    '("GdkDeviceTool*" "tool")
  )
)

(define-signal create-surface
  (of-object "GdkWindow")
  (return-type "cairo_surface_t*")
  (when "last")
  (parameters
    '("gint" "width")
    '("gint" "height")
  )
)

(define-signal from-embedder
  (of-object "GdkWindow")
  (return-type "void")
  (when "last")
  (parameters
    '("gdouble" "embedder_x")
    '("gdouble" "embedder_y")
    '("gdouble*" "offscreen_x")
    '("gdouble*" "offscreen_y")
  )
)

(define-signal moved-to-rect
  (of-object "GdkWindow")
  (return-type "void")
  (when "first")
  (parameters
    '("gpointer" "flipped_rect")
    '("gpointer" "final_rect")
    '("gboolean" "flipped_x")
    '("gboolean" "flipped_y")
  )
)

(define-signal pick-embedded-child
  (of-object "GdkWindow")
  (return-type "GdkWindow*")
  (when "last")
  (parameters
    '("gdouble" "x")
    '("gdouble" "y")
  )
)

(define-signal to-embedder
  (of-object "GdkWindow")
  (return-type "void")
  (when "last")
  (parameters
    '("gdouble" "offscreen_x")
    '("gdouble" "offscreen_y")
    '("gdouble*" "embedder_x")
    '("gdouble*" "embedder_y")
  )
)

(define-property display
  (of-object "GdkAppLaunchContext")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property cursor-type
  (of-object "GdkCursor")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property display
  (of-object "GdkCursor")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property associated-device
  (of-object "GdkDevice")
  (docs "Associated pointer or keyboard with this device, if any. Devices of type #GDK_DEVICE_TYPE_MASTER always come in keyboard/pointer pairs. Other device types will have a %NULL associated device.")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property axes
  (of-object "GdkDevice")
  (docs "The axes currently available for this device.")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property device-manager
  (of-object "GdkDevice")
  (docs "The #GdkDeviceManager the #GdkDevice pertains to.")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property display
  (of-object "GdkDevice")
  (docs "The #GdkDisplay the #GdkDevice pertains to.")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property has-cursor
  (of-object "GdkDevice")
  (docs "Whether the device is represented by a cursor on the screen. Devices of type %GDK_DEVICE_TYPE_MASTER will have %TRUE here.")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property input-mode
  (of-object "GdkDevice")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property input-source
  (of-object "GdkDevice")
  (docs "Source type for the device.")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property n-axes
  (of-object "GdkDevice")
  (docs "Number of axes in the device.")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property name
  (of-object "GdkDevice")
  (docs "The device name.")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property num-touches
  (of-object "GdkDevice")
  (docs "The maximal number of concurrent touches on a touch device. Will be 0 if the device is not a touch device or if the number of touches is unknown.")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property product-id
  (of-object "GdkDevice")
  (docs "Product ID of this device, see gdk_device_get_product_id().")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property seat
  (of-object "GdkDevice")
  (docs "#GdkSeat of this device.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tool
  (of-object "GdkDevice")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property type
  (of-object "GdkDevice")
  (docs "Device role in the device manager.")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property vendor-id
  (of-object "GdkDevice")
  (docs "Vendor ID of this device, see gdk_device_get_vendor_id().")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property display
  (of-object "GdkDeviceManager")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property axes
  (of-object "GdkDeviceTool")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property hardware-id
  (of-object "GdkDeviceTool")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property serial
  (of-object "GdkDeviceTool")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property tool-type
  (of-object "GdkDeviceTool")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property default-display
  (of-object "GdkDisplayManager")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property clip
  (of-object "GdkDrawingContext")
  (docs "The clip region applied to the drawing context.")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property window
  (of-object "GdkDrawingContext")
  (docs "The #GdkWindow that created the drawing context.")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property display
  (of-object "GdkGLContext")
  (docs "The #GdkDisplay used to create the #GdkGLContext.")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property shared-context
  (of-object "GdkGLContext")
  (docs "The #GdkGLContext that this context is sharing data with, or #NULL")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property window
  (of-object "GdkGLContext")
  (docs "The #GdkWindow the gl context is bound to.")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property display
  (of-object "GdkMonitor")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property geometry
  (of-object "GdkMonitor")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property height-mm
  (of-object "GdkMonitor")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property manufacturer
  (of-object "GdkMonitor")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property model
  (of-object "GdkMonitor")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property refresh-rate
  (of-object "GdkMonitor")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property scale-factor
  (of-object "GdkMonitor")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property subpixel-layout
  (of-object "GdkMonitor")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property width-mm
  (of-object "GdkMonitor")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property workarea
  (of-object "GdkMonitor")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property font-options
  (of-object "GdkScreen")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property resolution
  (of-object "GdkScreen")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property display
  (of-object "GdkSeat")
  (docs "#GdkDisplay of this seat.")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property cursor
  (of-object "GdkWindow")
  (docs "The mouse pointer for a #GdkWindow. See gdk_window_set_cursor() and gdk_window_get_cursor() for details.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-signal area-prepared
  (of-object "GdkPixbufLoader")
  (return-type "void")
  (when "last")
)

(define-signal area-updated
  (of-object "GdkPixbufLoader")
  (return-type "void")
  (when "last")
  (parameters
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-signal closed
  (of-object "GdkPixbufLoader")
  (return-type "void")
  (when "last")
)

(define-signal size-prepared
  (of-object "GdkPixbufLoader")
  (return-type "void")
  (when "last")
  (parameters
    '("gint" "width")
    '("gint" "height")
  )
)

(define-property bits-per-sample
  (of-object "GdkPixbuf")
  (docs "The number of bits per sample. Currently only 8 bit per sample are supported.")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property colorspace
  (of-object "GdkPixbuf")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property has-alpha
  (of-object "GdkPixbuf")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property height
  (of-object "GdkPixbuf")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property n-channels
  (of-object "GdkPixbuf")
  (docs "The number of samples per pixel. Currently, only 3 or 4 samples per pixel are supported.")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property pixel-bytes
  (of-object "GdkPixbuf")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property pixels
  (of-object "GdkPixbuf")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property rowstride
  (of-object "GdkPixbuf")
  (docs "The number of bytes between the start of a row and the start of the next row. This number must (obviously) be at least as large as the width of the pixbuf.")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property width
  (of-object "GdkPixbuf")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property loop
  (of-object "GdkPixbufSimpleAnim")
  (docs "Whether the animation should loop when it reaches the end.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

