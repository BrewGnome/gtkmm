/* Copyright (C) 2017 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library. If not, see <http://www.gnu.org/licenses/>.
 */

_DEFS(gdkmm,gdk)

#include <gdkmm/contentformats.h>

namespace Gdk
{

/** Helper class for building Gdk::ContentFormats.
 *
 * @newin{3,94}
 */
class ContentFormatsBuilder final
{
  _CLASS_GENERIC(ContentFormatsBuilder, GdkContentFormatsBuilder)
public:
  /** Creates a new %ContentFormatsBuilder object.
   *
   * The resulting builder would create an empty ContentFormats.
   * Use addition functions to add types to it.
   */
  ContentFormatsBuilder();
  _IGNORE(gdk_content_formats_builder_new)

  // Can't be copied.
  ContentFormatsBuilder(const ContentFormatsBuilder& other) = delete;
  ContentFormatsBuilder& operator=(const ContentFormatsBuilder& other) = delete;

  ContentFormatsBuilder(ContentFormatsBuilder&& other) noexcept;
  ContentFormatsBuilder& operator=(ContentFormatsBuilder&& other) noexcept;

  ~ContentFormatsBuilder();
  
  _WRAP_METHOD(void add_formats(const Glib::RefPtr<const ContentFormats>& formats),
    gdk_content_formats_builder_add_formats)
  _WRAP_METHOD(void add_gtype(GType gtype), gdk_content_formats_builder_add_gtype)
  _WRAP_METHOD(void add_mime_type(const Glib::ustring& mime_type),
    gdk_content_formats_builder_add_mime_type)

  /** Makes a new Gdk::ContentFormats from the builder.
   *
   * The builder is reset to an empty builder, as if it had been newly constructed.
   *
   * @return A new Gdk::ContentFormats with all the formats added to the builder.
   */
  Glib::RefPtr<ContentFormats> make_content_formats();
  _IGNORE(gdk_content_formats_builder_free)

  ///Provides access to the underlying C object.
  GdkContentFormatsBuilder* gobj() { return gobject_; }
  ///Provides access to the underlying C object.
  const GdkContentFormatsBuilder* gobj() const { return gobject_; }

private:
  GdkContentFormatsBuilder* gobject_;
};

} // namespace Gdk
