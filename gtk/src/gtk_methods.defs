;; -*- scheme -*-
; object definitions ...
(define-object AccelGroup
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkAccelGroup")
  (gtype-id "GTK_TYPE_ACCEL_GROUP")
)

(define-object Accessible
  (in-module "Gtk")
  (parent "AtkObject")
  (c-name "GtkAccessible")
  (gtype-id "GTK_TYPE_ACCESSIBLE")
)

(define-object Action
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkAction")
  (gtype-id "GTK_TYPE_ACTION")
)

(define-object ActionGroup
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkActionGroup")
  (gtype-id "GTK_TYPE_ACTION_GROUP")
)

(define-object EntryCompletion
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkEntryCompletion")
  (gtype-id "GTK_TYPE_ENTRY_COMPLETION")
)

(define-object IMContextSimple
  (in-module "Gtk")
  (parent "GtkIMContext")
  (c-name "GtkIMContextSimple")
  (gtype-id "GTK_TYPE_IM_CONTEXT_SIMPLE")
)

(define-object IMMulticontext
  (in-module "Gtk")
  (parent "GtkIMContext")
  (c-name "GtkIMMulticontext")
  (gtype-id "GTK_TYPE_IM_MULTICONTEXT")
)

(define-object IconFactory
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkIconFactory")
  (gtype-id "GTK_TYPE_ICON_FACTORY")
)

(define-object IconTheme
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkIconTheme")
  (gtype-id "GTK_TYPE_ICON_THEME")
)

(define-object ListStore
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkListStore")
  (gtype-id "GTK_TYPE_LIST_STORE")
)

(define-object Object
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkObject")
  (gtype-id "GTK_TYPE_OBJECT")
)

(define-object ItemFactory
  (in-module "Gtk")
  (parent "GtkObject")
  (c-name "GtkItemFactory")
  (gtype-id "GTK_TYPE_ITEM_FACTORY")
)

(define-object CellRenderer
  (in-module "Gtk")
  (parent "GtkObject")
  (c-name "GtkCellRenderer")
  (gtype-id "GTK_TYPE_CELL_RENDERER")
)

(define-object CellRendererToggle
  (in-module "Gtk")
  (parent "GtkCellRenderer")
  (c-name "GtkCellRendererToggle")
  (gtype-id "GTK_TYPE_CELL_RENDERER_TOGGLE")
)

(define-object CellRendererText
  (in-module "Gtk")
  (parent "GtkCellRenderer")
  (c-name "GtkCellRendererText")
  (gtype-id "GTK_TYPE_CELL_RENDERER_TEXT")
)

(define-object CellRendererSepText
  (in-module "Gtk")
  (parent "GtkCellRendererText")
  (c-name "GtkCellRendererSepText")
  (gtype-id "GTK_TYPE_CELL_RENDERER_SEP_TEXT")
)

(define-object CellRendererPixbuf
  (in-module "Gtk")
  (parent "GtkCellRenderer")
  (c-name "GtkCellRendererPixbuf")
  (gtype-id "GTK_TYPE_CELL_RENDERER_PIXBUF")
)

(define-object Adjustment
  (in-module "Gtk")
  (parent "GtkObject")
  (c-name "GtkAdjustment")
  (gtype-id "GTK_TYPE_ADJUSTMENT")
)

(define-object RcStyle
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkRcStyle")
  (gtype-id "GTK_TYPE_RC_STYLE")
)

(define-object Settings
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkSettings")
  (gtype-id "GTK_TYPE_SETTINGS")
)

(define-object SizeGroup
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkSizeGroup")
  (gtype-id "GTK_TYPE_SIZE_GROUP")
)

(define-object Style
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkStyle")
  (gtype-id "GTK_TYPE_STYLE")
)

(define-object TextBuffer
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkTextBuffer")
  (gtype-id "GTK_TYPE_TEXT_BUFFER")
)

(define-object TextChildAnchor
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkTextChildAnchor")
  (gtype-id "GTK_TYPE_TEXT_CHILD_ANCHOR")
)

(define-object TextLayout
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkTextLayout")
  (gtype-id "GTK_TYPE_TEXT_LAYOUT")
)

(define-object TextMark
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkTextMark")
  (gtype-id "GTK_TYPE_TEXT_MARK")
)

(define-object TextTag
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkTextTag")
  (gtype-id "GTK_TYPE_TEXT_TAG")
)

(define-object TextTagTable
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkTextTagTable")
  (gtype-id "GTK_TYPE_TEXT_TAG_TABLE")
)

(define-object ToggleAction
  (in-module "Gtk")
  (parent "GtkAction")
  (c-name "GtkToggleAction")
  (gtype-id "GTK_TYPE_TOGGLE_ACTION")
)

(define-object RadioAction
  (in-module "Gtk")
  (parent "GtkToggleAction")
  (c-name "GtkRadioAction")
  (gtype-id "GTK_TYPE_RADIO_ACTION")
)

(define-object Tooltips
  (in-module "Gtk")
  (parent "GtkObject")
  (c-name "GtkTooltips")
  (gtype-id "GTK_TYPE_TOOLTIPS")
)

(define-object TreeModelFilter
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkTreeModelFilter")
  (gtype-id "GTK_TYPE_TREE_MODEL_FILTER")
)

(define-object TreeModelSort
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkTreeModelSort")
  (gtype-id "GTK_TYPE_TREE_MODEL_SORT")
)

(define-object TreeSelection
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkTreeSelection")
  (gtype-id "GTK_TYPE_TREE_SELECTION")
)

(define-object TreeStore
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkTreeStore")
  (gtype-id "GTK_TYPE_TREE_STORE")
)

(define-object TreeViewColumn
  (in-module "Gtk")
  (parent "GtkObject")
  (c-name "GtkTreeViewColumn")
  (gtype-id "GTK_TYPE_TREE_VIEW_COLUMN")
)

(define-object UIManager
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkUIManager")
  (gtype-id "GTK_TYPE_UI_MANAGER")
)

(define-object Widget
  (in-module "Gtk")
  (parent "GtkObject")
  (c-name "GtkWidget")
  (gtype-id "GTK_TYPE_WIDGET")
)

(define-object Separator
  (in-module "Gtk")
  (parent "GtkWidget")
  (c-name "GtkSeparator")
  (gtype-id "GTK_TYPE_SEPARATOR")
)

(define-object VSeparator
  (in-module "Gtk")
  (parent "GtkSeparator")
  (c-name "GtkVSeparator")
  (gtype-id "GTK_TYPE_VSEPARATOR")
)

(define-object HSeparator
  (in-module "Gtk")
  (parent "GtkSeparator")
  (c-name "GtkHSeparator")
  (gtype-id "GTK_TYPE_HSEPARATOR")
)

(define-object Ruler
  (in-module "Gtk")
  (parent "GtkWidget")
  (c-name "GtkRuler")
  (gtype-id "GTK_TYPE_RULER")
)

(define-object VRuler
  (in-module "Gtk")
  (parent "GtkRuler")
  (c-name "GtkVRuler")
  (gtype-id "GTK_TYPE_VRULER")
)

(define-object HRuler
  (in-module "Gtk")
  (parent "GtkRuler")
  (c-name "GtkHRuler")
  (gtype-id "GTK_TYPE_HRULER")
)

(define-object Range
  (in-module "Gtk")
  (parent "GtkWidget")
  (c-name "GtkRange")
  (gtype-id "GTK_TYPE_RANGE")
)

(define-object Scrollbar
  (in-module "Gtk")
  (parent "GtkRange")
  (c-name "GtkScrollbar")
  (gtype-id "GTK_TYPE_SCROLLBAR")
)

(define-object VScrollbar
  (in-module "Gtk")
  (parent "GtkScrollbar")
  (c-name "GtkVScrollbar")
  (gtype-id "GTK_TYPE_VSCROLLBAR")
)

(define-object HScrollbar
  (in-module "Gtk")
  (parent "GtkScrollbar")
  (c-name "GtkHScrollbar")
  (gtype-id "GTK_TYPE_HSCROLLBAR")
)

(define-object Scale
  (in-module "Gtk")
  (parent "GtkRange")
  (c-name "GtkScale")
  (gtype-id "GTK_TYPE_SCALE")
)

(define-object VScale
  (in-module "Gtk")
  (parent "GtkScale")
  (c-name "GtkVScale")
  (gtype-id "GTK_TYPE_VSCALE")
)

(define-object HScale
  (in-module "Gtk")
  (parent "GtkScale")
  (c-name "GtkHScale")
  (gtype-id "GTK_TYPE_HSCALE")
)

(define-object Progress
  (in-module "Gtk")
  (parent "GtkWidget")
  (c-name "GtkProgress")
  (gtype-id "GTK_TYPE_PROGRESS")
)

(define-object ProgressBar
  (in-module "Gtk")
  (parent "GtkProgress")
  (c-name "GtkProgressBar")
  (gtype-id "GTK_TYPE_PROGRESS_BAR")
)

(define-object Preview
  (in-module "Gtk")
  (parent "GtkWidget")
  (c-name "GtkPreview")
  (gtype-id "GTK_TYPE_PREVIEW")
)

(define-object OldEditable
  (in-module "Gtk")
  (parent "GtkWidget")
  (c-name "GtkOldEditable")
  (gtype-id "GTK_TYPE_OLD_EDITABLE")
)

(define-object Text
  (in-module "Gtk")
  (parent "GtkOldEditable")
  (c-name "GtkText")
  (gtype-id "GTK_TYPE_TEXT")
)

(define-object Misc
  (in-module "Gtk")
  (parent "GtkWidget")
  (c-name "GtkMisc")
  (gtype-id "GTK_TYPE_MISC")
)

(define-object Pixmap
  (in-module "Gtk")
  (parent "GtkMisc")
  (c-name "GtkPixmap")
  (gtype-id "GTK_TYPE_PIXMAP")
)

(define-object Arrow
  (in-module "Gtk")
  (parent "GtkMisc")
  (c-name "GtkArrow")
  (gtype-id "GTK_TYPE_ARROW")
)

(define-object Image
  (in-module "Gtk")
  (parent "GtkMisc")
  (c-name "GtkImage")
  (gtype-id "GTK_TYPE_IMAGE")
)

(define-object Label
  (in-module "Gtk")
  (parent "GtkMisc")
  (c-name "GtkLabel")
  (gtype-id "GTK_TYPE_LABEL")
)

(define-object AccelLabel
  (in-module "Gtk")
  (parent "GtkLabel")
  (c-name "GtkAccelLabel")
  (gtype-id "GTK_TYPE_ACCEL_LABEL")
)

(define-object Invisible
  (in-module "Gtk")
  (parent "GtkWidget")
  (c-name "GtkInvisible")
  (gtype-id "GTK_TYPE_INVISIBLE")
)

(define-object HSV
  (in-module "Gtk")
  (parent "GtkWidget")
  (c-name "GtkHSV")
  (gtype-id "GTK_TYPE_HSV")
)

(define-object Entry
  (in-module "Gtk")
  (parent "GtkWidget")
  (c-name "GtkEntry")
  (gtype-id "GTK_TYPE_ENTRY")
)

(define-object SpinButton
  (in-module "Gtk")
  (parent "GtkEntry")
  (c-name "GtkSpinButton")
  (gtype-id "GTK_TYPE_SPIN_BUTTON")
)

(define-object DrawingArea
  (in-module "Gtk")
  (parent "GtkWidget")
  (c-name "GtkDrawingArea")
  (gtype-id "GTK_TYPE_DRAWING_AREA")
)

(define-object Curve
  (in-module "Gtk")
  (parent "GtkDrawingArea")
  (c-name "GtkCurve")
  (gtype-id "GTK_TYPE_CURVE")
)

(define-object Container
  (in-module "Gtk")
  (parent "GtkWidget")
  (c-name "GtkContainer")
  (gtype-id "GTK_TYPE_CONTAINER")
)

(define-object TreeView
  (in-module "Gtk")
  (parent "GtkContainer")
  (c-name "GtkTreeView")
  (gtype-id "GTK_TYPE_TREE_VIEW")
)

(define-object Tree
  (in-module "Gtk")
  (parent "GtkContainer")
  (c-name "GtkTree")
  (gtype-id "GTK_TYPE_TREE")
)

(define-object Toolbar
  (in-module "Gtk")
  (parent "GtkContainer")
  (c-name "GtkToolbar")
  (gtype-id "GTK_TYPE_TOOLBAR")
)

(define-object TextView
  (in-module "Gtk")
  (parent "GtkContainer")
  (c-name "GtkTextView")
  (gtype-id "GTK_TYPE_TEXT_VIEW")
)

(define-object Table
  (in-module "Gtk")
  (parent "GtkContainer")
  (c-name "GtkTable")
  (gtype-id "GTK_TYPE_TABLE")
)

(define-object Socket
  (in-module "Gtk")
  (parent "GtkContainer")
  (c-name "GtkSocket")
  (gtype-id "GTK_TYPE_SOCKET")
)

(define-object Paned
  (in-module "Gtk")
  (parent "GtkContainer")
  (c-name "GtkPaned")
  (gtype-id "GTK_TYPE_PANED")
)

(define-object VPaned
  (in-module "Gtk")
  (parent "GtkPaned")
  (c-name "GtkVPaned")
  (gtype-id "GTK_TYPE_VPANED")
)

(define-object HPaned
  (in-module "Gtk")
  (parent "GtkPaned")
  (c-name "GtkHPaned")
  (gtype-id "GTK_TYPE_HPANED")
)

(define-object Notebook
  (in-module "Gtk")
  (parent "GtkContainer")
  (c-name "GtkNotebook")
  (gtype-id "GTK_TYPE_NOTEBOOK")
)

(define-object MenuShell
  (in-module "Gtk")
  (parent "GtkContainer")
  (c-name "GtkMenuShell")
  (gtype-id "GTK_TYPE_MENU_SHELL")
)

(define-object Menu
  (in-module "Gtk")
  (parent "GtkMenuShell")
  (c-name "GtkMenu")
  (gtype-id "GTK_TYPE_MENU")
)

(define-object MenuBar
  (in-module "Gtk")
  (parent "GtkMenuShell")
  (c-name "GtkMenuBar")
  (gtype-id "GTK_TYPE_MENU_BAR")
)

(define-object List
  (in-module "Gtk")
  (parent "GtkContainer")
  (c-name "GtkList")
  (gtype-id "GTK_TYPE_LIST")
)

(define-object Layout
  (in-module "Gtk")
  (parent "GtkContainer")
  (c-name "GtkLayout")
  (gtype-id "GTK_TYPE_LAYOUT")
)

(define-object Fixed
  (in-module "Gtk")
  (parent "GtkContainer")
  (c-name "GtkFixed")
  (gtype-id "GTK_TYPE_FIXED")
)

(define-object Bin
  (in-module "Gtk")
  (parent "GtkContainer")
  (c-name "GtkBin")
  (gtype-id "GTK_TYPE_BIN")
)

(define-object Viewport
  (in-module "Gtk")
  (parent "GtkBin")
  (c-name "GtkViewport")
  (gtype-id "GTK_TYPE_VIEWPORT")
)

(define-object ToolItem
  (in-module "Gtk")
  (parent "GtkBin")
  (c-name "GtkToolItem")
  (gtype-id "GTK_TYPE_TOOL_ITEM")
)

(define-object SeparatorToolItem
  (in-module "Gtk")
  (parent "GtkToolItem")
  (c-name "GtkSeparatorToolItem")
  (gtype-id "GTK_TYPE_SEPARATOR_TOOL_ITEM")
)

(define-object ToolButton
  (in-module "Gtk")
  (parent "GtkToolItem")
  (c-name "GtkToolButton")
  (gtype-id "GTK_TYPE_TOOL_BUTTON")
)

(define-object ToggleToolButton
  (in-module "Gtk")
  (parent "GtkToolButton")
  (c-name "GtkToggleToolButton")
  (gtype-id "GTK_TYPE_TOGGLE_TOOL_BUTTON")
)

(define-object RadioToolButton
  (in-module "Gtk")
  (parent "GtkToggleToolButton")
  (c-name "GtkRadioToolButton")
  (gtype-id "GTK_TYPE_RADIO_TOOL_BUTTON")
)

(define-object ScrolledWindow
  (in-module "Gtk")
  (parent "GtkBin")
  (c-name "GtkScrolledWindow")
  (gtype-id "GTK_TYPE_SCROLLED_WINDOW")
)

(define-object Item
  (in-module "Gtk")
  (parent "GtkBin")
  (c-name "GtkItem")
  (gtype-id "GTK_TYPE_ITEM")
)

(define-object TreeItem
  (in-module "Gtk")
  (parent "GtkItem")
  (c-name "GtkTreeItem")
  (gtype-id "GTK_TYPE_TREE_ITEM")
)

(define-object MenuItem
  (in-module "Gtk")
  (parent "GtkItem")
  (c-name "GtkMenuItem")
  (gtype-id "GTK_TYPE_MENU_ITEM")
)

(define-object TearoffMenuItem
  (in-module "Gtk")
  (parent "GtkMenuItem")
  (c-name "GtkTearoffMenuItem")
  (gtype-id "GTK_TYPE_TEAROFF_MENU_ITEM")
)

(define-object SeparatorMenuItem
  (in-module "Gtk")
  (parent "GtkMenuItem")
  (c-name "GtkSeparatorMenuItem")
  (gtype-id "GTK_TYPE_SEPARATOR_MENU_ITEM")
)

(define-object CellViewMenuItem
  (in-module "Gtk")
  (parent "GtkMenuItem")
  (c-name "GtkCellViewMenuItem")
  (gtype-id "GTK_TYPE_CELL_VIEW_MENU_ITEM")
)

(define-object CheckMenuItem
  (in-module "Gtk")
  (parent "GtkMenuItem")
  (c-name "GtkCheckMenuItem")
  (gtype-id "GTK_TYPE_CHECK_MENU_ITEM")
)

(define-object RadioMenuItem
  (in-module "Gtk")
  (parent "GtkCheckMenuItem")
  (c-name "GtkRadioMenuItem")
  (gtype-id "GTK_TYPE_RADIO_MENU_ITEM")
)

(define-object ImageMenuItem
  (in-module "Gtk")
  (parent "GtkMenuItem")
  (c-name "GtkImageMenuItem")
  (gtype-id "GTK_TYPE_IMAGE_MENU_ITEM")
)

(define-object ListItem
  (in-module "Gtk")
  (parent "GtkItem")
  (c-name "GtkListItem")
  (gtype-id "GTK_TYPE_LIST_ITEM")
)

(define-object HandleBox
  (in-module "Gtk")
  (parent "GtkBin")
  (c-name "GtkHandleBox")
  (gtype-id "GTK_TYPE_HANDLE_BOX")
)

(define-object Frame
  (in-module "Gtk")
  (parent "GtkBin")
  (c-name "GtkFrame")
  (gtype-id "GTK_TYPE_FRAME")
)

(define-object AspectFrame
  (in-module "Gtk")
  (parent "GtkFrame")
  (c-name "GtkAspectFrame")
  (gtype-id "GTK_TYPE_ASPECT_FRAME")
)

(define-object Expander
  (in-module "Gtk")
  (parent "GtkBin")
  (c-name "GtkExpander")
  (gtype-id "GTK_TYPE_EXPANDER")
)

(define-object EventBox
  (in-module "Gtk")
  (parent "GtkBin")
  (c-name "GtkEventBox")
  (gtype-id "GTK_TYPE_EVENT_BOX")
)

(define-object Alignment
  (in-module "Gtk")
  (parent "GtkBin")
  (c-name "GtkAlignment")
  (gtype-id "GTK_TYPE_ALIGNMENT")
)

(define-object Button
  (in-module "Gtk")
  (parent "GtkBin")
  (c-name "GtkButton")
  (gtype-id "GTK_TYPE_BUTTON")
)

(define-object ToggleButton
  (in-module "Gtk")
  (parent "GtkButton")
  (c-name "GtkToggleButton")
  (gtype-id "GTK_TYPE_TOGGLE_BUTTON")
)

(define-object CheckButton
  (in-module "Gtk")
  (parent "GtkToggleButton")
  (c-name "GtkCheckButton")
  (gtype-id "GTK_TYPE_CHECK_BUTTON")
)

(define-object RadioButton
  (in-module "Gtk")
  (parent "GtkCheckButton")
  (c-name "GtkRadioButton")
  (gtype-id "GTK_TYPE_RADIO_BUTTON")
)

(define-object OptionMenu
  (in-module "Gtk")
  (parent "GtkButton")
  (c-name "GtkOptionMenu")
  (gtype-id "GTK_TYPE_OPTION_MENU")
)

(define-object FontButton
  (in-module "Gtk")
  (parent "GtkButton")
  (c-name "GtkFontButton")
  (gtype-id "GTK_TYPE_FONT_BUTTON")
)

(define-object ColorButton
  (in-module "Gtk")
  (parent "GtkButton")
  (c-name "GtkColorButton")
  (gtype-id "GTK_TYPE_COLOR_BUTTON")
)

(define-object ComboBox
  (in-module "Gtk")
  (parent "GtkBin")
  (c-name "GtkComboBox")
  (gtype-id "GTK_TYPE_COMBO_BOX")
)

(define-object ComboBoxEntry
  (in-module "Gtk")
  (parent "GtkComboBox")
  (c-name "GtkComboBoxEntry")
  (gtype-id "GTK_TYPE_COMBO_BOX_ENTRY")
)

(define-object Box
  (in-module "Gtk")
  (parent "GtkContainer")
  (c-name "GtkBox")
  (gtype-id "GTK_TYPE_BOX")
)

(define-object VBox
  (in-module "Gtk")
  (parent "GtkBox")
  (c-name "GtkVBox")
  (gtype-id "GTK_TYPE_VBOX")
)

(define-object ColorSelection
  (in-module "Gtk")
  (parent "GtkVBox")
  (c-name "GtkColorSelection")
  (gtype-id "GTK_TYPE_COLOR_SELECTION")
)

(define-object FileChooserWidget
  (in-module "Gtk")
  (parent "GtkVBox")
  (c-name "GtkFileChooserWidget")
  (gtype-id "GTK_TYPE_FILE_CHOOSER_WIDGET")
)

(define-object FontSelection
  (in-module "Gtk")
  (parent "GtkVBox")
  (c-name "GtkFontSelection")
  (gtype-id "GTK_TYPE_FONT_SELECTION")
)

(define-object GammaCurve
  (in-module "Gtk")
  (parent "GtkVBox")
  (c-name "GtkGammaCurve")
  (gtype-id "GTK_TYPE_GAMMA_CURVE")
)

(define-object HBox
  (in-module "Gtk")
  (parent "GtkBox")
  (c-name "GtkHBox")
  (gtype-id "GTK_TYPE_HBOX")
)

(define-object Statusbar
  (in-module "Gtk")
  (parent "GtkHBox")
  (c-name "GtkStatusbar")
  (gtype-id "GTK_TYPE_STATUSBAR")
)

(define-object Combo
  (in-module "Gtk")
  (parent "GtkHBox")
  (c-name "GtkCombo")
  (gtype-id "GTK_TYPE_COMBO")
)

(define-object ButtonBox
  (in-module "Gtk")
  (parent "GtkBox")
  (c-name "GtkButtonBox")
  (gtype-id "GTK_TYPE_BUTTON_BOX")
)

(define-object VButtonBox
  (in-module "Gtk")
  (parent "GtkButtonBox")
  (c-name "GtkVButtonBox")
  (gtype-id "GTK_TYPE_VBUTTON_BOX")
)

(define-object HButtonBox
  (in-module "Gtk")
  (parent "GtkButtonBox")
  (c-name "GtkHButtonBox")
  (gtype-id "GTK_TYPE_HBUTTON_BOX")
)

(define-object CList
  (in-module "Gtk")
  (parent "GtkContainer")
  (c-name "GtkCList")
  (gtype-id "GTK_TYPE_CLIST")
)

(define-object CTree
  (in-module "Gtk")
  (parent "GtkCList")
  (c-name "GtkCTree")
  (gtype-id "GTK_TYPE_CTREE")
)

(define-object CellView
  (in-module "Gtk")
  (parent "GtkWidget")
  (c-name "GtkCellView")
  (gtype-id "GTK_TYPE_CELL_VIEW")
)

(define-object Calendar
  (in-module "Gtk")
  (parent "GtkWidget")
  (c-name "GtkCalendar")
  (gtype-id "GTK_TYPE_CALENDAR")
)

(define-object Window
  (in-module "Gtk")
  (parent "GtkBin")
  (c-name "GtkWindow")
  (gtype-id "GTK_TYPE_WINDOW")
)

(define-object Plug
  (in-module "Gtk")
  (parent "GtkWindow")
  (c-name "GtkPlug")
  (gtype-id "GTK_TYPE_PLUG")
)

(define-object Dialog
  (in-module "Gtk")
  (parent "GtkWindow")
  (c-name "GtkDialog")
  (gtype-id "GTK_TYPE_DIALOG")
)

(define-object MessageDialog
  (in-module "Gtk")
  (parent "GtkDialog")
  (c-name "GtkMessageDialog")
  (gtype-id "GTK_TYPE_MESSAGE_DIALOG")
)

(define-object InputDialog
  (in-module "Gtk")
  (parent "GtkDialog")
  (c-name "GtkInputDialog")
  (gtype-id "GTK_TYPE_INPUT_DIALOG")
)

(define-object FontSelectionDialog
  (in-module "Gtk")
  (parent "GtkDialog")
  (c-name "GtkFontSelectionDialog")
  (gtype-id "GTK_TYPE_FONT_SELECTION_DIALOG")
)

(define-object FileSelection
  (in-module "Gtk")
  (parent "GtkDialog")
  (c-name "GtkFileSelection")
  (gtype-id "GTK_TYPE_FILE_SELECTION")
)

(define-object FileChooserDialog
  (in-module "Gtk")
  (parent "GtkDialog")
  (c-name "GtkFileChooserDialog")
  (gtype-id "GTK_TYPE_FILE_CHOOSER_DIALOG")
)

(define-object ColorSelectionDialog
  (in-module "Gtk")
  (parent "GtkDialog")
  (c-name "GtkColorSelectionDialog")
  (gtype-id "GTK_TYPE_COLOR_SELECTION_DIALOG")
)

(define-object WindowGroup
  (in-module "Gtk")
  (parent "GObject")
  (c-name "GtkWindowGroup")
  (gtype-id "GTK_TYPE_WINDOW_GROUP")
)

;; Enumerations and flags ...

(define-flags AccelFlags
  (in-module "Gtk")
  (c-name "GtkAccelFlags")
  (gtype-id "GTK_TYPE_ACCEL_FLAGS")
  (values
    '("visible" "GTK_ACCEL_VISIBLE")
    '("locked" "GTK_ACCEL_LOCKED")
    '("mask" "GTK_ACCEL_MASK")
  )
)

(define-flags CalendarDisplayOptions
  (in-module "Gtk")
  (c-name "GtkCalendarDisplayOptions")
  (gtype-id "GTK_TYPE_CALENDAR_DISPLAY_OPTIONS")
  (values
    '("show-heading" "GTK_CALENDAR_SHOW_HEADING")
    '("show-day-names" "GTK_CALENDAR_SHOW_DAY_NAMES")
    '("no-month-change" "GTK_CALENDAR_NO_MONTH_CHANGE")
    '("show-week-numbers" "GTK_CALENDAR_SHOW_WEEK_NUMBERS")
    '("week-start-monday" "GTK_CALENDAR_WEEK_START_MONDAY")
  )
)

(define-flags CellRendererState
  (in-module "Gtk")
  (c-name "GtkCellRendererState")
  (gtype-id "GTK_TYPE_CELL_RENDERER_STATE")
  (values
    '("selected" "GTK_CELL_RENDERER_SELECTED")
    '("prelit" "GTK_CELL_RENDERER_PRELIT")
    '("insensitive" "GTK_CELL_RENDERER_INSENSITIVE")
    '("sorted" "GTK_CELL_RENDERER_SORTED")
    '("focused" "GTK_CELL_RENDERER_FOCUSED")
  )
)

(define-enum CellRendererMode
  (in-module "Gtk")
  (c-name "GtkCellRendererMode")
  (gtype-id "GTK_TYPE_CELL_RENDERER_MODE")
  (values
    '("inert" "GTK_CELL_RENDERER_MODE_INERT")
    '("activatable" "GTK_CELL_RENDERER_MODE_ACTIVATABLE")
    '("editable" "GTK_CELL_RENDERER_MODE_EDITABLE")
  )
)

(define-enum CellType
  (in-module "Gtk")
  (c-name "GtkCellType")
  (gtype-id "GTK_TYPE_CELL_TYPE")
  (values
    '("empty" "GTK_CELL_EMPTY")
    '("text" "GTK_CELL_TEXT")
    '("pixmap" "GTK_CELL_PIXMAP")
    '("pixtext" "GTK_CELL_PIXTEXT")
    '("widget" "GTK_CELL_WIDGET")
  )
)

(define-enum CListDragPos
  (in-module "Gtk")
  (c-name "GtkCListDragPos")
  (gtype-id "GTK_TYPE_CLIST_DRAG_POS")
  (values
    '("none" "GTK_CLIST_DRAG_NONE")
    '("before" "GTK_CLIST_DRAG_BEFORE")
    '("into" "GTK_CLIST_DRAG_INTO")
    '("after" "GTK_CLIST_DRAG_AFTER")
  )
)

(define-flags ButtonAction
  (in-module "Gtk")
  (c-name "GtkButtonAction")
  (gtype-id "GTK_TYPE_BUTTON_ACTION")
  (values
    '("ignored" "GTK_BUTTON_IGNORED")
    '("selects" "GTK_BUTTON_SELECTS")
    '("drags" "GTK_BUTTON_DRAGS")
    '("expands" "GTK_BUTTON_EXPANDS")
  )
)

(define-enum CTreePos
  (in-module "Gtk")
  (c-name "GtkCTreePos")
  (gtype-id "GTK_TYPE_CTREE_POS")
  (values
    '("before" "GTK_CTREE_POS_BEFORE")
    '("as-child" "GTK_CTREE_POS_AS_CHILD")
    '("after" "GTK_CTREE_POS_AFTER")
  )
)

(define-enum CTreeLineStyle
  (in-module "Gtk")
  (c-name "GtkCTreeLineStyle")
  (gtype-id "GTK_TYPE_CTREE_LINE_STYLE")
  (values
    '("none" "GTK_CTREE_LINES_NONE")
    '("solid" "GTK_CTREE_LINES_SOLID")
    '("dotted" "GTK_CTREE_LINES_DOTTED")
    '("tabbed" "GTK_CTREE_LINES_TABBED")
  )
)

(define-enum CTreeExpanderStyle
  (in-module "Gtk")
  (c-name "GtkCTreeExpanderStyle")
  (gtype-id "GTK_TYPE_CTREE_EXPANDER_STYLE")
  (values
    '("none" "GTK_CTREE_EXPANDER_NONE")
    '("square" "GTK_CTREE_EXPANDER_SQUARE")
    '("triangle" "GTK_CTREE_EXPANDER_TRIANGLE")
    '("circular" "GTK_CTREE_EXPANDER_CIRCULAR")
  )
)

(define-enum CTreeExpansionType
  (in-module "Gtk")
  (c-name "GtkCTreeExpansionType")
  (gtype-id "GTK_TYPE_CTREE_EXPANSION_TYPE")
  (values
    '("expand" "GTK_CTREE_EXPANSION_EXPAND")
    '("expand-recursive" "GTK_CTREE_EXPANSION_EXPAND_RECURSIVE")
    '("collapse" "GTK_CTREE_EXPANSION_COLLAPSE")
    '("collapse-recursive" "GTK_CTREE_EXPANSION_COLLAPSE_RECURSIVE")
    '("toggle" "GTK_CTREE_EXPANSION_TOGGLE")
    '("toggle-recursive" "GTK_CTREE_EXPANSION_TOGGLE_RECURSIVE")
  )
)

(define-flags DebugFlag
  (in-module "Gtk")
  (c-name "GtkDebugFlag")
  (gtype-id "GTK_TYPE_DEBUG_FLAG")
  (values
    '("misc" "GTK_DEBUG_MISC")
    '("plugsocket" "GTK_DEBUG_PLUGSOCKET")
    '("text" "GTK_DEBUG_TEXT")
    '("tree" "GTK_DEBUG_TREE")
    '("updates" "GTK_DEBUG_UPDATES")
    '("keybindings" "GTK_DEBUG_KEYBINDINGS")
    '("multihead" "GTK_DEBUG_MULTIHEAD")
  )
)

(define-flags DialogFlags
  (in-module "Gtk")
  (c-name "GtkDialogFlags")
  (gtype-id "GTK_TYPE_DIALOG_FLAGS")
  (values
    '("modal" "GTK_DIALOG_MODAL")
    '("destroy-with-parent" "GTK_DIALOG_DESTROY_WITH_PARENT")
    '("no-separator" "GTK_DIALOG_NO_SEPARATOR")
  )
)

(define-enum ResponseType
  (in-module "Gtk")
  (c-name "GtkResponseType")
  (gtype-id "GTK_TYPE_RESPONSE_TYPE")
  (values
    '("none" "GTK_RESPONSE_NONE")
    '("reject" "GTK_RESPONSE_REJECT")
    '("accept" "GTK_RESPONSE_ACCEPT")
    '("delete-event" "GTK_RESPONSE_DELETE_EVENT")
    '("ok" "GTK_RESPONSE_OK")
    '("cancel" "GTK_RESPONSE_CANCEL")
    '("close" "GTK_RESPONSE_CLOSE")
    '("yes" "GTK_RESPONSE_YES")
    '("no" "GTK_RESPONSE_NO")
    '("apply" "GTK_RESPONSE_APPLY")
    '("help" "GTK_RESPONSE_HELP")
  )
)

(define-flags DestDefaults
  (in-module "Gtk")
  (c-name "GtkDestDefaults")
  (gtype-id "GTK_TYPE_DEST_DEFAULTS")
  (values
    '("motion" "GTK_DEST_DEFAULT_MOTION")
    '("highlight" "GTK_DEST_DEFAULT_HIGHLIGHT")
    '("drop" "GTK_DEST_DEFAULT_DROP")
    '("all" "GTK_DEST_DEFAULT_ALL")
  )
)

(define-flags TargetFlags
  (in-module "Gtk")
  (c-name "GtkTargetFlags")
  (gtype-id "GTK_TYPE_TARGET_FLAGS")
  (values
    '("app" "GTK_TARGET_SAME_APP")
    '("widget" "GTK_TARGET_SAME_WIDGET")
  )
)

(define-enum AnchorType
  (in-module "Gtk")
  (c-name "GtkAnchorType")
  (gtype-id "GTK_TYPE_ANCHOR_TYPE")
  (values
    '("center" "GTK_ANCHOR_CENTER")
    '("north" "GTK_ANCHOR_NORTH")
    '("north-west" "GTK_ANCHOR_NORTH_WEST")
    '("north-east" "GTK_ANCHOR_NORTH_EAST")
    '("south" "GTK_ANCHOR_SOUTH")
    '("south-west" "GTK_ANCHOR_SOUTH_WEST")
    '("south-east" "GTK_ANCHOR_SOUTH_EAST")
    '("west" "GTK_ANCHOR_WEST")
    '("east" "GTK_ANCHOR_EAST")
    '("n" "GTK_ANCHOR_N")
    '("nw" "GTK_ANCHOR_NW")
    '("ne" "GTK_ANCHOR_NE")
    '("s" "GTK_ANCHOR_S")
    '("sw" "GTK_ANCHOR_SW")
    '("se" "GTK_ANCHOR_SE")
    '("w" "GTK_ANCHOR_W")
    '("e" "GTK_ANCHOR_E")
  )
)

(define-enum ArrowType
  (in-module "Gtk")
  (c-name "GtkArrowType")
  (gtype-id "GTK_TYPE_ARROW_TYPE")
  (values
    '("up" "GTK_ARROW_UP")
    '("down" "GTK_ARROW_DOWN")
    '("left" "GTK_ARROW_LEFT")
    '("right" "GTK_ARROW_RIGHT")
  )
)

(define-flags AttachOptions
  (in-module "Gtk")
  (c-name "GtkAttachOptions")
  (gtype-id "GTK_TYPE_ATTACH_OPTIONS")
  (values
    '("expand" "GTK_EXPAND")
    '("shrink" "GTK_SHRINK")
    '("fill" "GTK_FILL")
  )
)

(define-enum ButtonBoxStyle
  (in-module "Gtk")
  (c-name "GtkButtonBoxStyle")
  (gtype-id "GTK_TYPE_BUTTON_BOX_STYLE")
  (values
    '("default-style" "GTK_BUTTONBOX_DEFAULT_STYLE")
    '("spread" "GTK_BUTTONBOX_SPREAD")
    '("edge" "GTK_BUTTONBOX_EDGE")
    '("start" "GTK_BUTTONBOX_START")
    '("end" "GTK_BUTTONBOX_END")
  )
)

(define-enum CurveType
  (in-module "Gtk")
  (c-name "GtkCurveType")
  (gtype-id "GTK_TYPE_CURVE_TYPE")
  (values
    '("linear" "GTK_CURVE_TYPE_LINEAR")
    '("spline" "GTK_CURVE_TYPE_SPLINE")
    '("free" "GTK_CURVE_TYPE_FREE")
  )
)

(define-enum DeleteType
  (in-module "Gtk")
  (c-name "GtkDeleteType")
  (gtype-id "GTK_TYPE_DELETE_TYPE")
  (values
    '("chars" "GTK_DELETE_CHARS")
    '("word-ends" "GTK_DELETE_WORD_ENDS")
    '("words" "GTK_DELETE_WORDS")
    '("display-lines" "GTK_DELETE_DISPLAY_LINES")
    '("display-line-ends" "GTK_DELETE_DISPLAY_LINE_ENDS")
    '("paragraph-ends" "GTK_DELETE_PARAGRAPH_ENDS")
    '("paragraphs" "GTK_DELETE_PARAGRAPHS")
    '("whitespace" "GTK_DELETE_WHITESPACE")
  )
)

(define-enum DirectionType
  (in-module "Gtk")
  (c-name "GtkDirectionType")
  (gtype-id "GTK_TYPE_DIRECTION_TYPE")
  (values
    '("tab-forward" "GTK_DIR_TAB_FORWARD")
    '("tab-backward" "GTK_DIR_TAB_BACKWARD")
    '("up" "GTK_DIR_UP")
    '("down" "GTK_DIR_DOWN")
    '("left" "GTK_DIR_LEFT")
    '("right" "GTK_DIR_RIGHT")
  )
)

(define-enum ExpanderStyle
  (in-module "Gtk")
  (c-name "GtkExpanderStyle")
  (gtype-id "GTK_TYPE_EXPANDER_STYLE")
  (values
    '("collapsed" "GTK_EXPANDER_COLLAPSED")
    '("semi-collapsed" "GTK_EXPANDER_SEMI_COLLAPSED")
    '("semi-expanded" "GTK_EXPANDER_SEMI_EXPANDED")
    '("expanded" "GTK_EXPANDER_EXPANDED")
  )
)

(define-enum IconSize
  (in-module "Gtk")
  (c-name "GtkIconSize")
  (gtype-id "GTK_TYPE_ICON_SIZE")
  (values
    '("invalid" "GTK_ICON_SIZE_INVALID")
    '("menu" "GTK_ICON_SIZE_MENU")
    '("small-toolbar" "GTK_ICON_SIZE_SMALL_TOOLBAR")
    '("large-toolbar" "GTK_ICON_SIZE_LARGE_TOOLBAR")
    '("button" "GTK_ICON_SIZE_BUTTON")
    '("dnd" "GTK_ICON_SIZE_DND")
    '("dialog" "GTK_ICON_SIZE_DIALOG")
  )
)

(define-enum SideType
  (in-module "Gtk")
  (c-name "GtkSideType")
  (gtype-id "GTK_TYPE_SIDE_TYPE")
  (values
    '("top" "GTK_SIDE_TOP")
    '("bottom" "GTK_SIDE_BOTTOM")
    '("left" "GTK_SIDE_LEFT")
    '("right" "GTK_SIDE_RIGHT")
  )
)

(define-enum TextDirection
  (in-module "Gtk")
  (c-name "GtkTextDirection")
  (gtype-id "GTK_TYPE_TEXT_DIRECTION")
  (values
    '("none" "GTK_TEXT_DIR_NONE")
    '("ltr" "GTK_TEXT_DIR_LTR")
    '("rtl" "GTK_TEXT_DIR_RTL")
  )
)

(define-enum Justification
  (in-module "Gtk")
  (c-name "GtkJustification")
  (gtype-id "GTK_TYPE_JUSTIFICATION")
  (values
    '("left" "GTK_JUSTIFY_LEFT")
    '("right" "GTK_JUSTIFY_RIGHT")
    '("center" "GTK_JUSTIFY_CENTER")
    '("fill" "GTK_JUSTIFY_FILL")
  )
)

(define-enum MatchType
  (in-module "Gtk")
  (c-name "GtkMatchType")
  (gtype-id "GTK_TYPE_MATCH_TYPE")
  (values
    '("all" "GTK_MATCH_ALL")
    '("all-tail" "GTK_MATCH_ALL_TAIL")
    '("head" "GTK_MATCH_HEAD")
    '("tail" "GTK_MATCH_TAIL")
    '("exact" "GTK_MATCH_EXACT")
    '("last" "GTK_MATCH_LAST")
  )
)

(define-enum MenuDirectionType
  (in-module "Gtk")
  (c-name "GtkMenuDirectionType")
  (gtype-id "GTK_TYPE_MENU_DIRECTION_TYPE")
  (values
    '("parent" "GTK_MENU_DIR_PARENT")
    '("child" "GTK_MENU_DIR_CHILD")
    '("next" "GTK_MENU_DIR_NEXT")
    '("prev" "GTK_MENU_DIR_PREV")
  )
)

(define-enum MetricType
  (in-module "Gtk")
  (c-name "GtkMetricType")
  (gtype-id "GTK_TYPE_METRIC_TYPE")
  (values
    '("pixels" "GTK_PIXELS")
    '("inches" "GTK_INCHES")
    '("centimeters" "GTK_CENTIMETERS")
  )
)

(define-enum MovementStep
  (in-module "Gtk")
  (c-name "GtkMovementStep")
  (gtype-id "GTK_TYPE_MOVEMENT_STEP")
  (values
    '("logical-positions" "GTK_MOVEMENT_LOGICAL_POSITIONS")
    '("visual-positions" "GTK_MOVEMENT_VISUAL_POSITIONS")
    '("words" "GTK_MOVEMENT_WORDS")
    '("display-lines" "GTK_MOVEMENT_DISPLAY_LINES")
    '("display-line-ends" "GTK_MOVEMENT_DISPLAY_LINE_ENDS")
    '("paragraphs" "GTK_MOVEMENT_PARAGRAPHS")
    '("paragraph-ends" "GTK_MOVEMENT_PARAGRAPH_ENDS")
    '("pages" "GTK_MOVEMENT_PAGES")
    '("buffer-ends" "GTK_MOVEMENT_BUFFER_ENDS")
    '("horizontal-pages" "GTK_MOVEMENT_HORIZONTAL_PAGES")
  )
)

(define-enum ScrollStep
  (in-module "Gtk")
  (c-name "GtkScrollStep")
  (gtype-id "GTK_TYPE_SCROLL_STEP")
  (values
    '("steps" "GTK_SCROLL_STEPS")
    '("pages" "GTK_SCROLL_PAGES")
    '("ends" "GTK_SCROLL_ENDS")
    '("horizontal-steps" "GTK_SCROLL_HORIZONTAL_STEPS")
    '("horizontal-pages" "GTK_SCROLL_HORIZONTAL_PAGES")
    '("horizontal-ends" "GTK_SCROLL_HORIZONTAL_ENDS")
  )
)

(define-enum Orientation
  (in-module "Gtk")
  (c-name "GtkOrientation")
  (gtype-id "GTK_TYPE_ORIENTATION")
  (values
    '("horizontal" "GTK_ORIENTATION_HORIZONTAL")
    '("vertical" "GTK_ORIENTATION_VERTICAL")
  )
)

(define-enum CornerType
  (in-module "Gtk")
  (c-name "GtkCornerType")
  (gtype-id "GTK_TYPE_CORNER_TYPE")
  (values
    '("top-left" "GTK_CORNER_TOP_LEFT")
    '("bottom-left" "GTK_CORNER_BOTTOM_LEFT")
    '("top-right" "GTK_CORNER_TOP_RIGHT")
    '("bottom-right" "GTK_CORNER_BOTTOM_RIGHT")
  )
)

(define-enum PackType
  (in-module "Gtk")
  (c-name "GtkPackType")
  (gtype-id "GTK_TYPE_PACK_TYPE")
  (values
    '("start" "GTK_PACK_START")
    '("end" "GTK_PACK_END")
  )
)

(define-enum PathPriorityType
  (in-module "Gtk")
  (c-name "GtkPathPriorityType")
  (gtype-id "GTK_TYPE_PATH_PRIORITY_TYPE")
  (values
    '("lowest" "GTK_PATH_PRIO_LOWEST")
    '("gtk" "GTK_PATH_PRIO_GTK")
    '("application" "GTK_PATH_PRIO_APPLICATION")
    '("theme" "GTK_PATH_PRIO_THEME")
    '("rc" "GTK_PATH_PRIO_RC")
    '("highest" "GTK_PATH_PRIO_HIGHEST")
  )
)

(define-enum PathType
  (in-module "Gtk")
  (c-name "GtkPathType")
  (gtype-id "GTK_TYPE_PATH_TYPE")
  (values
    '("widget" "GTK_PATH_WIDGET")
    '("widget-class" "GTK_PATH_WIDGET_CLASS")
    '("class" "GTK_PATH_CLASS")
  )
)

(define-enum PolicyType
  (in-module "Gtk")
  (c-name "GtkPolicyType")
  (gtype-id "GTK_TYPE_POLICY_TYPE")
  (values
    '("always" "GTK_POLICY_ALWAYS")
    '("automatic" "GTK_POLICY_AUTOMATIC")
    '("never" "GTK_POLICY_NEVER")
  )
)

(define-enum PositionType
  (in-module "Gtk")
  (c-name "GtkPositionType")
  (gtype-id "GTK_TYPE_POSITION_TYPE")
  (values
    '("left" "GTK_POS_LEFT")
    '("right" "GTK_POS_RIGHT")
    '("top" "GTK_POS_TOP")
    '("bottom" "GTK_POS_BOTTOM")
  )
)

(define-enum PreviewType
  (in-module "Gtk")
  (c-name "GtkPreviewType")
  (gtype-id "GTK_TYPE_PREVIEW_TYPE")
  (values
    '("color" "GTK_PREVIEW_COLOR")
    '("grayscale" "GTK_PREVIEW_GRAYSCALE")
  )
)

(define-enum ReliefStyle
  (in-module "Gtk")
  (c-name "GtkReliefStyle")
  (gtype-id "GTK_TYPE_RELIEF_STYLE")
  (values
    '("normal" "GTK_RELIEF_NORMAL")
    '("half" "GTK_RELIEF_HALF")
    '("none" "GTK_RELIEF_NONE")
  )
)

(define-enum ResizeMode
  (in-module "Gtk")
  (c-name "GtkResizeMode")
  (gtype-id "GTK_TYPE_RESIZE_MODE")
  (values
    '("parent" "GTK_RESIZE_PARENT")
    '("queue" "GTK_RESIZE_QUEUE")
    '("immediate" "GTK_RESIZE_IMMEDIATE")
  )
)

(define-enum SignalRunType
  (in-module "Gtk")
  (c-name "GtkSignalRunType")
  (gtype-id "GTK_TYPE_SIGNAL_RUN_TYPE")
  (values
    '("first" "GTK_RUN_FIRST")
    '("last" "GTK_RUN_LAST")
    '("both" "GTK_RUN_BOTH")
    '("no-recurse" "GTK_RUN_NO_RECURSE")
    '("action" "GTK_RUN_ACTION")
    '("no-hooks" "GTK_RUN_NO_HOOKS")
  )
)

(define-enum ScrollType
  (in-module "Gtk")
  (c-name "GtkScrollType")
  (gtype-id "GTK_TYPE_SCROLL_TYPE")
  (values
    '("none" "GTK_SCROLL_NONE")
    '("jump" "GTK_SCROLL_JUMP")
    '("step-backward" "GTK_SCROLL_STEP_BACKWARD")
    '("step-forward" "GTK_SCROLL_STEP_FORWARD")
    '("page-backward" "GTK_SCROLL_PAGE_BACKWARD")
    '("page-forward" "GTK_SCROLL_PAGE_FORWARD")
    '("step-up" "GTK_SCROLL_STEP_UP")
    '("step-down" "GTK_SCROLL_STEP_DOWN")
    '("page-up" "GTK_SCROLL_PAGE_UP")
    '("page-down" "GTK_SCROLL_PAGE_DOWN")
    '("step-left" "GTK_SCROLL_STEP_LEFT")
    '("step-right" "GTK_SCROLL_STEP_RIGHT")
    '("page-left" "GTK_SCROLL_PAGE_LEFT")
    '("page-right" "GTK_SCROLL_PAGE_RIGHT")
    '("start" "GTK_SCROLL_START")
    '("end" "GTK_SCROLL_END")
  )
)

(define-enum SelectionMode
  (in-module "Gtk")
  (c-name "GtkSelectionMode")
  (gtype-id "GTK_TYPE_SELECTION_MODE")
  (values
    '("none" "GTK_SELECTION_NONE")
    '("single" "GTK_SELECTION_SINGLE")
    '("browse" "GTK_SELECTION_BROWSE")
    '("multiple" "GTK_SELECTION_MULTIPLE")
    '("extended" "GTK_SELECTION_EXTENDED")
  )
)

(define-enum ShadowType
  (in-module "Gtk")
  (c-name "GtkShadowType")
  (gtype-id "GTK_TYPE_SHADOW_TYPE")
  (values
    '("none" "GTK_SHADOW_NONE")
    '("in" "GTK_SHADOW_IN")
    '("out" "GTK_SHADOW_OUT")
    '("etched-in" "GTK_SHADOW_ETCHED_IN")
    '("etched-out" "GTK_SHADOW_ETCHED_OUT")
  )
)

(define-enum StateType
  (in-module "Gtk")
  (c-name "GtkStateType")
  (gtype-id "GTK_TYPE_STATE_TYPE")
  (values
    '("normal" "GTK_STATE_NORMAL")
    '("active" "GTK_STATE_ACTIVE")
    '("prelight" "GTK_STATE_PRELIGHT")
    '("selected" "GTK_STATE_SELECTED")
    '("insensitive" "GTK_STATE_INSENSITIVE")
  )
)

(define-enum SubmenuDirection
  (in-module "Gtk")
  (c-name "GtkSubmenuDirection")
  (gtype-id "GTK_TYPE_SUBMENU_DIRECTION")
  (values
    '("left" "GTK_DIRECTION_LEFT")
    '("right" "GTK_DIRECTION_RIGHT")
  )
)

(define-enum SubmenuPlacement
  (in-module "Gtk")
  (c-name "GtkSubmenuPlacement")
  (gtype-id "GTK_TYPE_SUBMENU_PLACEMENT")
  (values
    '("top-bottom" "GTK_TOP_BOTTOM")
    '("left-right" "GTK_LEFT_RIGHT")
  )
)

(define-enum ToolbarStyle
  (in-module "Gtk")
  (c-name "GtkToolbarStyle")
  (gtype-id "GTK_TYPE_TOOLBAR_STYLE")
  (values
    '("icons" "GTK_TOOLBAR_ICONS")
    '("text" "GTK_TOOLBAR_TEXT")
    '("both" "GTK_TOOLBAR_BOTH")
    '("both-horiz" "GTK_TOOLBAR_BOTH_HORIZ")
  )
)

(define-enum UpdateType
  (in-module "Gtk")
  (c-name "GtkUpdateType")
  (gtype-id "GTK_TYPE_UPDATE_TYPE")
  (values
    '("continuous" "GTK_UPDATE_CONTINUOUS")
    '("discontinuous" "GTK_UPDATE_DISCONTINUOUS")
    '("delayed" "GTK_UPDATE_DELAYED")
  )
)

(define-enum Visibility
  (in-module "Gtk")
  (c-name "GtkVisibility")
  (gtype-id "GTK_TYPE_VISIBILITY")
  (values
    '("none" "GTK_VISIBILITY_NONE")
    '("partial" "GTK_VISIBILITY_PARTIAL")
    '("full" "GTK_VISIBILITY_FULL")
  )
)

(define-enum WindowPosition
  (in-module "Gtk")
  (c-name "GtkWindowPosition")
  (gtype-id "GTK_TYPE_WINDOW_POSITION")
  (values
    '("none" "GTK_WIN_POS_NONE")
    '("center" "GTK_WIN_POS_CENTER")
    '("mouse" "GTK_WIN_POS_MOUSE")
    '("center-always" "GTK_WIN_POS_CENTER_ALWAYS")
    '("center-on-parent" "GTK_WIN_POS_CENTER_ON_PARENT")
  )
)

(define-enum WindowType
  (in-module "Gtk")
  (c-name "GtkWindowType")
  (gtype-id "GTK_TYPE_WINDOW_TYPE")
  (values
    '("toplevel" "GTK_WINDOW_TOPLEVEL")
    '("popup" "GTK_WINDOW_POPUP")
  )
)

(define-enum WrapMode
  (in-module "Gtk")
  (c-name "GtkWrapMode")
  (gtype-id "GTK_TYPE_WRAP_MODE")
  (values
    '("none" "GTK_WRAP_NONE")
    '("char" "GTK_WRAP_CHAR")
    '("word" "GTK_WRAP_WORD")
    '("word-char" "GTK_WRAP_WORD_CHAR")
  )
)

(define-enum SortType
  (in-module "Gtk")
  (c-name "GtkSortType")
  (gtype-id "GTK_TYPE_SORT_TYPE")
  (values
    '("ascending" "GTK_SORT_ASCENDING")
    '("descending" "GTK_SORT_DESCENDING")
  )
)

(define-enum IMPreeditStyle
  (in-module "Gtk")
  (c-name "GtkIMPreeditStyle")
  (gtype-id "GTK_TYPE_IM_PREEDIT_STYLE")
  (values
    '("nothing" "GTK_IM_PREEDIT_NOTHING")
    '("callback" "GTK_IM_PREEDIT_CALLBACK")
    '("none" "GTK_IM_PREEDIT_NONE")
  )
)

(define-enum IMStatusStyle
  (in-module "Gtk")
  (c-name "GtkIMStatusStyle")
  (gtype-id "GTK_TYPE_IM_STATUS_STYLE")
  (values
    '("nothing" "GTK_IM_STATUS_NOTHING")
    '("callback" "GTK_IM_STATUS_CALLBACK")
    '("none" "GTK_IM_STATUS_NONE")
  )
)

(define-enum FileChooserAction
  (in-module "Gtk")
  (c-name "GtkFileChooserAction")
  (gtype-id "GTK_TYPE_FILE_CHOOSER_ACTION")
  (values
    '("open" "GTK_FILE_CHOOSER_ACTION_OPEN")
    '("save" "GTK_FILE_CHOOSER_ACTION_SAVE")
  )
)

(define-enum FileChooserError
  (in-module "Gtk")
  (c-name "GtkFileChooserError")
  (gtype-id "GTK_TYPE_FILE_CHOOSER_ERROR")
  (values
    '("nonexistent" "GTK_FILE_CHOOSER_ERROR_NONEXISTENT")
    '("bad-filename" "GTK_FILE_CHOOSER_ERROR_BAD_FILENAME")
  )
)

(define-enum FileChooserProp
  (in-module "Gtk")
  (c-name "GtkFileChooserProp")
  (gtype-id "GTK_TYPE_FILE_CHOOSER_PROP")
  (values
    '("first" "GTK_FILE_CHOOSER_PROP_FIRST")
    '("action" "GTK_FILE_CHOOSER_PROP_ACTION")
    '("file-system" "GTK_FILE_CHOOSER_PROP_FILE_SYSTEM")
    '("filter" "GTK_FILE_CHOOSER_PROP_FILTER")
    '("folder-mode" "GTK_FILE_CHOOSER_PROP_FOLDER_MODE")
    '("local-only" "GTK_FILE_CHOOSER_PROP_LOCAL_ONLY")
    '("preview-widget" "GTK_FILE_CHOOSER_PROP_PREVIEW_WIDGET")
    '("preview-widget-active" "GTK_FILE_CHOOSER_PROP_PREVIEW_WIDGET_ACTIVE")
    '("extra-widget" "GTK_FILE_CHOOSER_PROP_EXTRA_WIDGET")
    '("select-multiple" "GTK_FILE_CHOOSER_PROP_SELECT_MULTIPLE")
    '("show-hidden" "GTK_FILE_CHOOSER_PROP_SHOW_HIDDEN")
    '("last" "GTK_FILE_CHOOSER_PROP_LAST")
  )
)

(define-flags FileFilterFlags
  (in-module "Gtk")
  (c-name "GtkFileFilterFlags")
  (gtype-id "GTK_TYPE_FILE_FILTER_FLAGS")
  (values
    '("filename" "GTK_FILE_FILTER_FILENAME")
    '("uri" "GTK_FILE_FILTER_URI")
    '("display-name" "GTK_FILE_FILTER_DISPLAY_NAME")
    '("mime-type" "GTK_FILE_FILTER_MIME_TYPE")
  )
)

(define-flags FileInfoType
  (in-module "Gtk")
  (c-name "GtkFileInfoType")
  (gtype-id "GTK_TYPE_FILE_INFO_TYPE")
  (values
    '("display-name" "GTK_FILE_INFO_DISPLAY_NAME")
    '("is-folder" "GTK_FILE_INFO_IS_FOLDER")
    '("is-hidden" "GTK_FILE_INFO_IS_HIDDEN")
    '("mime-type" "GTK_FILE_INFO_MIME_TYPE")
    '("modification-time" "GTK_FILE_INFO_MODIFICATION_TIME")
    '("size" "GTK_FILE_INFO_SIZE")
    '("icon" "GTK_FILE_INFO_ICON")
    '("all" "GTK_FILE_INFO_ALL")
  )
)

(define-enum FileIconType
  (in-module "Gtk")
  (c-name "GtkFileIconType")
  (gtype-id "GTK_TYPE_FILE_ICON_TYPE")
  (values
    '("regular" "GTK_FILE_ICON_REGULAR")
    '("block-device" "GTK_FILE_ICON_BLOCK_DEVICE")
    '("broken-symbolic-link" "GTK_FILE_ICON_BROKEN_SYMBOLIC_LINK")
    '("character-device" "GTK_FILE_ICON_CHARACTER_DEVICE")
    '("directory" "GTK_FILE_ICON_DIRECTORY")
    '("executable" "GTK_FILE_ICON_EXECUTABLE")
    '("fifo" "GTK_FILE_ICON_FIFO")
    '("socket" "GTK_FILE_ICON_SOCKET")
  )
)

(define-enum FileSystemError
  (in-module "Gtk")
  (c-name "GtkFileSystemError")
  (gtype-id "GTK_TYPE_FILE_SYSTEM_ERROR")
  (values
    '("nonexistent" "GTK_FILE_SYSTEM_ERROR_NONEXISTENT")
    '("not-folder" "GTK_FILE_SYSTEM_ERROR_NOT_FOLDER")
    '("invalid-uri" "GTK_FILE_SYSTEM_ERROR_INVALID_URI")
    '("bad-filename" "GTK_FILE_SYSTEM_ERROR_BAD_FILENAME")
    '("failed" "GTK_FILE_SYSTEM_ERROR_FAILED")
  )
)

(define-enum FileSystemModelColumns
  (in-module "Gtk")
  (c-name "GtkFileSystemModelColumns")
  (gtype-id "GTK_TYPE_FILE_SYSTEM_MODEL_COLUMNS")
  (values
    '("info" "GTK_FILE_SYSTEM_MODEL_INFO")
    '("display-name" "GTK_FILE_SYSTEM_MODEL_DISPLAY_NAME")
    '("n-columns" "GTK_FILE_SYSTEM_MODEL_N_COLUMNS")
  )
)

(define-flags IconLookupFlags
  (in-module "Gtk")
  (c-name "GtkIconLookupFlags")
  (gtype-id "GTK_TYPE_ICON_LOOKUP_FLAGS")
  (values
    '("no-svg" "GTK_ICON_LOOKUP_NO_SVG")
    '("force-svg" "GTK_ICON_LOOKUP_FORCE_SVG")
    '("use-builtin" "GTK_ICON_LOOKUP_USE_BUILTIN")
  )
)

(define-enum IconThemeError
  (in-module "Gtk")
  (c-name "GtkIconThemeError")
  (gtype-id "GTK_TYPE_ICON_THEME_ERROR")
  (values
    '("not-found" "GTK_ICON_THEME_NOT_FOUND")
    '("failed" "GTK_ICON_THEME_FAILED")
  )
)

(define-enum IconThemeFileParseError
  (in-module "Gtk")
  (c-name "GtkIconThemeFileParseError")
  (gtype-id "GTK_TYPE_ICON_THEME_FILE_PARSE_ERROR")
  (values
    '("syntax" "GTK_ICON_THEME_FILE_PARSE_ERROR_INVALID_SYNTAX")
    '("escapes" "GTK_ICON_THEME_FILE_PARSE_ERROR_INVALID_ESCAPES")
    '("chars" "GTK_ICON_THEME_FILE_PARSE_ERROR_INVALID_CHARS")
  )
)

(define-enum ImageType
  (in-module "Gtk")
  (c-name "GtkImageType")
  (gtype-id "GTK_TYPE_IMAGE_TYPE")
  (values
    '("empty" "GTK_IMAGE_EMPTY")
    '("pixmap" "GTK_IMAGE_PIXMAP")
    '("image" "GTK_IMAGE_IMAGE")
    '("pixbuf" "GTK_IMAGE_PIXBUF")
    '("stock" "GTK_IMAGE_STOCK")
    '("icon-set" "GTK_IMAGE_ICON_SET")
    '("animation" "GTK_IMAGE_ANIMATION")
  )
)

(define-enum MessageType
  (in-module "Gtk")
  (c-name "GtkMessageType")
  (gtype-id "GTK_TYPE_MESSAGE_TYPE")
  (values
    '("info" "GTK_MESSAGE_INFO")
    '("warning" "GTK_MESSAGE_WARNING")
    '("question" "GTK_MESSAGE_QUESTION")
    '("error" "GTK_MESSAGE_ERROR")
  )
)

(define-enum ButtonsType
  (in-module "Gtk")
  (c-name "GtkButtonsType")
  (gtype-id "GTK_TYPE_BUTTONS_TYPE")
  (values
    '("none" "GTK_BUTTONS_NONE")
    '("ok" "GTK_BUTTONS_OK")
    '("close" "GTK_BUTTONS_CLOSE")
    '("cancel" "GTK_BUTTONS_CANCEL")
    '("yes-no" "GTK_BUTTONS_YES_NO")
    '("ok-cancel" "GTK_BUTTONS_OK_CANCEL")
  )
)

(define-enum NotebookTab
  (in-module "Gtk")
  (c-name "GtkNotebookTab")
  (gtype-id "GTK_TYPE_NOTEBOOK_TAB")
  (values
    '("first" "GTK_NOTEBOOK_TAB_FIRST")
    '("last" "GTK_NOTEBOOK_TAB_LAST")
  )
)

(define-flags ObjectFlags
  (in-module "Gtk")
  (c-name "GtkObjectFlags")
  (gtype-id "GTK_TYPE_OBJECT_FLAGS")
  (values
    '("in-destruction" "GTK_IN_DESTRUCTION")
    '("floating" "GTK_FLOATING")
    '("reserved-1" "GTK_RESERVED_1")
    '("reserved-2" "GTK_RESERVED_2")
  )
)

(define-flags ArgFlags
  (in-module "Gtk")
  (c-name "GtkArgFlags")
  (gtype-id "GTK_TYPE_ARG_FLAGS")
  (values
    '("readable" "GTK_ARG_READABLE")
    '("writable" "GTK_ARG_WRITABLE")
    '("construct" "GTK_ARG_CONSTRUCT")
    '("construct-only" "GTK_ARG_CONSTRUCT_ONLY")
    '("child-arg" "GTK_ARG_CHILD_ARG")
  )
)

(define-flags PrivateFlags
  (in-module "Gtk")
  (c-name "GtkPrivateFlags")
  (gtype-id "GTK_TYPE_PRIVATE_FLAGS")
  (values
    '("user-style" "PRIVATE_GTK_USER_STYLE")
    '("resize-pending" "PRIVATE_GTK_RESIZE_PENDING")
    '("leave-pending" "PRIVATE_GTK_LEAVE_PENDING")
    '("has-shape-mask" "PRIVATE_GTK_HAS_SHAPE_MASK")
    '("in-reparent" "PRIVATE_GTK_IN_REPARENT")
    '("direction-set" "PRIVATE_GTK_DIRECTION_SET")
    '("direction-ltr" "PRIVATE_GTK_DIRECTION_LTR")
    '("anchored" "PRIVATE_GTK_ANCHORED")
    '("child-visible" "PRIVATE_GTK_CHILD_VISIBLE")
    '("redraw-on-alloc" "PRIVATE_GTK_REDRAW_ON_ALLOC")
    '("alloc-needed" "PRIVATE_GTK_ALLOC_NEEDED")
    '("request-needed" "PRIVATE_GTK_REQUEST_NEEDED")
  )
)

(define-enum ProgressBarStyle
  (in-module "Gtk")
  (c-name "GtkProgressBarStyle")
  (gtype-id "GTK_TYPE_PROGRESS_BAR_STYLE")
  (values
    '("continuous" "GTK_PROGRESS_CONTINUOUS")
    '("discrete" "GTK_PROGRESS_DISCRETE")
  )
)

(define-enum ProgressBarOrientation
  (in-module "Gtk")
  (c-name "GtkProgressBarOrientation")
  (gtype-id "GTK_TYPE_PROGRESS_BAR_ORIENTATION")
  (values
    '("left-to-right" "GTK_PROGRESS_LEFT_TO_RIGHT")
    '("right-to-left" "GTK_PROGRESS_RIGHT_TO_LEFT")
    '("bottom-to-top" "GTK_PROGRESS_BOTTOM_TO_TOP")
    '("top-to-bottom" "GTK_PROGRESS_TOP_TO_BOTTOM")
  )
)

(define-flags RBNodeColor
  (in-module "Gtk")
  (c-name "GtkRBNodeColor")
  (gtype-id "GTK_TYPE_RB_NODE_COLOR")
  (values
    '("black" "GTK_RBNODE_BLACK")
    '("red" "GTK_RBNODE_RED")
    '("is-parent" "GTK_RBNODE_IS_PARENT")
    '("is-selected" "GTK_RBNODE_IS_SELECTED")
    '("is-prelit" "GTK_RBNODE_IS_PRELIT")
    '("is-semi-collapsed" "GTK_RBNODE_IS_SEMI_COLLAPSED")
    '("is-semi-expanded" "GTK_RBNODE_IS_SEMI_EXPANDED")
    '("invalid" "GTK_RBNODE_INVALID")
    '("column-invalid" "GTK_RBNODE_COLUMN_INVALID")
    '("descendants-invalid" "GTK_RBNODE_DESCENDANTS_INVALID")
    '("non-colors" "GTK_RBNODE_NON_COLORS")
  )
)

(define-flags RcFlags
  (in-module "Gtk")
  (c-name "GtkRcFlags")
  (gtype-id "GTK_TYPE_RC_FLAGS")
  (values
    '("fg" "GTK_RC_FG")
    '("bg" "GTK_RC_BG")
    '("text" "GTK_RC_TEXT")
    '("base" "GTK_RC_BASE")
  )
)

(define-enum RcTokenType
  (in-module "Gtk")
  (c-name "GtkRcTokenType")
  (gtype-id "GTK_TYPE_RC_TOKEN_TYPE")
  (values
    '("invalid" "GTK_RC_TOKEN_INVALID")
    '("include" "GTK_RC_TOKEN_INCLUDE")
    '("normal" "GTK_RC_TOKEN_NORMAL")
    '("active" "GTK_RC_TOKEN_ACTIVE")
    '("prelight" "GTK_RC_TOKEN_PRELIGHT")
    '("selected" "GTK_RC_TOKEN_SELECTED")
    '("insensitive" "GTK_RC_TOKEN_INSENSITIVE")
    '("fg" "GTK_RC_TOKEN_FG")
    '("bg" "GTK_RC_TOKEN_BG")
    '("text" "GTK_RC_TOKEN_TEXT")
    '("base" "GTK_RC_TOKEN_BASE")
    '("xthickness" "GTK_RC_TOKEN_XTHICKNESS")
    '("ythickness" "GTK_RC_TOKEN_YTHICKNESS")
    '("font" "GTK_RC_TOKEN_FONT")
    '("fontset" "GTK_RC_TOKEN_FONTSET")
    '("font-name" "GTK_RC_TOKEN_FONT_NAME")
    '("bg-pixmap" "GTK_RC_TOKEN_BG_PIXMAP")
    '("pixmap-path" "GTK_RC_TOKEN_PIXMAP_PATH")
    '("style" "GTK_RC_TOKEN_STYLE")
    '("binding" "GTK_RC_TOKEN_BINDING")
    '("bind" "GTK_RC_TOKEN_BIND")
    '("widget" "GTK_RC_TOKEN_WIDGET")
    '("widget-class" "GTK_RC_TOKEN_WIDGET_CLASS")
    '("class" "GTK_RC_TOKEN_CLASS")
    '("lowest" "GTK_RC_TOKEN_LOWEST")
    '("gtk" "GTK_RC_TOKEN_GTK")
    '("application" "GTK_RC_TOKEN_APPLICATION")
    '("theme" "GTK_RC_TOKEN_THEME")
    '("rc" "GTK_RC_TOKEN_RC")
    '("highest" "GTK_RC_TOKEN_HIGHEST")
    '("engine" "GTK_RC_TOKEN_ENGINE")
    '("module-path" "GTK_RC_TOKEN_MODULE_PATH")
    '("im-module-path" "GTK_RC_TOKEN_IM_MODULE_PATH")
    '("im-module-file" "GTK_RC_TOKEN_IM_MODULE_FILE")
    '("stock" "GTK_RC_TOKEN_STOCK")
    '("ltr" "GTK_RC_TOKEN_LTR")
    '("rtl" "GTK_RC_TOKEN_RTL")
    '("last" "GTK_RC_TOKEN_LAST")
  )
)

(define-enum SizeGroupMode
  (in-module "Gtk")
  (c-name "GtkSizeGroupMode")
  (gtype-id "GTK_TYPE_SIZE_GROUP_MODE")
  (values
    '("none" "GTK_SIZE_GROUP_NONE")
    '("horizontal" "GTK_SIZE_GROUP_HORIZONTAL")
    '("vertical" "GTK_SIZE_GROUP_VERTICAL")
    '("both" "GTK_SIZE_GROUP_BOTH")
  )
)

(define-enum SpinButtonUpdatePolicy
  (in-module "Gtk")
  (c-name "GtkSpinButtonUpdatePolicy")
  (gtype-id "GTK_TYPE_SPIN_BUTTON_UPDATE_POLICY")
  (values
    '("always" "GTK_UPDATE_ALWAYS")
    '("if-valid" "GTK_UPDATE_IF_VALID")
  )
)

(define-enum SpinType
  (in-module "Gtk")
  (c-name "GtkSpinType")
  (gtype-id "GTK_TYPE_SPIN_TYPE")
  (values
    '("step-forward" "GTK_SPIN_STEP_FORWARD")
    '("step-backward" "GTK_SPIN_STEP_BACKWARD")
    '("page-forward" "GTK_SPIN_PAGE_FORWARD")
    '("page-backward" "GTK_SPIN_PAGE_BACKWARD")
    '("home" "GTK_SPIN_HOME")
    '("end" "GTK_SPIN_END")
    '("user-defined" "GTK_SPIN_USER_DEFINED")
  )
)

(define-flags TextSearchFlags
  (in-module "Gtk")
  (c-name "GtkTextSearchFlags")
  (gtype-id "GTK_TYPE_TEXT_SEARCH_FLAGS")
  (values
    '("visible-only" "GTK_TEXT_SEARCH_VISIBLE_ONLY")
    '("text-only" "GTK_TEXT_SEARCH_TEXT_ONLY")
  )
)

(define-enum TextWindowType
  (in-module "Gtk")
  (c-name "GtkTextWindowType")
  (gtype-id "GTK_TYPE_TEXT_WINDOW_TYPE")
  (values
    '("private" "GTK_TEXT_WINDOW_PRIVATE")
    '("widget" "GTK_TEXT_WINDOW_WIDGET")
    '("text" "GTK_TEXT_WINDOW_TEXT")
    '("left" "GTK_TEXT_WINDOW_LEFT")
    '("right" "GTK_TEXT_WINDOW_RIGHT")
    '("top" "GTK_TEXT_WINDOW_TOP")
    '("bottom" "GTK_TEXT_WINDOW_BOTTOM")
  )
)

(define-enum ToolbarChildType
  (in-module "Gtk")
  (c-name "GtkToolbarChildType")
  (gtype-id "GTK_TYPE_TOOLBAR_CHILD_TYPE")
  (values
    '("space" "GTK_TOOLBAR_CHILD_SPACE")
    '("button" "GTK_TOOLBAR_CHILD_BUTTON")
    '("togglebutton" "GTK_TOOLBAR_CHILD_TOGGLEBUTTON")
    '("radiobutton" "GTK_TOOLBAR_CHILD_RADIOBUTTON")
    '("widget" "GTK_TOOLBAR_CHILD_WIDGET")
  )
)

(define-enum ToolbarSpaceStyle
  (in-module "Gtk")
  (c-name "GtkToolbarSpaceStyle")
  (gtype-id "GTK_TYPE_TOOLBAR_SPACE_STYLE")
  (values
    '("empty" "GTK_TOOLBAR_SPACE_EMPTY")
    '("line" "GTK_TOOLBAR_SPACE_LINE")
  )
)

(define-enum TreeViewMode
  (in-module "Gtk")
  (c-name "GtkTreeViewMode")
  (gtype-id "GTK_TYPE_TREE_VIEW_MODE")
  (values
    '("line" "GTK_TREE_VIEW_LINE")
    '("item" "GTK_TREE_VIEW_ITEM")
  )
)

(define-flags TreeModelFlags
  (in-module "Gtk")
  (c-name "GtkTreeModelFlags")
  (gtype-id "GTK_TYPE_TREE_MODEL_FLAGS")
  (values
    '("iters-persist" "GTK_TREE_MODEL_ITERS_PERSIST")
    '("list-only" "GTK_TREE_MODEL_LIST_ONLY")
  )
)

(define-flags TreeViewFlags
  (in-module "Gtk")
  (c-name "GtkTreeViewFlags")
  (gtype-id "GTK_TYPE_TREE_VIEW_FLAGS")
  (values
    '("is-list" "GTK_TREE_VIEW_IS_LIST")
    '("show-expanders" "GTK_TREE_VIEW_SHOW_EXPANDERS")
    '("in-column-resize" "GTK_TREE_VIEW_IN_COLUMN_RESIZE")
    '("arrow-prelit" "GTK_TREE_VIEW_ARROW_PRELIT")
    '("headers-visible" "GTK_TREE_VIEW_HEADERS_VISIBLE")
    '("draw-keyfocus" "GTK_TREE_VIEW_DRAW_KEYFOCUS")
    '("model-setup" "GTK_TREE_VIEW_MODEL_SETUP")
    '("in-column-drag" "GTK_TREE_VIEW_IN_COLUMN_DRAG")
  )
)

(define-flags TreeSelectMode
  (in-module "Gtk")
  (c-name "GtkTreeSelectMode")
  (gtype-id "GTK_TYPE_TREE_SELECT_MODE")
  (values
    '("toggle" "GTK_TREE_SELECT_MODE_TOGGLE")
    '("extend" "GTK_TREE_SELECT_MODE_EXTEND")
  )
)

(define-enum TreeViewColumnSizing
  (in-module "Gtk")
  (c-name "GtkTreeViewColumnSizing")
  (gtype-id "GTK_TYPE_TREE_VIEW_COLUMN_SIZING")
  (values
    '("grow-only" "GTK_TREE_VIEW_COLUMN_GROW_ONLY")
    '("autosize" "GTK_TREE_VIEW_COLUMN_AUTOSIZE")
    '("fixed" "GTK_TREE_VIEW_COLUMN_FIXED")
  )
)

(define-enum TreeViewDropPosition
  (in-module "Gtk")
  (c-name "GtkTreeViewDropPosition")
  (gtype-id "GTK_TYPE_TREE_VIEW_DROP_POSITION")
  (values
    '("before" "GTK_TREE_VIEW_DROP_BEFORE")
    '("after" "GTK_TREE_VIEW_DROP_AFTER")
    '("into-or-before" "GTK_TREE_VIEW_DROP_INTO_OR_BEFORE")
    '("into-or-after" "GTK_TREE_VIEW_DROP_INTO_OR_AFTER")
  )
)

(define-enum UIManagerItemType
  (in-module "Gtk")
  (c-name "GtkUIManagerItemType")
  (gtype-id "GTK_TYPE_UI_MANAGER_ITEM_TYPE")
  (values
    '("auto" "GTK_UI_MANAGER_AUTO")
    '("menubar" "GTK_UI_MANAGER_MENUBAR")
    '("menu" "GTK_UI_MANAGER_MENU")
    '("toolbar" "GTK_UI_MANAGER_TOOLBAR")
    '("placeholder" "GTK_UI_MANAGER_PLACEHOLDER")
    '("popup" "GTK_UI_MANAGER_POPUP")
    '("menuitem" "GTK_UI_MANAGER_MENUITEM")
    '("toolitem" "GTK_UI_MANAGER_TOOLITEM")
    '("separator" "GTK_UI_MANAGER_SEPARATOR")
    '("accelerator" "GTK_UI_MANAGER_ACCELERATOR")
  )
)

(define-flags WidgetFlags
  (in-module "Gtk")
  (c-name "GtkWidgetFlags")
  (gtype-id "GTK_TYPE_WIDGET_FLAGS")
  (values
    '("toplevel" "GTK_TOPLEVEL")
    '("no-window" "GTK_NO_WINDOW")
    '("realized" "GTK_REALIZED")
    '("mapped" "GTK_MAPPED")
    '("visible" "GTK_VISIBLE")
    '("sensitive" "GTK_SENSITIVE")
    '("parent-sensitive" "GTK_PARENT_SENSITIVE")
    '("can-focus" "GTK_CAN_FOCUS")
    '("has-focus" "GTK_HAS_FOCUS")
    '("can-default" "GTK_CAN_DEFAULT")
    '("has-default" "GTK_HAS_DEFAULT")
    '("has-grab" "GTK_HAS_GRAB")
    '("rc-style" "GTK_RC_STYLE")
    '("composite-child" "GTK_COMPOSITE_CHILD")
    '("no-reparent" "GTK_NO_REPARENT")
    '("app-paintable" "GTK_APP_PAINTABLE")
    '("receives-default" "GTK_RECEIVES_DEFAULT")
    '("double-buffered" "GTK_DOUBLE_BUFFERED")
    '("no-show-all" "GTK_NO_SHOW_ALL")
  )
)

(define-enum WidgetHelpType
  (in-module "Gtk")
  (c-name "GtkWidgetHelpType")
  (gtype-id "GTK_TYPE_WIDGET_HELP_TYPE")
  (values
    '("tooltip" "GTK_WIDGET_HELP_TOOLTIP")
    '("whats-this" "GTK_WIDGET_HELP_WHATS_THIS")
  )
)

(define-enum EmbedMessageType
  (in-module "X")
  (c-name "XEmbedMessageType")
  (gtype-id "X_TYPE_EMBED_MESSAGE_TYPE")
  (values
    '("embedded-notify" "XEMBED_EMBEDDED_NOTIFY")
    '("window-activate" "XEMBED_WINDOW_ACTIVATE")
    '("window-deactivate" "XEMBED_WINDOW_DEACTIVATE")
    '("request-focus" "XEMBED_REQUEST_FOCUS")
    '("focus-in" "XEMBED_FOCUS_IN")
    '("focus-out" "XEMBED_FOCUS_OUT")
    '("focus-next" "XEMBED_FOCUS_NEXT")
    '("focus-prev" "XEMBED_FOCUS_PREV")
    '("grab-key" "XEMBED_GRAB_KEY")
    '("ungrab-key" "XEMBED_UNGRAB_KEY")
    '("modality-on" "XEMBED_MODALITY_ON")
    '("modality-off" "XEMBED_MODALITY_OFF")
    '("gtk-grab-key" "XEMBED_GTK_GRAB_KEY")
    '("gtk-ungrab-key" "XEMBED_GTK_UNGRAB_KEY")
  )
)


;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkaccelgroup.h

(define-function gtk_accel_group_get_type
  (c-name "gtk_accel_group_get_type")
  (return-type "GType")
)

(define-function gtk_accel_group_new
  (c-name "gtk_accel_group_new")
  (is-constructor-of "GtkAccelGroup")
  (return-type "GtkAccelGroup*")
)

(define-method lock
  (of-object "GtkAccelGroup")
  (c-name "gtk_accel_group_lock")
  (return-type "none")
)

(define-method unlock
  (of-object "GtkAccelGroup")
  (c-name "gtk_accel_group_unlock")
  (return-type "none")
)

(define-method connect
  (of-object "GtkAccelGroup")
  (c-name "gtk_accel_group_connect")
  (return-type "none")
  (parameters
    '("guint" "accel_key")
    '("GdkModifierType" "accel_mods")
    '("GtkAccelFlags" "accel_flags")
    '("GClosure*" "closure")
  )
)

(define-method connect_by_path
  (of-object "GtkAccelGroup")
  (c-name "gtk_accel_group_connect_by_path")
  (return-type "none")
  (parameters
    '("const-gchar*" "accel_path")
    '("GClosure*" "closure")
  )
)

(define-method disconnect
  (of-object "GtkAccelGroup")
  (c-name "gtk_accel_group_disconnect")
  (return-type "gboolean")
  (parameters
    '("GClosure*" "closure")
  )
)

(define-method disconnect_key
  (of-object "GtkAccelGroup")
  (c-name "gtk_accel_group_disconnect_key")
  (return-type "gboolean")
  (parameters
    '("guint" "accel_key")
    '("GdkModifierType" "accel_mods")
  )
)

(define-method _attach
  (of-object "GtkAccelGroup")
  (c-name "_gtk_accel_group_attach")
  (return-type "none")
  (parameters
    '("GObject*" "object")
  )
)

(define-method _detach
  (of-object "GtkAccelGroup")
  (c-name "_gtk_accel_group_detach")
  (return-type "none")
  (parameters
    '("GObject*" "object")
  )
)

(define-function gtk_accel_groups_activate
  (c-name "gtk_accel_groups_activate")
  (return-type "gboolean")
  (parameters
    '("GObject*" "object")
    '("guint" "accel_key")
    '("GdkModifierType" "accel_mods")
  )
)

(define-function gtk_accel_groups_from_object
  (c-name "gtk_accel_groups_from_object")
  (return-type "GSList*")
  (parameters
    '("GObject*" "object")
  )
)

(define-method find
  (of-object "GtkAccelGroup")
  (c-name "gtk_accel_group_find")
  (return-type "GtkAccelKey*")
  (parameters
    '("GtkAccelGroupFindFunc" "find_func")
    '("gpointer" "data")
  )
)

(define-function gtk_accel_group_from_accel_closure
  (c-name "gtk_accel_group_from_accel_closure")
  (return-type "GtkAccelGroup*")
  (parameters
    '("GClosure*" "closure")
  )
)

(define-function gtk_accelerator_valid
  (c-name "gtk_accelerator_valid")
  (return-type "gboolean")
  (parameters
    '("guint" "keyval")
    '("GdkModifierType" "modifiers")
  )
)

(define-function gtk_accelerator_parse
  (c-name "gtk_accelerator_parse")
  (return-type "none")
  (parameters
    '("const-gchar*" "accelerator")
    '("guint*" "accelerator_key")
    '("GdkModifierType*" "accelerator_mods")
  )
)

(define-function gtk_accelerator_name
  (c-name "gtk_accelerator_name")
  (return-type "gchar*")
  (parameters
    '("guint" "accelerator_key")
    '("GdkModifierType" "accelerator_mods")
  )
)

(define-function gtk_accelerator_set_default_mod_mask
  (c-name "gtk_accelerator_set_default_mod_mask")
  (return-type "none")
  (parameters
    '("GdkModifierType" "default_mod_mask")
  )
)

(define-function gtk_accelerator_get_default_mod_mask
  (c-name "gtk_accelerator_get_default_mod_mask")
  (return-type "guint")
)

(define-method query
  (of-object "GtkAccelGroup")
  (c-name "gtk_accel_group_query")
  (return-type "GtkAccelGroupEntry*")
  (parameters
    '("guint" "accel_key")
    '("GdkModifierType" "accel_mods")
    '("guint*" "n_entries")
  )
)

(define-method _reconnect
  (of-object "GtkAccelGroup")
  (c-name "_gtk_accel_group_reconnect")
  (return-type "none")
  (parameters
    '("GQuark" "accel_path_quark")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkaccellabel.h

(define-function gtk_accel_label_get_type
  (c-name "gtk_accel_label_get_type")
  (return-type "GType")
)

(define-function gtk_accel_label_new
  (c-name "gtk_accel_label_new")
  (is-constructor-of "GtkAccelLabel")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "string")
  )
)

(define-method get_accel_widget
  (of-object "GtkAccelLabel")
  (c-name "gtk_accel_label_get_accel_widget")
  (return-type "GtkWidget*")
)

(define-method get_accel_width
  (of-object "GtkAccelLabel")
  (c-name "gtk_accel_label_get_accel_width")
  (return-type "guint")
)

(define-method set_accel_widget
  (of-object "GtkAccelLabel")
  (c-name "gtk_accel_label_set_accel_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "accel_widget")
  )
)

(define-method set_accel_closure
  (of-object "GtkAccelLabel")
  (c-name "gtk_accel_label_set_accel_closure")
  (return-type "none")
  (parameters
    '("GClosure*" "accel_closure")
  )
)

(define-method refetch
  (of-object "GtkAccelLabel")
  (c-name "gtk_accel_label_refetch")
  (return-type "gboolean")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkaccelmap.h

(define-function gtk_accel_map_lookup_entry
  (c-name "gtk_accel_map_lookup_entry")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "accel_path")
    '("GtkAccelKey*" "key")
  )
)

(define-function gtk_accel_map_change_entry
  (c-name "gtk_accel_map_change_entry")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "accel_path")
    '("guint" "accel_key")
    '("GdkModifierType" "accel_mods")
    '("gboolean" "replace")
  )
)

(define-function gtk_accel_map_load
  (c-name "gtk_accel_map_load")
  (return-type "none")
  (parameters
    '("const-gchar*" "file_name")
  )
)

(define-function gtk_accel_map_save
  (c-name "gtk_accel_map_save")
  (return-type "none")
  (parameters
    '("const-gchar*" "file_name")
  )
)

(define-function gtk_accel_map_foreach
  (c-name "gtk_accel_map_foreach")
  (return-type "none")
  (parameters
    '("gpointer" "data")
    '("GtkAccelMapForeach" "foreach_func")
  )
)

(define-function gtk_accel_map_load_fd
  (c-name "gtk_accel_map_load_fd")
  (return-type "none")
  (parameters
    '("gint" "fd")
  )
)

(define-function gtk_accel_map_load_scanner
  (c-name "gtk_accel_map_load_scanner")
  (return-type "none")
  (parameters
    '("GScanner*" "scanner")
  )
)

(define-function gtk_accel_map_save_fd
  (c-name "gtk_accel_map_save_fd")
  (return-type "none")
  (parameters
    '("gint" "fd")
  )
)

(define-function gtk_accel_map_add_filter
  (c-name "gtk_accel_map_add_filter")
  (return-type "none")
  (parameters
    '("const-gchar*" "filter_pattern")
  )
)

(define-function gtk_accel_map_foreach_unfiltered
  (c-name "gtk_accel_map_foreach_unfiltered")
  (return-type "none")
  (parameters
    '("gpointer" "data")
    '("GtkAccelMapForeach" "foreach_func")
  )
)

(define-function _gtk_accel_map_init
  (c-name "_gtk_accel_map_init")
  (return-type "none")
)

(define-function _gtk_accel_map_add_group
  (c-name "_gtk_accel_map_add_group")
  (return-type "none")
  (parameters
    '("const-gchar*" "accel_path")
    '("GtkAccelGroup*" "accel_group")
  )
)

(define-function _gtk_accel_map_remove_group
  (c-name "_gtk_accel_map_remove_group")
  (return-type "none")
  (parameters
    '("const-gchar*" "accel_path")
    '("GtkAccelGroup*" "accel_group")
  )
)

(define-function _gtk_accel_path_is_valid
  (c-name "_gtk_accel_path_is_valid")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "accel_path")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkaccessible.h

(define-function gtk_accessible_get_type
  (c-name "gtk_accessible_get_type")
  (return-type "GType")
)

(define-method connect_widget_destroyed
  (of-object "GtkAccessible")
  (c-name "gtk_accessible_connect_widget_destroyed")
  (return-type "none")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkactiongroup.h

(define-function gtk_action_group_get_type
  (c-name "gtk_action_group_get_type")
  (return-type "GType")
)

(define-function gtk_action_group_new
  (c-name "gtk_action_group_new")
  (is-constructor-of "GtkActionGroup")
  (return-type "GtkActionGroup*")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method get_name
  (of-object "GtkActionGroup")
  (c-name "gtk_action_group_get_name")
  (return-type "const-gchar*")
)

(define-method get_action
  (of-object "GtkActionGroup")
  (c-name "gtk_action_group_get_action")
  (return-type "GtkAction*")
  (parameters
    '("const-gchar*" "action_name")
  )
)

(define-method list_actions
  (of-object "GtkActionGroup")
  (c-name "gtk_action_group_list_actions")
  (return-type "GList*")
)

(define-method add_action
  (of-object "GtkActionGroup")
  (c-name "gtk_action_group_add_action")
  (return-type "none")
  (parameters
    '("GtkAction*" "action")
  )
)

(define-method remove_action
  (of-object "GtkActionGroup")
  (c-name "gtk_action_group_remove_action")
  (return-type "none")
  (parameters
    '("GtkAction*" "action")
  )
)

(define-method add_actions
  (of-object "GtkActionGroup")
  (c-name "gtk_action_group_add_actions")
  (return-type "none")
  (parameters
    '("GtkActionEntry*" "entries")
    '("guint" "n_entries")
    '("gpointer" "user_data")
  )
)

(define-method add_toggle_actions
  (of-object "GtkActionGroup")
  (c-name "gtk_action_group_add_toggle_actions")
  (return-type "none")
  (parameters
    '("GtkToggleActionEntry*" "entries")
    '("guint" "n_entries")
    '("gpointer" "user_data")
  )
)

(define-method add_radio_actions
  (of-object "GtkActionGroup")
  (c-name "gtk_action_group_add_radio_actions")
  (return-type "none")
  (parameters
    '("GtkRadioActionEntry*" "entries")
    '("guint" "n_entries")
    '("gint" "value")
    '("GCallback" "on_change")
    '("gpointer" "user_data")
  )
)

(define-method add_actions_full
  (of-object "GtkActionGroup")
  (c-name "gtk_action_group_add_actions_full")
  (return-type "none")
  (parameters
    '("GtkActionEntry*" "entries")
    '("guint" "n_entries")
    '("gpointer" "user_data")
    '("GDestroyNotify" "destroy")
  )
)

(define-method add_toggle_actions_full
  (of-object "GtkActionGroup")
  (c-name "gtk_action_group_add_toggle_actions_full")
  (return-type "none")
  (parameters
    '("GtkToggleActionEntry*" "entries")
    '("guint" "n_entries")
    '("gpointer" "user_data")
    '("GDestroyNotify" "destroy")
  )
)

(define-method add_radio_actions_full
  (of-object "GtkActionGroup")
  (c-name "gtk_action_group_add_radio_actions_full")
  (return-type "none")
  (parameters
    '("GtkRadioActionEntry*" "entries")
    '("guint" "n_entries")
    '("gint" "value")
    '("GCallback" "on_change")
    '("gpointer" "user_data")
    '("GDestroyNotify" "destroy")
  )
)

(define-method set_translate_func
  (of-object "GtkActionGroup")
  (c-name "gtk_action_group_set_translate_func")
  (return-type "none")
  (parameters
    '("GtkTranslateFunc" "func")
    '("gpointer" "data")
    '("GtkDestroyNotify" "notify")
  )
)

(define-method set_translation_domain
  (of-object "GtkActionGroup")
  (c-name "gtk_action_group_set_translation_domain")
  (return-type "none")
  (parameters
    '("const-gchar*" "domain")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkaction.h

(define-function gtk_action_get_type
  (c-name "gtk_action_get_type")
  (return-type "GType")
)

(define-method get_name
  (of-object "GtkAction")
  (c-name "gtk_action_get_name")
  (return-type "const-gchar*")
)

(define-method activate
  (of-object "GtkAction")
  (c-name "gtk_action_activate")
  (return-type "none")
)

(define-method create_icon
  (of-object "GtkAction")
  (c-name "gtk_action_create_icon")
  (return-type "GtkWidget*")
  (parameters
    '("GtkIconSize" "icon_size")
  )
)

(define-method create_menu_item
  (of-object "GtkAction")
  (c-name "gtk_action_create_menu_item")
  (return-type "GtkWidget*")
)

(define-method create_tool_item
  (of-object "GtkAction")
  (c-name "gtk_action_create_tool_item")
  (return-type "GtkWidget*")
)

(define-method connect_proxy
  (of-object "GtkAction")
  (c-name "gtk_action_connect_proxy")
  (return-type "none")
  (parameters
    '("GtkWidget*" "proxy")
  )
)

(define-method disconnect_proxy
  (of-object "GtkAction")
  (c-name "gtk_action_disconnect_proxy")
  (return-type "none")
  (parameters
    '("GtkWidget*" "proxy")
  )
)

(define-method get_proxies
  (of-object "GtkAction")
  (c-name "gtk_action_get_proxies")
  (return-type "GSList*")
)

(define-method connect_accelerator
  (of-object "GtkAction")
  (c-name "gtk_action_connect_accelerator")
  (return-type "none")
)

(define-method disconnect_accelerator
  (of-object "GtkAction")
  (c-name "gtk_action_disconnect_accelerator")
  (return-type "none")
)

(define-method block_activate_from
  (of-object "GtkAction")
  (c-name "gtk_action_block_activate_from")
  (return-type "none")
  (parameters
    '("GtkWidget*" "proxy")
  )
)

(define-method unblock_activate_from
  (of-object "GtkAction")
  (c-name "gtk_action_unblock_activate_from")
  (return-type "none")
  (parameters
    '("GtkWidget*" "proxy")
  )
)

(define-method set_accel_path
  (of-object "GtkAction")
  (c-name "gtk_action_set_accel_path")
  (return-type "none")
  (parameters
    '("const-gchar*" "accel_path")
  )
)

(define-method set_accel_group
  (of-object "GtkAction")
  (c-name "gtk_action_set_accel_group")
  (return-type "none")
  (parameters
    '("GtkAccelGroup*" "accel_group")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkadjustment.h

(define-function gtk_adjustment_get_type
  (c-name "gtk_adjustment_get_type")
  (return-type "GType")
)

(define-function gtk_adjustment_new
  (c-name "gtk_adjustment_new")
  (is-constructor-of "GtkAdjustment")
  (return-type "GtkObject*")
  (parameters
    '("gdouble" "value")
    '("gdouble" "lower")
    '("gdouble" "upper")
    '("gdouble" "step_increment")
    '("gdouble" "page_increment")
    '("gdouble" "page_size")
  )
)

(define-method changed
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_changed")
  (return-type "none")
)

(define-method value_changed
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_value_changed")
  (return-type "none")
)

(define-method clamp_page
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_clamp_page")
  (return-type "none")
  (parameters
    '("gdouble" "lower")
    '("gdouble" "upper")
  )
)

(define-method get_value
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_get_value")
  (return-type "gdouble")
)

(define-method set_value
  (of-object "GtkAdjustment")
  (c-name "gtk_adjustment_set_value")
  (return-type "none")
  (parameters
    '("gdouble" "value")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkalignment.h

(define-function gtk_alignment_get_type
  (c-name "gtk_alignment_get_type")
  (return-type "GType")
)

(define-function gtk_alignment_new
  (c-name "gtk_alignment_new")
  (is-constructor-of "GtkAlignment")
  (return-type "GtkWidget*")
  (parameters
    '("gfloat" "xalign")
    '("gfloat" "yalign")
    '("gfloat" "xscale")
    '("gfloat" "yscale")
  )
)

(define-method set
  (of-object "GtkAlignment")
  (c-name "gtk_alignment_set")
  (return-type "none")
  (parameters
    '("gfloat" "xalign")
    '("gfloat" "yalign")
    '("gfloat" "xscale")
    '("gfloat" "yscale")
  )
)

(define-method set_padding
  (of-object "GtkAlignment")
  (c-name "gtk_alignment_set_padding")
  (return-type "none")
  (parameters
    '("guint" "padding_top")
    '("guint" "padding_bottom")
    '("guint" "padding_left")
    '("guint" "padding_right")
  )
)

(define-method get_padding
  (of-object "GtkAlignment")
  (c-name "gtk_alignment_get_padding")
  (return-type "none")
  (parameters
    '("guint*" "padding_top")
    '("guint*" "padding_bottom")
    '("guint*" "padding_left")
    '("guint*" "padding_right")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkarrow.h

(define-function gtk_arrow_get_type
  (c-name "gtk_arrow_get_type")
  (return-type "GType")
)

(define-function gtk_arrow_new
  (c-name "gtk_arrow_new")
  (is-constructor-of "GtkArrow")
  (return-type "GtkWidget*")
  (parameters
    '("GtkArrowType" "arrow_type")
    '("GtkShadowType" "shadow_type")
  )
)

(define-method set
  (of-object "GtkArrow")
  (c-name "gtk_arrow_set")
  (return-type "none")
  (parameters
    '("GtkArrowType" "arrow_type")
    '("GtkShadowType" "shadow_type")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkaspectframe.h

(define-function gtk_aspect_frame_get_type
  (c-name "gtk_aspect_frame_get_type")
  (return-type "GType")
)

(define-function gtk_aspect_frame_new
  (c-name "gtk_aspect_frame_new")
  (is-constructor-of "GtkAspectFrame")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "label")
    '("gfloat" "xalign")
    '("gfloat" "yalign")
    '("gfloat" "ratio")
    '("gboolean" "obey_child")
  )
)

(define-method set
  (of-object "GtkAspectFrame")
  (c-name "gtk_aspect_frame_set")
  (return-type "none")
  (parameters
    '("gfloat" "xalign")
    '("gfloat" "yalign")
    '("gfloat" "ratio")
    '("gboolean" "obey_child")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkbbox.h

(define-function gtk_button_box_get_type
  (c-name "gtk_button_box_get_type")
  (return-type "GType")
)

(define-method get_layout
  (of-object "GtkButtonBox")
  (c-name "gtk_button_box_get_layout")
  (return-type "GtkButtonBoxStyle")
)

(define-method set_layout
  (of-object "GtkButtonBox")
  (c-name "gtk_button_box_set_layout")
  (return-type "none")
  (parameters
    '("GtkButtonBoxStyle" "layout_style")
  )
)

(define-method get_child_secondary
  (of-object "GtkButtonBox")
  (c-name "gtk_button_box_get_child_secondary")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method set_child_secondary
  (of-object "GtkButtonBox")
  (c-name "gtk_button_box_set_child_secondary")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("gboolean" "is_secondary")
  )
)

(define-method set_child_size
  (of-object "GtkButtonBox")
  (c-name "gtk_button_box_set_child_size")
  (return-type "none")
  (parameters
    '("gint" "min_width")
    '("gint" "min_height")
  )
)

(define-method set_child_ipadding
  (of-object "GtkButtonBox")
  (c-name "gtk_button_box_set_child_ipadding")
  (return-type "none")
  (parameters
    '("gint" "ipad_x")
    '("gint" "ipad_y")
  )
)

(define-method get_child_size
  (of-object "GtkButtonBox")
  (c-name "gtk_button_box_get_child_size")
  (return-type "none")
  (parameters
    '("gint*" "min_width")
    '("gint*" "min_height")
  )
)

(define-method get_child_ipadding
  (of-object "GtkButtonBox")
  (c-name "gtk_button_box_get_child_ipadding")
  (return-type "none")
  (parameters
    '("gint*" "ipad_x")
    '("gint*" "ipad_y")
  )
)

(define-function _gtk_button_box_child_requisition
  (c-name "_gtk_button_box_child_requisition")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("int*" "nvis_children")
    '("int*" "nvis_secondaries")
    '("int*" "width")
    '("int*" "height")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkbindings.h

(define-function gtk_binding_set_new
  (c-name "gtk_binding_set_new")
  (is-constructor-of "GtkBindingSet")
  (return-type "GtkBindingSet*")
  (parameters
    '("const-gchar*" "set_name")
  )
)

(define-function gtk_binding_set_by_class
  (c-name "gtk_binding_set_by_class")
  (return-type "GtkBindingSet*")
  (parameters
    '("gpointer" "object_class")
  )
)

(define-function gtk_binding_set_find
  (c-name "gtk_binding_set_find")
  (return-type "GtkBindingSet*")
  (parameters
    '("const-gchar*" "set_name")
  )
)

(define-function gtk_bindings_activate
  (c-name "gtk_bindings_activate")
  (return-type "gboolean")
  (parameters
    '("GtkObject*" "object")
    '("guint" "keyval")
    '("GdkModifierType" "modifiers")
  )
)

(define-method activate
  (of-object "GtkBindingSet")
  (c-name "gtk_binding_set_activate")
  (return-type "gboolean")
  (parameters
    '("guint" "keyval")
    '("GdkModifierType" "modifiers")
    '("GtkObject*" "object")
  )
)

(define-function gtk_binding_entry_clear
  (c-name "gtk_binding_entry_clear")
  (return-type "none")
  (parameters
    '("GtkBindingSet*" "binding_set")
    '("guint" "keyval")
    '("GdkModifierType" "modifiers")
  )
)

(define-function gtk_binding_entry_add_signal
  (c-name "gtk_binding_entry_add_signal")
  (return-type "none")
  (parameters
    '("GtkBindingSet*" "binding_set")
    '("guint" "keyval")
    '("GdkModifierType" "modifiers")
    '("const-gchar*" "signal_name")
    '("guint" "n_args")
  )
  (varargs #t)
)

(define-method add_path
  (of-object "GtkBindingSet")
  (c-name "gtk_binding_set_add_path")
  (return-type "none")
  (parameters
    '("GtkPathType" "path_type")
    '("const-gchar*" "path_pattern")
    '("GtkPathPriorityType" "priority")
  )
)

(define-function gtk_binding_entry_remove
  (c-name "gtk_binding_entry_remove")
  (return-type "none")
  (parameters
    '("GtkBindingSet*" "binding_set")
    '("guint" "keyval")
    '("GdkModifierType" "modifiers")
  )
)

(define-function gtk_binding_entry_add_signall
  (c-name "gtk_binding_entry_add_signall")
  (return-type "none")
  (parameters
    '("GtkBindingSet*" "binding_set")
    '("guint" "keyval")
    '("GdkModifierType" "modifiers")
    '("const-gchar*" "signal_name")
    '("GSList*" "binding_args")
  )
)

(define-function gtk_binding_parse_binding
  (c-name "gtk_binding_parse_binding")
  (return-type "guint")
  (parameters
    '("GScanner*" "scanner")
  )
)

(define-function _gtk_bindings_activate_event
  (c-name "_gtk_bindings_activate_event")
  (return-type "gboolean")
  (parameters
    '("GtkObject*" "object")
    '("GdkEventKey*" "event")
  )
)

(define-function _gtk_binding_reset_parsed
  (c-name "_gtk_binding_reset_parsed")
  (return-type "none")
)

(define-function _gtk_binding_signal_new
  (c-name "_gtk_binding_signal_new")
  (return-type "guint")
  (parameters
    '("const-gchar*" "signal_name")
    '("GType" "itype")
    '("GSignalFlags" "signal_flags")
    '("GCallback" "handler")
    '("GSignalAccumulator" "accumulator")
    '("gpointer" "accu_data")
    '("GSignalCMarshaller" "c_marshaller")
    '("GType" "return_type")
    '("guint" "n_params")
  )
  (varargs #t)
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkbin.h

(define-function gtk_bin_get_type
  (c-name "gtk_bin_get_type")
  (return-type "GType")
)

(define-method get_child
  (of-object "GtkBin")
  (c-name "gtk_bin_get_child")
  (return-type "GtkWidget*")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkbox.h

(define-function gtk_box_get_type
  (c-name "gtk_box_get_type")
  (return-type "GType")
)

(define-method pack_start
  (of-object "GtkBox")
  (c-name "gtk_box_pack_start")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("gboolean" "expand")
    '("gboolean" "fill")
    '("guint" "padding")
  )
)

(define-method pack_end
  (of-object "GtkBox")
  (c-name "gtk_box_pack_end")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("gboolean" "expand")
    '("gboolean" "fill")
    '("guint" "padding")
  )
)

(define-method pack_start_defaults
  (of-object "GtkBox")
  (c-name "gtk_box_pack_start_defaults")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method pack_end_defaults
  (of-object "GtkBox")
  (c-name "gtk_box_pack_end_defaults")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method set_homogeneous
  (of-object "GtkBox")
  (c-name "gtk_box_set_homogeneous")
  (return-type "none")
  (parameters
    '("gboolean" "homogeneous")
  )
)

(define-method get_homogeneous
  (of-object "GtkBox")
  (c-name "gtk_box_get_homogeneous")
  (return-type "gboolean")
)

(define-method set_spacing
  (of-object "GtkBox")
  (c-name "gtk_box_set_spacing")
  (return-type "none")
  (parameters
    '("gint" "spacing")
  )
)

(define-method get_spacing
  (of-object "GtkBox")
  (c-name "gtk_box_get_spacing")
  (return-type "gint")
)

(define-method reorder_child
  (of-object "GtkBox")
  (c-name "gtk_box_reorder_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("gint" "position")
  )
)

(define-method query_child_packing
  (of-object "GtkBox")
  (c-name "gtk_box_query_child_packing")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("gboolean*" "expand")
    '("gboolean*" "fill")
    '("guint*" "padding")
    '("GtkPackType*" "pack_type")
  )
)

(define-method set_child_packing
  (of-object "GtkBox")
  (c-name "gtk_box_set_child_packing")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("gboolean" "expand")
    '("gboolean" "fill")
    '("guint" "padding")
    '("GtkPackType" "pack_type")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkbutton.h

(define-function gtk_button_get_type
  (c-name "gtk_button_get_type")
  (return-type "GType")
)

(define-function gtk_button_new
  (c-name "gtk_button_new")
  (is-constructor-of "GtkButton")
  (return-type "GtkWidget*")
)

(define-function gtk_button_new_with_label
  (c-name "gtk_button_new_with_label")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "label")
  )
)

(define-function gtk_button_new_from_stock
  (c-name "gtk_button_new_from_stock")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "stock_id")
  )
)

(define-function gtk_button_new_with_mnemonic
  (c-name "gtk_button_new_with_mnemonic")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "label")
  )
)

(define-method pressed
  (of-object "GtkButton")
  (c-name "gtk_button_pressed")
  (return-type "none")
)

(define-method released
  (of-object "GtkButton")
  (c-name "gtk_button_released")
  (return-type "none")
)

(define-method clicked
  (of-object "GtkButton")
  (c-name "gtk_button_clicked")
  (return-type "none")
)

(define-method enter
  (of-object "GtkButton")
  (c-name "gtk_button_enter")
  (return-type "none")
)

(define-method leave
  (of-object "GtkButton")
  (c-name "gtk_button_leave")
  (return-type "none")
)

(define-method set_relief
  (of-object "GtkButton")
  (c-name "gtk_button_set_relief")
  (return-type "none")
  (parameters
    '("GtkReliefStyle" "newstyle")
  )
)

(define-method get_relief
  (of-object "GtkButton")
  (c-name "gtk_button_get_relief")
  (return-type "GtkReliefStyle")
)

(define-method set_label
  (of-object "GtkButton")
  (c-name "gtk_button_set_label")
  (return-type "none")
  (parameters
    '("const-gchar*" "label")
  )
)

(define-method get_label
  (of-object "GtkButton")
  (c-name "gtk_button_get_label")
  (return-type "const-gchar*")
)

(define-method set_use_underline
  (of-object "GtkButton")
  (c-name "gtk_button_set_use_underline")
  (return-type "none")
  (parameters
    '("gboolean" "use_underline")
  )
)

(define-method get_use_underline
  (of-object "GtkButton")
  (c-name "gtk_button_get_use_underline")
  (return-type "gboolean")
)

(define-method set_use_stock
  (of-object "GtkButton")
  (c-name "gtk_button_set_use_stock")
  (return-type "none")
  (parameters
    '("gboolean" "use_stock")
  )
)

(define-method get_use_stock
  (of-object "GtkButton")
  (c-name "gtk_button_get_use_stock")
  (return-type "gboolean")
)

(define-method set_focus_on_click
  (of-object "GtkButton")
  (c-name "gtk_button_set_focus_on_click")
  (return-type "none")
  (parameters
    '("gboolean" "focus_on_click")
  )
)

(define-method get_focus_on_click
  (of-object "GtkButton")
  (c-name "gtk_button_get_focus_on_click")
  (return-type "gboolean")
)

(define-method _set_depressed
  (of-object "GtkButton")
  (c-name "_gtk_button_set_depressed")
  (return-type "none")
  (parameters
    '("gboolean" "depressed")
  )
)

(define-method _paint
  (of-object "GtkButton")
  (c-name "_gtk_button_paint")
  (return-type "none")
  (parameters
    '("GdkRectangle*" "area")
    '("GtkStateType" "state_type")
    '("GtkShadowType" "shadow_type")
    '("const-gchar*" "main_detail")
    '("const-gchar*" "default_detail")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkcalendar.h

(define-function gtk_calendar_get_type
  (c-name "gtk_calendar_get_type")
  (return-type "GType")
)

(define-function gtk_calendar_new
  (c-name "gtk_calendar_new")
  (is-constructor-of "GtkCalendar")
  (return-type "GtkWidget*")
)

(define-method select_month
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_select_month")
  (return-type "gboolean")
  (parameters
    '("guint" "month")
    '("guint" "year")
  )
)

(define-method select_day
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_select_day")
  (return-type "none")
  (parameters
    '("guint" "day")
  )
)

(define-method mark_day
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_mark_day")
  (return-type "gboolean")
  (parameters
    '("guint" "day")
  )
)

(define-method unmark_day
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_unmark_day")
  (return-type "gboolean")
  (parameters
    '("guint" "day")
  )
)

(define-method clear_marks
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_clear_marks")
  (return-type "none")
)

(define-method set_display_options
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_set_display_options")
  (return-type "none")
  (parameters
    '("GtkCalendarDisplayOptions" "flags")
  )
)

(define-method get_display_options
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_get_display_options")
  (return-type "GtkCalendarDisplayOptions")
)

(define-method display_options
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_display_options")
  (return-type "none")
  (parameters
    '("GtkCalendarDisplayOptions" "flags")
  )
)

(define-method get_date
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_get_date")
  (return-type "none")
  (parameters
    '("guint*" "year")
    '("guint*" "month")
    '("guint*" "day")
  )
)

(define-method freeze
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_freeze")
  (return-type "none")
)

(define-method thaw
  (of-object "GtkCalendar")
  (c-name "gtk_calendar_thaw")
  (return-type "none")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkcelleditable.h

(define-function void
  (c-name "void")
  (return-type "G_BEGIN_DECLS")
  (parameters
    '("*" "editing_done")
  )
)

(define-function gtk_cell_editable_get_type
  (c-name "gtk_cell_editable_get_type")
  (return-type "GType")
)

(define-method start_editing
  (of-object "GtkCellEditable")
  (c-name "gtk_cell_editable_start_editing")
  (return-type "none")
  (parameters
    '("GdkEvent*" "event")
  )
)

(define-method editing_done
  (of-object "GtkCellEditable")
  (c-name "gtk_cell_editable_editing_done")
  (return-type "none")
)

(define-method remove_widget
  (of-object "GtkCellEditable")
  (c-name "gtk_cell_editable_remove_widget")
  (return-type "none")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkcelllayout.h

(define-function void
  (c-name "void")
  (return-type "G_BEGIN_DECLS")
  (parameters
    '("*" "pack_start")
  )
)

(define-function gtk_cell_layout_get_type
  (c-name "gtk_cell_layout_get_type")
  (return-type "GType")
)

(define-method pack_start
  (of-object "GtkCellLayout")
  (c-name "gtk_cell_layout_pack_start")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell")
    '("gboolean" "expand")
  )
)

(define-method pack_end
  (of-object "GtkCellLayout")
  (c-name "gtk_cell_layout_pack_end")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell")
    '("gboolean" "expand")
  )
)

(define-method clear
  (of-object "GtkCellLayout")
  (c-name "gtk_cell_layout_clear")
  (return-type "none")
)

(define-method set_attributes
  (of-object "GtkCellLayout")
  (c-name "gtk_cell_layout_set_attributes")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell")
  )
  (varargs #t)
)

(define-method add_attribute
  (of-object "GtkCellLayout")
  (c-name "gtk_cell_layout_add_attribute")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell")
    '("const-gchar*" "attribute")
    '("gint" "column")
  )
)

(define-method set_cell_data_func
  (of-object "GtkCellLayout")
  (c-name "gtk_cell_layout_set_cell_data_func")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell")
    '("GtkCellLayoutDataFunc" "func")
    '("gpointer" "func_data")
    '("GDestroyNotify" "destroy")
  )
)

(define-method clear_attributes
  (of-object "GtkCellLayout")
  (c-name "gtk_cell_layout_clear_attributes")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkcellrenderer.h

(define-function gtk_cell_renderer_get_type
  (c-name "gtk_cell_renderer_get_type")
  (return-type "GType")
)

(define-method get_size
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_get_size")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("GdkRectangle*" "cell_area")
    '("gint*" "x_offset")
    '("gint*" "y_offset")
    '("gint*" "width")
    '("gint*" "height")
  )
)

(define-method render
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_render")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window")
    '("GtkWidget*" "widget")
    '("GdkRectangle*" "background_area")
    '("GdkRectangle*" "cell_area")
    '("GdkRectangle*" "expose_area")
    '("GtkCellRendererState" "flags")
  )
)

(define-method activate
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_activate")
  (return-type "gboolean")
  (parameters
    '("GdkEvent*" "event")
    '("GtkWidget*" "widget")
    '("const-gchar*" "path")
    '("GdkRectangle*" "background_area")
    '("GdkRectangle*" "cell_area")
    '("GtkCellRendererState" "flags")
  )
)

(define-method start_editing
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_start_editing")
  (return-type "GtkCellEditable*")
  (parameters
    '("GdkEvent*" "event")
    '("GtkWidget*" "widget")
    '("const-gchar*" "path")
    '("GdkRectangle*" "background_area")
    '("GdkRectangle*" "cell_area")
    '("GtkCellRendererState" "flags")
  )
)

(define-method set_fixed_size
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_set_fixed_size")
  (return-type "none")
  (parameters
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method get_fixed_size
  (of-object "GtkCellRenderer")
  (c-name "gtk_cell_renderer_get_fixed_size")
  (return-type "none")
  (parameters
    '("gint*" "width")
    '("gint*" "height")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkcellrendererpixbuf.h

(define-function gtk_cell_renderer_pixbuf_get_type
  (c-name "gtk_cell_renderer_pixbuf_get_type")
  (return-type "GType")
)

(define-function gtk_cell_renderer_pixbuf_new
  (c-name "gtk_cell_renderer_pixbuf_new")
  (is-constructor-of "GtkCellRendererPixbuf")
  (return-type "GtkCellRenderer*")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkcellrendererseptext.h

(define-function _gtk_cell_renderer_sep_text_get_type
  (c-name "_gtk_cell_renderer_sep_text_get_type")
  (return-type "GType")
)

(define-function _gtk_cell_renderer_sep_text_new
  (c-name "_gtk_cell_renderer_sep_text_new")
  (is-constructor-of "GtkCellRendererSepText")
  (return-type "GtkCellRenderer*")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkcellrenderertext.h

(define-function gtk_cell_renderer_text_get_type
  (c-name "gtk_cell_renderer_text_get_type")
  (return-type "GType")
)

(define-function gtk_cell_renderer_text_new
  (c-name "gtk_cell_renderer_text_new")
  (is-constructor-of "GtkCellRendererText")
  (return-type "GtkCellRenderer*")
)

(define-method set_fixed_height_from_font
  (of-object "GtkCellRendererText")
  (c-name "gtk_cell_renderer_text_set_fixed_height_from_font")
  (return-type "none")
  (parameters
    '("gint" "number_of_rows")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkcellrenderertoggle.h

(define-function gtk_cell_renderer_toggle_get_type
  (c-name "gtk_cell_renderer_toggle_get_type")
  (return-type "GType")
)

(define-function gtk_cell_renderer_toggle_new
  (c-name "gtk_cell_renderer_toggle_new")
  (is-constructor-of "GtkCellRendererToggle")
  (return-type "GtkCellRenderer*")
)

(define-method get_radio
  (of-object "GtkCellRendererToggle")
  (c-name "gtk_cell_renderer_toggle_get_radio")
  (return-type "gboolean")
)

(define-method set_radio
  (of-object "GtkCellRendererToggle")
  (c-name "gtk_cell_renderer_toggle_set_radio")
  (return-type "none")
  (parameters
    '("gboolean" "radio")
  )
)

(define-method get_active
  (of-object "GtkCellRendererToggle")
  (c-name "gtk_cell_renderer_toggle_get_active")
  (return-type "gboolean")
)

(define-method set_active
  (of-object "GtkCellRendererToggle")
  (c-name "gtk_cell_renderer_toggle_set_active")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkcellview.h

(define-function gtk_cell_view_get_type
  (c-name "gtk_cell_view_get_type")
  (return-type "GType")
)

(define-function gtk_cell_view_new
  (c-name "gtk_cell_view_new")
  (is-constructor-of "GtkCellView")
  (return-type "GtkWidget*")
)

(define-function gtk_cell_view_new_with_text
  (c-name "gtk_cell_view_new_with_text")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "text")
  )
)

(define-function gtk_cell_view_new_with_markup
  (c-name "gtk_cell_view_new_with_markup")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "markup")
  )
)

(define-function gtk_cell_view_new_with_pixbuf
  (c-name "gtk_cell_view_new_with_pixbuf")
  (return-type "GtkWidget*")
  (parameters
    '("GdkPixbuf*" "pixbuf")
  )
)

(define-method set_value
  (of-object "GtkCellView")
  (c-name "gtk_cell_view_set_value")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "renderer")
    '("gchar*" "property")
    '("GValue*" "value")
  )
)

(define-method set_values
  (of-object "GtkCellView")
  (c-name "gtk_cell_view_set_values")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "renderer")
  )
  (varargs #t)
)

(define-method set_model
  (of-object "GtkCellView")
  (c-name "gtk_cell_view_set_model")
  (return-type "none")
  (parameters
    '("GtkTreeModel*" "model")
  )
)

(define-method set_displayed_row
  (of-object "GtkCellView")
  (c-name "gtk_cell_view_set_displayed_row")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
  )
)

(define-method get_displayed_row
  (of-object "GtkCellView")
  (c-name "gtk_cell_view_get_displayed_row")
  (return-type "GtkTreePath*")
)

(define-method set_background_color
  (of-object "GtkCellView")
  (c-name "gtk_cell_view_set_background_color")
  (return-type "none")
  (parameters
    '("GdkColor*" "color")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkcellviewmenuitem.h

(define-function gtk_cell_view_menu_item_get_type
  (c-name "gtk_cell_view_menu_item_get_type")
  (return-type "GType")
)

(define-function gtk_cell_view_menu_item_new
  (c-name "gtk_cell_view_menu_item_new")
  (is-constructor-of "GtkCellViewMenuItem")
  (return-type "GtkWidget*")
)

(define-function gtk_cell_view_menu_item_new_with_pixbuf
  (c-name "gtk_cell_view_menu_item_new_with_pixbuf")
  (return-type "GtkWidget*")
  (parameters
    '("GdkPixbuf*" "pixbuf")
  )
)

(define-function gtk_cell_view_menu_item_new_with_text
  (c-name "gtk_cell_view_menu_item_new_with_text")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "text")
  )
)

(define-function gtk_cell_view_menu_item_new_with_markup
  (c-name "gtk_cell_view_menu_item_new_with_markup")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "markup")
  )
)

(define-function gtk_cell_view_menu_item_new_from_model
  (c-name "gtk_cell_view_menu_item_new_from_model")
  (return-type "GtkWidget*")
  (parameters
    '("GtkTreeModel*" "model")
    '("GtkTreePath*" "path")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkcheckbutton.h

(define-function gtk_check_button_get_type
  (c-name "gtk_check_button_get_type")
  (return-type "GType")
)

(define-function gtk_check_button_new
  (c-name "gtk_check_button_new")
  (is-constructor-of "GtkCheckButton")
  (return-type "GtkWidget*")
)

(define-function gtk_check_button_new_with_label
  (c-name "gtk_check_button_new_with_label")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "label")
  )
)

(define-function gtk_check_button_new_with_mnemonic
  (c-name "gtk_check_button_new_with_mnemonic")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "label")
  )
)

(define-method _get_props
  (of-object "GtkCheckButton")
  (c-name "_gtk_check_button_get_props")
  (return-type "none")
  (parameters
    '("gint*" "indicator_size")
    '("gint*" "indicator_spacing")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkcheckmenuitem.h

(define-function gtk_check_menu_item_get_type
  (c-name "gtk_check_menu_item_get_type")
  (return-type "GType")
)

(define-function gtk_check_menu_item_new
  (c-name "gtk_check_menu_item_new")
  (is-constructor-of "GtkCheckMenuItem")
  (return-type "GtkWidget*")
)

(define-function gtk_check_menu_item_new_with_label
  (c-name "gtk_check_menu_item_new_with_label")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "label")
  )
)

(define-function gtk_check_menu_item_new_with_mnemonic
  (c-name "gtk_check_menu_item_new_with_mnemonic")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "label")
  )
)

(define-method set_active
  (of-object "GtkCheckMenuItem")
  (c-name "gtk_check_menu_item_set_active")
  (return-type "none")
  (parameters
    '("gboolean" "is_active")
  )
)

(define-method get_active
  (of-object "GtkCheckMenuItem")
  (c-name "gtk_check_menu_item_get_active")
  (return-type "gboolean")
)

(define-method toggled
  (of-object "GtkCheckMenuItem")
  (c-name "gtk_check_menu_item_toggled")
  (return-type "none")
)

(define-method set_inconsistent
  (of-object "GtkCheckMenuItem")
  (c-name "gtk_check_menu_item_set_inconsistent")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_inconsistent
  (of-object "GtkCheckMenuItem")
  (c-name "gtk_check_menu_item_get_inconsistent")
  (return-type "gboolean")
)

(define-method set_draw_as_radio
  (of-object "GtkCheckMenuItem")
  (c-name "gtk_check_menu_item_set_draw_as_radio")
  (return-type "none")
  (parameters
    '("gboolean" "draw_as_radio")
  )
)

(define-method get_draw_as_radio
  (of-object "GtkCheckMenuItem")
  (c-name "gtk_check_menu_item_get_draw_as_radio")
  (return-type "gboolean")
)

(define-method set_show_toggle
  (of-object "GtkCheckMenuItem")
  (c-name "gtk_check_menu_item_set_show_toggle")
  (return-type "none")
  (parameters
    '("gboolean" "always")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkclipboard.h

(define-function gtk_clipboard_get_for_display
  (c-name "gtk_clipboard_get_for_display")
  (return-type "GtkClipboard*")
  (parameters
    '("GdkDisplay*" "display")
    '("GdkAtom" "selection")
  )
)

(define-function gtk_clipboard_get
  (c-name "gtk_clipboard_get")
  (return-type "GtkClipboard*")
  (parameters
    '("GdkAtom" "selection")
  )
)

(define-method get_display
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_get_display")
  (return-type "GdkDisplay*")
)

(define-method set_with_data
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_set_with_data")
  (return-type "gboolean")
  (parameters
    '("const-GtkTargetEntry*" "targets")
    '("guint" "n_targets")
    '("GtkClipboardGetFunc" "get_func")
    '("GtkClipboardClearFunc" "clear_func")
    '("gpointer" "user_data")
  )
)

(define-method set_with_owner
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_set_with_owner")
  (return-type "gboolean")
  (parameters
    '("const-GtkTargetEntry*" "targets")
    '("guint" "n_targets")
    '("GtkClipboardGetFunc" "get_func")
    '("GtkClipboardClearFunc" "clear_func")
    '("GObject*" "owner")
  )
)

(define-method get_owner
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_get_owner")
  (return-type "GObject*")
)

(define-method clear
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_clear")
  (return-type "none")
)

(define-method set_text
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_set_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "text")
    '("gint" "len")
  )
)

(define-method request_contents
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_request_contents")
  (return-type "none")
  (parameters
    '("GdkAtom" "target")
    '("GtkClipboardReceivedFunc" "callback")
    '("gpointer" "user_data")
  )
)

(define-method request_text
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_request_text")
  (return-type "none")
  (parameters
    '("GtkClipboardTextReceivedFunc" "callback")
    '("gpointer" "user_data")
  )
)

(define-method wait_for_contents
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_wait_for_contents")
  (return-type "GtkSelectionData*")
  (parameters
    '("GdkAtom" "target")
  )
)

(define-method wait_for_text
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_wait_for_text")
  (return-type "gchar*")
)

(define-method wait_is_text_available
  (of-object "GtkClipboard")
  (c-name "gtk_clipboard_wait_is_text_available")
  (return-type "gboolean")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkclist.h

(define-function gtk_clist_get_type
  (c-name "gtk_clist_get_type")
  (return-type "GtkType")
)

(define-function gtk_clist_new
  (c-name "gtk_clist_new")
  (is-constructor-of "GtkClist")
  (return-type "GtkWidget*")
  (parameters
    '("gint" "columns")
  )
)

(define-function gtk_clist_new_with_titles
  (c-name "gtk_clist_new_with_titles")
  (return-type "GtkWidget*")
  (parameters
    '("gint" "columns")
    '("gchar*[]" "titles")
  )
)

(define-method set_hadjustment
  (of-object "GtkCList")
  (c-name "gtk_clist_set_hadjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment")
  )
)

(define-method set_vadjustment
  (of-object "GtkCList")
  (c-name "gtk_clist_set_vadjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment")
  )
)

(define-method get_hadjustment
  (of-object "GtkCList")
  (c-name "gtk_clist_get_hadjustment")
  (return-type "GtkAdjustment*")
)

(define-method get_vadjustment
  (of-object "GtkCList")
  (c-name "gtk_clist_get_vadjustment")
  (return-type "GtkAdjustment*")
)

(define-method set_shadow_type
  (of-object "GtkCList")
  (c-name "gtk_clist_set_shadow_type")
  (return-type "none")
  (parameters
    '("GtkShadowType" "type")
  )
)

(define-method set_selection_mode
  (of-object "GtkCList")
  (c-name "gtk_clist_set_selection_mode")
  (return-type "none")
  (parameters
    '("GtkSelectionMode" "mode")
  )
)

(define-method set_reorderable
  (of-object "GtkCList")
  (c-name "gtk_clist_set_reorderable")
  (return-type "none")
  (parameters
    '("gboolean" "reorderable")
  )
)

(define-method set_use_drag_icons
  (of-object "GtkCList")
  (c-name "gtk_clist_set_use_drag_icons")
  (return-type "none")
  (parameters
    '("gboolean" "use_icons")
  )
)

(define-method set_button_actions
  (of-object "GtkCList")
  (c-name "gtk_clist_set_button_actions")
  (return-type "none")
  (parameters
    '("guint" "button")
    '("guint8" "button_actions")
  )
)

(define-method freeze
  (of-object "GtkCList")
  (c-name "gtk_clist_freeze")
  (return-type "none")
)

(define-method thaw
  (of-object "GtkCList")
  (c-name "gtk_clist_thaw")
  (return-type "none")
)

(define-method column_titles_show
  (of-object "GtkCList")
  (c-name "gtk_clist_column_titles_show")
  (return-type "none")
)

(define-method column_titles_hide
  (of-object "GtkCList")
  (c-name "gtk_clist_column_titles_hide")
  (return-type "none")
)

(define-method column_title_active
  (of-object "GtkCList")
  (c-name "gtk_clist_column_title_active")
  (return-type "none")
  (parameters
    '("gint" "column")
  )
)

(define-method column_title_passive
  (of-object "GtkCList")
  (c-name "gtk_clist_column_title_passive")
  (return-type "none")
  (parameters
    '("gint" "column")
  )
)

(define-method column_titles_active
  (of-object "GtkCList")
  (c-name "gtk_clist_column_titles_active")
  (return-type "none")
)

(define-method column_titles_passive
  (of-object "GtkCList")
  (c-name "gtk_clist_column_titles_passive")
  (return-type "none")
)

(define-method set_column_title
  (of-object "GtkCList")
  (c-name "gtk_clist_set_column_title")
  (return-type "none")
  (parameters
    '("gint" "column")
    '("const-gchar*" "title")
  )
)

(define-method get_column_title
  (of-object "GtkCList")
  (c-name "gtk_clist_get_column_title")
  (return-type "gchar*")
  (parameters
    '("gint" "column")
  )
)

(define-method set_column_widget
  (of-object "GtkCList")
  (c-name "gtk_clist_set_column_widget")
  (return-type "none")
  (parameters
    '("gint" "column")
    '("GtkWidget*" "widget")
  )
)

(define-method get_column_widget
  (of-object "GtkCList")
  (c-name "gtk_clist_get_column_widget")
  (return-type "GtkWidget*")
  (parameters
    '("gint" "column")
  )
)

(define-method set_column_justification
  (of-object "GtkCList")
  (c-name "gtk_clist_set_column_justification")
  (return-type "none")
  (parameters
    '("gint" "column")
    '("GtkJustification" "justification")
  )
)

(define-method set_column_visibility
  (of-object "GtkCList")
  (c-name "gtk_clist_set_column_visibility")
  (return-type "none")
  (parameters
    '("gint" "column")
    '("gboolean" "visible")
  )
)

(define-method set_column_resizeable
  (of-object "GtkCList")
  (c-name "gtk_clist_set_column_resizeable")
  (return-type "none")
  (parameters
    '("gint" "column")
    '("gboolean" "resizeable")
  )
)

(define-method set_column_auto_resize
  (of-object "GtkCList")
  (c-name "gtk_clist_set_column_auto_resize")
  (return-type "none")
  (parameters
    '("gint" "column")
    '("gboolean" "auto_resize")
  )
)

(define-method columns_autosize
  (of-object "GtkCList")
  (c-name "gtk_clist_columns_autosize")
  (return-type "gint")
)

(define-method optimal_column_width
  (of-object "GtkCList")
  (c-name "gtk_clist_optimal_column_width")
  (return-type "gint")
  (parameters
    '("gint" "column")
  )
)

(define-method set_column_width
  (of-object "GtkCList")
  (c-name "gtk_clist_set_column_width")
  (return-type "none")
  (parameters
    '("gint" "column")
    '("gint" "width")
  )
)

(define-method set_column_min_width
  (of-object "GtkCList")
  (c-name "gtk_clist_set_column_min_width")
  (return-type "none")
  (parameters
    '("gint" "column")
    '("gint" "min_width")
  )
)

(define-method set_column_max_width
  (of-object "GtkCList")
  (c-name "gtk_clist_set_column_max_width")
  (return-type "none")
  (parameters
    '("gint" "column")
    '("gint" "max_width")
  )
)

(define-method set_row_height
  (of-object "GtkCList")
  (c-name "gtk_clist_set_row_height")
  (return-type "none")
  (parameters
    '("guint" "height")
  )
)

(define-method moveto
  (of-object "GtkCList")
  (c-name "gtk_clist_moveto")
  (return-type "none")
  (parameters
    '("gint" "row")
    '("gint" "column")
    '("gfloat" "row_align")
    '("gfloat" "col_align")
  )
)

(define-method row_is_visible
  (of-object "GtkCList")
  (c-name "gtk_clist_row_is_visible")
  (return-type "GtkVisibility")
  (parameters
    '("gint" "row")
  )
)

(define-method get_cell_type
  (of-object "GtkCList")
  (c-name "gtk_clist_get_cell_type")
  (return-type "GtkCellType")
  (parameters
    '("gint" "row")
    '("gint" "column")
  )
)

(define-method set_text
  (of-object "GtkCList")
  (c-name "gtk_clist_set_text")
  (return-type "none")
  (parameters
    '("gint" "row")
    '("gint" "column")
    '("const-gchar*" "text")
  )
)

(define-method get_text
  (of-object "GtkCList")
  (c-name "gtk_clist_get_text")
  (return-type "gint")
  (parameters
    '("gint" "row")
    '("gint" "column")
    '("gchar**" "text")
  )
)

(define-method set_pixmap
  (of-object "GtkCList")
  (c-name "gtk_clist_set_pixmap")
  (return-type "none")
  (parameters
    '("gint" "row")
    '("gint" "column")
    '("GdkPixmap*" "pixmap")
    '("GdkBitmap*" "mask")
  )
)

(define-method get_pixmap
  (of-object "GtkCList")
  (c-name "gtk_clist_get_pixmap")
  (return-type "gint")
  (parameters
    '("gint" "row")
    '("gint" "column")
    '("GdkPixmap**" "pixmap")
    '("GdkBitmap**" "mask")
  )
)

(define-method set_pixtext
  (of-object "GtkCList")
  (c-name "gtk_clist_set_pixtext")
  (return-type "none")
  (parameters
    '("gint" "row")
    '("gint" "column")
    '("const-gchar*" "text")
    '("guint8" "spacing")
    '("GdkPixmap*" "pixmap")
    '("GdkBitmap*" "mask")
  )
)

(define-method get_pixtext
  (of-object "GtkCList")
  (c-name "gtk_clist_get_pixtext")
  (return-type "gint")
  (parameters
    '("gint" "row")
    '("gint" "column")
    '("gchar**" "text")
    '("guint8*" "spacing")
    '("GdkPixmap**" "pixmap")
    '("GdkBitmap**" "mask")
  )
)

(define-method set_foreground
  (of-object "GtkCList")
  (c-name "gtk_clist_set_foreground")
  (return-type "none")
  (parameters
    '("gint" "row")
    '("GdkColor*" "color")
  )
)

(define-method set_background
  (of-object "GtkCList")
  (c-name "gtk_clist_set_background")
  (return-type "none")
  (parameters
    '("gint" "row")
    '("GdkColor*" "color")
  )
)

(define-method set_cell_style
  (of-object "GtkCList")
  (c-name "gtk_clist_set_cell_style")
  (return-type "none")
  (parameters
    '("gint" "row")
    '("gint" "column")
    '("GtkStyle*" "style")
  )
)

(define-method get_cell_style
  (of-object "GtkCList")
  (c-name "gtk_clist_get_cell_style")
  (return-type "GtkStyle*")
  (parameters
    '("gint" "row")
    '("gint" "column")
  )
)

(define-method set_row_style
  (of-object "GtkCList")
  (c-name "gtk_clist_set_row_style")
  (return-type "none")
  (parameters
    '("gint" "row")
    '("GtkStyle*" "style")
  )
)

(define-method get_row_style
  (of-object "GtkCList")
  (c-name "gtk_clist_get_row_style")
  (return-type "GtkStyle*")
  (parameters
    '("gint" "row")
  )
)

(define-method set_shift
  (of-object "GtkCList")
  (c-name "gtk_clist_set_shift")
  (return-type "none")
  (parameters
    '("gint" "row")
    '("gint" "column")
    '("gint" "vertical")
    '("gint" "horizontal")
  )
)

(define-method set_selectable
  (of-object "GtkCList")
  (c-name "gtk_clist_set_selectable")
  (return-type "none")
  (parameters
    '("gint" "row")
    '("gboolean" "selectable")
  )
)

(define-method get_selectable
  (of-object "GtkCList")
  (c-name "gtk_clist_get_selectable")
  (return-type "gboolean")
  (parameters
    '("gint" "row")
  )
)

(define-method prepend
  (of-object "GtkCList")
  (c-name "gtk_clist_prepend")
  (return-type "gint")
  (parameters
    '("gchar*[]" "text")
  )
)

(define-method append
  (of-object "GtkCList")
  (c-name "gtk_clist_append")
  (return-type "gint")
  (parameters
    '("gchar*[]" "text")
  )
)

(define-method insert
  (of-object "GtkCList")
  (c-name "gtk_clist_insert")
  (return-type "gint")
  (parameters
    '("gint" "row")
    '("gchar*[]" "text")
  )
)

(define-method remove
  (of-object "GtkCList")
  (c-name "gtk_clist_remove")
  (return-type "none")
  (parameters
    '("gint" "row")
  )
)

(define-method set_row_data
  (of-object "GtkCList")
  (c-name "gtk_clist_set_row_data")
  (return-type "none")
  (parameters
    '("gint" "row")
    '("gpointer" "data")
  )
)

(define-method set_row_data_full
  (of-object "GtkCList")
  (c-name "gtk_clist_set_row_data_full")
  (return-type "none")
  (parameters
    '("gint" "row")
    '("gpointer" "data")
    '("GtkDestroyNotify" "destroy")
  )
)

(define-method get_row_data
  (of-object "GtkCList")
  (c-name "gtk_clist_get_row_data")
  (return-type "gpointer")
  (parameters
    '("gint" "row")
  )
)

(define-method find_row_from_data
  (of-object "GtkCList")
  (c-name "gtk_clist_find_row_from_data")
  (return-type "gint")
  (parameters
    '("gpointer" "data")
  )
)

(define-method select_row
  (of-object "GtkCList")
  (c-name "gtk_clist_select_row")
  (return-type "none")
  (parameters
    '("gint" "row")
    '("gint" "column")
  )
)

(define-method unselect_row
  (of-object "GtkCList")
  (c-name "gtk_clist_unselect_row")
  (return-type "none")
  (parameters
    '("gint" "row")
    '("gint" "column")
  )
)

(define-method undo_selection
  (of-object "GtkCList")
  (c-name "gtk_clist_undo_selection")
  (return-type "none")
)

(define-method clear
  (of-object "GtkCList")
  (c-name "gtk_clist_clear")
  (return-type "none")
)

(define-method get_selection_info
  (of-object "GtkCList")
  (c-name "gtk_clist_get_selection_info")
  (return-type "gint")
  (parameters
    '("gint" "x")
    '("gint" "y")
    '("gint*" "row")
    '("gint*" "column")
  )
)

(define-method select_all
  (of-object "GtkCList")
  (c-name "gtk_clist_select_all")
  (return-type "none")
)

(define-method unselect_all
  (of-object "GtkCList")
  (c-name "gtk_clist_unselect_all")
  (return-type "none")
)

(define-method swap_rows
  (of-object "GtkCList")
  (c-name "gtk_clist_swap_rows")
  (return-type "none")
  (parameters
    '("gint" "row1")
    '("gint" "row2")
  )
)

(define-method row_move
  (of-object "GtkCList")
  (c-name "gtk_clist_row_move")
  (return-type "none")
  (parameters
    '("gint" "source_row")
    '("gint" "dest_row")
  )
)

(define-method set_compare_func
  (of-object "GtkCList")
  (c-name "gtk_clist_set_compare_func")
  (return-type "none")
  (parameters
    '("GtkCListCompareFunc" "cmp_func")
  )
)

(define-method set_sort_column
  (of-object "GtkCList")
  (c-name "gtk_clist_set_sort_column")
  (return-type "none")
  (parameters
    '("gint" "column")
  )
)

(define-method set_sort_type
  (of-object "GtkCList")
  (c-name "gtk_clist_set_sort_type")
  (return-type "none")
  (parameters
    '("GtkSortType" "sort_type")
  )
)

(define-method sort
  (of-object "GtkCList")
  (c-name "gtk_clist_sort")
  (return-type "none")
)

(define-method set_auto_sort
  (of-object "GtkCList")
  (c-name "gtk_clist_set_auto_sort")
  (return-type "none")
  (parameters
    '("gboolean" "auto_sort")
  )
)

(define-method _create_cell_layout
  (of-object "GtkCList")
  (c-name "_gtk_clist_create_cell_layout")
  (return-type "PangoLayout*")
  (parameters
    '("GtkCListRow*" "clist_row")
    '("gint" "column")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkcolorbutton.h

(define-function gtk_color_button_get_type
  (c-name "gtk_color_button_get_type")
  (return-type "GType")
)

(define-function gtk_color_button_new
  (c-name "gtk_color_button_new")
  (is-constructor-of "GtkColorButton")
  (return-type "GtkWidget*")
)

(define-function gtk_color_button_new_with_color
  (c-name "gtk_color_button_new_with_color")
  (return-type "GtkWidget*")
  (parameters
    '("GdkColor*" "color")
  )
)

(define-method set_color
  (of-object "GtkColorButton")
  (c-name "gtk_color_button_set_color")
  (return-type "none")
  (parameters
    '("GdkColor*" "color")
  )
)

(define-method set_alpha
  (of-object "GtkColorButton")
  (c-name "gtk_color_button_set_alpha")
  (return-type "none")
  (parameters
    '("guint16" "alpha")
  )
)

(define-method get_color
  (of-object "GtkColorButton")
  (c-name "gtk_color_button_get_color")
  (return-type "none")
  (parameters
    '("GdkColor*" "color")
  )
)

(define-method get_alpha
  (of-object "GtkColorButton")
  (c-name "gtk_color_button_get_alpha")
  (return-type "guint16")
)

(define-method set_use_alpha
  (of-object "GtkColorButton")
  (c-name "gtk_color_button_set_use_alpha")
  (return-type "none")
  (parameters
    '("gboolean" "use_alpha")
  )
)

(define-method get_use_alpha
  (of-object "GtkColorButton")
  (c-name "gtk_color_button_get_use_alpha")
  (return-type "gboolean")
)

(define-method set_title
  (of-object "GtkColorButton")
  (c-name "gtk_color_button_set_title")
  (return-type "none")
  (parameters
    '("const-gchar*" "title")
  )
)

(define-method get_title
  (of-object "GtkColorButton")
  (c-name "gtk_color_button_get_title")
  (return-type "const-gchar*")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkcolorseldialog.h

(define-function gtk_color_selection_dialog_get_type
  (c-name "gtk_color_selection_dialog_get_type")
  (return-type "GType")
)

(define-function gtk_color_selection_dialog_new
  (c-name "gtk_color_selection_dialog_new")
  (is-constructor-of "GtkColorSelectionDialog")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "title")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkcolorsel.h

(define-function gtk_color_selection_get_type
  (c-name "gtk_color_selection_get_type")
  (return-type "GType")
)

(define-function gtk_color_selection_new
  (c-name "gtk_color_selection_new")
  (is-constructor-of "GtkColorSelection")
  (return-type "GtkWidget*")
)

(define-method get_has_opacity_control
  (of-object "GtkColorSelection")
  (c-name "gtk_color_selection_get_has_opacity_control")
  (return-type "gboolean")
)

(define-method set_has_opacity_control
  (of-object "GtkColorSelection")
  (c-name "gtk_color_selection_set_has_opacity_control")
  (return-type "none")
  (parameters
    '("gboolean" "has_opacity")
  )
)

(define-method get_has_palette
  (of-object "GtkColorSelection")
  (c-name "gtk_color_selection_get_has_palette")
  (return-type "gboolean")
)

(define-method set_has_palette
  (of-object "GtkColorSelection")
  (c-name "gtk_color_selection_set_has_palette")
  (return-type "none")
  (parameters
    '("gboolean" "has_palette")
  )
)

(define-method set_current_color
  (of-object "GtkColorSelection")
  (c-name "gtk_color_selection_set_current_color")
  (return-type "none")
  (parameters
    '("GdkColor*" "color")
  )
)

(define-method set_current_alpha
  (of-object "GtkColorSelection")
  (c-name "gtk_color_selection_set_current_alpha")
  (return-type "none")
  (parameters
    '("guint16" "alpha")
  )
)

(define-method get_current_color
  (of-object "GtkColorSelection")
  (c-name "gtk_color_selection_get_current_color")
  (return-type "none")
  (parameters
    '("GdkColor*" "color")
  )
)

(define-method get_current_alpha
  (of-object "GtkColorSelection")
  (c-name "gtk_color_selection_get_current_alpha")
  (return-type "guint16")
)

(define-method set_previous_color
  (of-object "GtkColorSelection")
  (c-name "gtk_color_selection_set_previous_color")
  (return-type "none")
  (parameters
    '("GdkColor*" "color")
  )
)

(define-method set_previous_alpha
  (of-object "GtkColorSelection")
  (c-name "gtk_color_selection_set_previous_alpha")
  (return-type "none")
  (parameters
    '("guint16" "alpha")
  )
)

(define-method get_previous_color
  (of-object "GtkColorSelection")
  (c-name "gtk_color_selection_get_previous_color")
  (return-type "none")
  (parameters
    '("GdkColor*" "color")
  )
)

(define-method get_previous_alpha
  (of-object "GtkColorSelection")
  (c-name "gtk_color_selection_get_previous_alpha")
  (return-type "guint16")
)

(define-method is_adjusting
  (of-object "GtkColorSelection")
  (c-name "gtk_color_selection_is_adjusting")
  (return-type "gboolean")
)

(define-function gtk_color_selection_palette_from_string
  (c-name "gtk_color_selection_palette_from_string")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "str")
    '("GdkColor**" "colors")
    '("gint*" "n_colors")
  )
)

(define-function gtk_color_selection_palette_to_string
  (c-name "gtk_color_selection_palette_to_string")
  (return-type "gchar*")
  (parameters
    '("const-GdkColor*" "colors")
    '("gint" "n_colors")
  )
)

(define-function gtk_color_selection_set_change_palette_hook
  (c-name "gtk_color_selection_set_change_palette_hook")
  (return-type "GtkColorSelectionChangePaletteFunc")
  (parameters
    '("GtkColorSelectionChangePaletteFunc" "func")
  )
)

(define-function gtk_color_selection_set_change_palette_with_screen_hook
  (c-name "gtk_color_selection_set_change_palette_with_screen_hook")
  (return-type "GtkColorSelectionChangePaletteWithScreenFunc")
  (parameters
    '("GtkColorSelectionChangePaletteWithScreenFunc" "func")
  )
)

(define-method set_color
  (of-object "GtkColorSelection")
  (c-name "gtk_color_selection_set_color")
  (return-type "none")
  (parameters
    '("gdouble*" "color")
  )
)

(define-method get_color
  (of-object "GtkColorSelection")
  (c-name "gtk_color_selection_get_color")
  (return-type "none")
  (parameters
    '("gdouble*" "color")
  )
)

(define-method set_update_policy
  (of-object "GtkColorSelection")
  (c-name "gtk_color_selection_set_update_policy")
  (return-type "none")
  (parameters
    '("GtkUpdateType" "policy")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkcomboboxentry.h

(define-function gtk_combo_box_entry_get_type
  (c-name "gtk_combo_box_entry_get_type")
  (return-type "GType")
)

(define-function gtk_combo_box_entry_new
  (c-name "gtk_combo_box_entry_new")
  (is-constructor-of "GtkComboBoxEntry")
  (return-type "GtkWidget*")
  (parameters
    '("GtkTreeModel*" "model")
    '("gint" "text_column")
  )
)

(define-method get_text_column
  (of-object "GtkComboBoxEntry")
  (c-name "gtk_combo_box_entry_get_text_column")
  (return-type "gint")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkcombobox.h

(define-function gtk_combo_box_get_type
  (c-name "gtk_combo_box_get_type")
  (return-type "GType")
)

(define-function gtk_combo_box_new
  (c-name "gtk_combo_box_new")
  (is-constructor-of "GtkComboBox")
  (return-type "GtkWidget*")
  (parameters
    '("GtkTreeModel*" "model")
  )
)

(define-method set_wrap_width
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_set_wrap_width")
  (return-type "none")
  (parameters
    '("gint" "width")
  )
)

(define-method set_row_span_column
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_set_row_span_column")
  (return-type "none")
  (parameters
    '("gint" "row_span")
  )
)

(define-method set_column_span_column
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_set_column_span_column")
  (return-type "none")
  (parameters
    '("gint" "column_span")
  )
)

(define-method get_active
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_get_active")
  (return-type "gint")
)

(define-method set_active
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_set_active")
  (return-type "none")
  (parameters
    '("gint" "index")
  )
)

(define-method get_active_iter
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_get_active_iter")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method set_active_iter
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_set_active_iter")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method get_model
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_get_model")
  (return-type "GtkTreeModel*")
)

(define-function gtk_combo_box_new_text
  (c-name "gtk_combo_box_new_text")
  (return-type "GtkWidget*")
)

(define-method append_text
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_append_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "text")
  )
)

(define-method insert_text
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_insert_text")
  (return-type "none")
  (parameters
    '("gint" "position")
    '("const-gchar*" "text")
  )
)

(define-method prepend_text
  (of-object "GtkComboBox")
  (c-name "gtk_combo_box_prepend_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "text")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkcombo.h

(define-function gtk_combo_get_type
  (c-name "gtk_combo_get_type")
  (return-type "GType")
)

(define-function gtk_combo_new
  (c-name "gtk_combo_new")
  (is-constructor-of "GtkCombo")
  (return-type "GtkWidget*")
)

(define-method set_value_in_list
  (of-object "GtkCombo")
  (c-name "gtk_combo_set_value_in_list")
  (return-type "none")
  (parameters
    '("gboolean" "val")
    '("gboolean" "ok_if_empty")
  )
)

(define-method set_use_arrows
  (of-object "GtkCombo")
  (c-name "gtk_combo_set_use_arrows")
  (return-type "none")
  (parameters
    '("gboolean" "val")
  )
)

(define-method set_use_arrows_always
  (of-object "GtkCombo")
  (c-name "gtk_combo_set_use_arrows_always")
  (return-type "none")
  (parameters
    '("gboolean" "val")
  )
)

(define-method set_case_sensitive
  (of-object "GtkCombo")
  (c-name "gtk_combo_set_case_sensitive")
  (return-type "none")
  (parameters
    '("gboolean" "val")
  )
)

(define-method set_item_string
  (of-object "GtkCombo")
  (c-name "gtk_combo_set_item_string")
  (return-type "none")
  (parameters
    '("GtkItem*" "item")
    '("const-gchar*" "item_value")
  )
)

(define-method set_popdown_strings
  (of-object "GtkCombo")
  (c-name "gtk_combo_set_popdown_strings")
  (return-type "none")
  (parameters
    '("GList*" "strings")
  )
)

(define-method disable_activate
  (of-object "GtkCombo")
  (c-name "gtk_combo_disable_activate")
  (return-type "none")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkcontainer.h

(define-function gtk_container_get_type
  (c-name "gtk_container_get_type")
  (return-type "GType")
)

(define-method set_border_width
  (of-object "GtkContainer")
  (c-name "gtk_container_set_border_width")
  (return-type "none")
  (parameters
    '("guint" "border_width")
  )
)

(define-method get_border_width
  (of-object "GtkContainer")
  (c-name "gtk_container_get_border_width")
  (return-type "guint")
)

(define-method add
  (of-object "GtkContainer")
  (c-name "gtk_container_add")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method remove
  (of-object "GtkContainer")
  (c-name "gtk_container_remove")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method set_resize_mode
  (of-object "GtkContainer")
  (c-name "gtk_container_set_resize_mode")
  (return-type "none")
  (parameters
    '("GtkResizeMode" "resize_mode")
  )
)

(define-method get_resize_mode
  (of-object "GtkContainer")
  (c-name "gtk_container_get_resize_mode")
  (return-type "GtkResizeMode")
)

(define-method check_resize
  (of-object "GtkContainer")
  (c-name "gtk_container_check_resize")
  (return-type "none")
)

(define-method foreach
  (of-object "GtkContainer")
  (c-name "gtk_container_foreach")
  (return-type "none")
  (parameters
    '("GtkCallback" "callback")
    '("gpointer" "callback_data")
  )
)

(define-method foreach_full
  (of-object "GtkContainer")
  (c-name "gtk_container_foreach_full")
  (return-type "none")
  (parameters
    '("GtkCallback" "callback")
    '("GtkCallbackMarshal" "marshal")
    '("gpointer" "callback_data")
    '("GtkDestroyNotify" "notify")
  )
)

(define-method get_children
  (of-object "GtkContainer")
  (c-name "gtk_container_get_children")
  (return-type "GList*")
)

(define-method propagate_expose
  (of-object "GtkContainer")
  (c-name "gtk_container_propagate_expose")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("GdkEventExpose*" "event")
  )
)

(define-method set_focus_chain
  (of-object "GtkContainer")
  (c-name "gtk_container_set_focus_chain")
  (return-type "none")
  (parameters
    '("GList*" "focusable_widgets")
  )
)

(define-method get_focus_chain
  (of-object "GtkContainer")
  (c-name "gtk_container_get_focus_chain")
  (return-type "gboolean")
  (parameters
    '("GList**" "focusable_widgets")
  )
)

(define-method unset_focus_chain
  (of-object "GtkContainer")
  (c-name "gtk_container_unset_focus_chain")
  (return-type "none")
)

(define-method set_reallocate_redraws
  (of-object "GtkContainer")
  (c-name "gtk_container_set_reallocate_redraws")
  (return-type "none")
  (parameters
    '("gboolean" "needs_redraws")
  )
)

(define-method set_focus_child
  (of-object "GtkContainer")
  (c-name "gtk_container_set_focus_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method set_focus_vadjustment
  (of-object "GtkContainer")
  (c-name "gtk_container_set_focus_vadjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment")
  )
)

(define-method get_focus_vadjustment
  (of-object "GtkContainer")
  (c-name "gtk_container_get_focus_vadjustment")
  (return-type "GtkAdjustment*")
)

(define-method set_focus_hadjustment
  (of-object "GtkContainer")
  (c-name "gtk_container_set_focus_hadjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment")
  )
)

(define-method get_focus_hadjustment
  (of-object "GtkContainer")
  (c-name "gtk_container_get_focus_hadjustment")
  (return-type "GtkAdjustment*")
)

(define-method resize_children
  (of-object "GtkContainer")
  (c-name "gtk_container_resize_children")
  (return-type "none")
)

(define-method child_type
  (of-object "GtkContainer")
  (c-name "gtk_container_child_type")
  (return-type "GType")
)

(define-method install_child_property
  (of-object "GtkContainerClass")
  (c-name "gtk_container_class_install_child_property")
  (return-type "none")
  (parameters
    '("guint" "property_id")
    '("GParamSpec*" "pspec")
  )
)

(define-function gtk_container_class_find_child_property
  (c-name "gtk_container_class_find_child_property")
  (return-type "GParamSpec*")
  (parameters
    '("GObjectClass*" "cclass")
    '("const-gchar*" "property_name")
  )
)

(define-function gtk_container_class_list_child_properties
  (c-name "gtk_container_class_list_child_properties")
  (return-type "GParamSpec**")
  (parameters
    '("GObjectClass*" "cclass")
    '("guint*" "n_properties")
  )
)

(define-method add_with_properties
  (of-object "GtkContainer")
  (c-name "gtk_container_add_with_properties")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("const-gchar*" "first_prop_name")
  )
  (varargs #t)
)

(define-method child_set
  (of-object "GtkContainer")
  (c-name "gtk_container_child_set")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("const-gchar*" "first_prop_name")
  )
  (varargs #t)
)

(define-method child_get
  (of-object "GtkContainer")
  (c-name "gtk_container_child_get")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("const-gchar*" "first_prop_name")
  )
  (varargs #t)
)

(define-method child_set_valist
  (of-object "GtkContainer")
  (c-name "gtk_container_child_set_valist")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("const-gchar*" "first_property_name")
    '("va_list" "var_args")
  )
)

(define-method child_get_valist
  (of-object "GtkContainer")
  (c-name "gtk_container_child_get_valist")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("const-gchar*" "first_property_name")
    '("va_list" "var_args")
  )
)

(define-method child_set_property
  (of-object "GtkContainer")
  (c-name "gtk_container_child_set_property")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("const-gchar*" "property_name")
    '("const-GValue*" "value")
  )
)

(define-method child_get_property
  (of-object "GtkContainer")
  (c-name "gtk_container_child_get_property")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("const-gchar*" "property_name")
    '("GValue*" "value")
  )
)

(define-method forall
  (of-object "GtkContainer")
  (c-name "gtk_container_forall")
  (return-type "none")
  (parameters
    '("GtkCallback" "callback")
    '("gpointer" "callback_data")
  )
)

(define-method _queue_resize
  (of-object "GtkContainer")
  (c-name "_gtk_container_queue_resize")
  (return-type "none")
)

(define-method _clear_resize_widgets
  (of-object "GtkContainer")
  (c-name "_gtk_container_clear_resize_widgets")
  (return-type "none")
)

(define-method _child_composite_name
  (of-object "GtkContainer")
  (c-name "_gtk_container_child_composite_name")
  (return-type "gchar*")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method _dequeue_resize_handler
  (of-object "GtkContainer")
  (c-name "_gtk_container_dequeue_resize_handler")
  (return-type "none")
)

(define-method _focus_sort
  (of-object "GtkContainer")
  (c-name "_gtk_container_focus_sort")
  (return-type "GList*")
  (parameters
    '("GList*" "children")
    '("GtkDirectionType" "direction")
    '("GtkWidget*" "old_focus")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkctree.h

(define-function gtk_ctree_get_type
  (c-name "gtk_ctree_get_type")
  (return-type "GtkType")
)

(define-function gtk_ctree_new_with_titles
  (c-name "gtk_ctree_new_with_titles")
  (return-type "GtkWidget*")
  (parameters
    '("gint" "columns")
    '("gint" "tree_column")
    '("gchar*[]" "titles")
  )
)

(define-function gtk_ctree_new
  (c-name "gtk_ctree_new")
  (is-constructor-of "GtkCtree")
  (return-type "GtkWidget*")
  (parameters
    '("gint" "columns")
    '("gint" "tree_column")
  )
)

(define-method insert_node
  (of-object "GtkCTree")
  (c-name "gtk_ctree_insert_node")
  (return-type "GtkCTreeNode*")
  (parameters
    '("GtkCTreeNode*" "parent")
    '("GtkCTreeNode*" "sibling")
    '("gchar*[]" "text")
    '("guint8" "spacing")
    '("GdkPixmap*" "pixmap_closed")
    '("GdkBitmap*" "mask_closed")
    '("GdkPixmap*" "pixmap_opened")
    '("GdkBitmap*" "mask_opened")
    '("gboolean" "is_leaf")
    '("gboolean" "expanded")
  )
)

(define-method remove_node
  (of-object "GtkCTree")
  (c-name "gtk_ctree_remove_node")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node")
  )
)

(define-method insert_gnode
  (of-object "GtkCTree")
  (c-name "gtk_ctree_insert_gnode")
  (return-type "GtkCTreeNode*")
  (parameters
    '("GtkCTreeNode*" "parent")
    '("GtkCTreeNode*" "sibling")
    '("GNode*" "gnode")
    '("GtkCTreeGNodeFunc" "func")
    '("gpointer" "data")
  )
)

(define-method export_to_gnode
  (of-object "GtkCTree")
  (c-name "gtk_ctree_export_to_gnode")
  (return-type "GNode*")
  (parameters
    '("GNode*" "parent")
    '("GNode*" "sibling")
    '("GtkCTreeNode*" "node")
    '("GtkCTreeGNodeFunc" "func")
    '("gpointer" "data")
  )
)

(define-method post_recursive
  (of-object "GtkCTree")
  (c-name "gtk_ctree_post_recursive")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node")
    '("GtkCTreeFunc" "func")
    '("gpointer" "data")
  )
)

(define-method post_recursive_to_depth
  (of-object "GtkCTree")
  (c-name "gtk_ctree_post_recursive_to_depth")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node")
    '("gint" "depth")
    '("GtkCTreeFunc" "func")
    '("gpointer" "data")
  )
)

(define-method pre_recursive
  (of-object "GtkCTree")
  (c-name "gtk_ctree_pre_recursive")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node")
    '("GtkCTreeFunc" "func")
    '("gpointer" "data")
  )
)

(define-method pre_recursive_to_depth
  (of-object "GtkCTree")
  (c-name "gtk_ctree_pre_recursive_to_depth")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node")
    '("gint" "depth")
    '("GtkCTreeFunc" "func")
    '("gpointer" "data")
  )
)

(define-method is_viewable
  (of-object "GtkCTree")
  (c-name "gtk_ctree_is_viewable")
  (return-type "gboolean")
  (parameters
    '("GtkCTreeNode*" "node")
  )
)

(define-method last
  (of-object "GtkCTree")
  (c-name "gtk_ctree_last")
  (return-type "GtkCTreeNode*")
  (parameters
    '("GtkCTreeNode*" "node")
  )
)

(define-method find_node_ptr
  (of-object "GtkCTree")
  (c-name "gtk_ctree_find_node_ptr")
  (return-type "GtkCTreeNode*")
  (parameters
    '("GtkCTreeRow*" "ctree_row")
  )
)

(define-method node_nth
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_nth")
  (return-type "GtkCTreeNode*")
  (parameters
    '("guint" "row")
  )
)

(define-method find
  (of-object "GtkCTree")
  (c-name "gtk_ctree_find")
  (return-type "gboolean")
  (parameters
    '("GtkCTreeNode*" "node")
    '("GtkCTreeNode*" "child")
  )
)

(define-method is_ancestor
  (of-object "GtkCTree")
  (c-name "gtk_ctree_is_ancestor")
  (return-type "gboolean")
  (parameters
    '("GtkCTreeNode*" "node")
    '("GtkCTreeNode*" "child")
  )
)

(define-method find_by_row_data
  (of-object "GtkCTree")
  (c-name "gtk_ctree_find_by_row_data")
  (return-type "GtkCTreeNode*")
  (parameters
    '("GtkCTreeNode*" "node")
    '("gpointer" "data")
  )
)

(define-method find_all_by_row_data
  (of-object "GtkCTree")
  (c-name "gtk_ctree_find_all_by_row_data")
  (return-type "GList*")
  (parameters
    '("GtkCTreeNode*" "node")
    '("gpointer" "data")
  )
)

(define-method find_by_row_data_custom
  (of-object "GtkCTree")
  (c-name "gtk_ctree_find_by_row_data_custom")
  (return-type "GtkCTreeNode*")
  (parameters
    '("GtkCTreeNode*" "node")
    '("gpointer" "data")
    '("GCompareFunc" "func")
  )
)

(define-method find_all_by_row_data_custom
  (of-object "GtkCTree")
  (c-name "gtk_ctree_find_all_by_row_data_custom")
  (return-type "GList*")
  (parameters
    '("GtkCTreeNode*" "node")
    '("gpointer" "data")
    '("GCompareFunc" "func")
  )
)

(define-method is_hot_spot
  (of-object "GtkCTree")
  (c-name "gtk_ctree_is_hot_spot")
  (return-type "gboolean")
  (parameters
    '("gint" "x")
    '("gint" "y")
  )
)

(define-method move
  (of-object "GtkCTree")
  (c-name "gtk_ctree_move")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node")
    '("GtkCTreeNode*" "new_parent")
    '("GtkCTreeNode*" "new_sibling")
  )
)

(define-method expand
  (of-object "GtkCTree")
  (c-name "gtk_ctree_expand")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node")
  )
)

(define-method expand_recursive
  (of-object "GtkCTree")
  (c-name "gtk_ctree_expand_recursive")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node")
  )
)

(define-method expand_to_depth
  (of-object "GtkCTree")
  (c-name "gtk_ctree_expand_to_depth")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node")
    '("gint" "depth")
  )
)

(define-method collapse
  (of-object "GtkCTree")
  (c-name "gtk_ctree_collapse")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node")
  )
)

(define-method collapse_recursive
  (of-object "GtkCTree")
  (c-name "gtk_ctree_collapse_recursive")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node")
  )
)

(define-method collapse_to_depth
  (of-object "GtkCTree")
  (c-name "gtk_ctree_collapse_to_depth")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node")
    '("gint" "depth")
  )
)

(define-method toggle_expansion
  (of-object "GtkCTree")
  (c-name "gtk_ctree_toggle_expansion")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node")
  )
)

(define-method toggle_expansion_recursive
  (of-object "GtkCTree")
  (c-name "gtk_ctree_toggle_expansion_recursive")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node")
  )
)

(define-method select
  (of-object "GtkCTree")
  (c-name "gtk_ctree_select")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node")
  )
)

(define-method select_recursive
  (of-object "GtkCTree")
  (c-name "gtk_ctree_select_recursive")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node")
  )
)

(define-method unselect
  (of-object "GtkCTree")
  (c-name "gtk_ctree_unselect")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node")
  )
)

(define-method unselect_recursive
  (of-object "GtkCTree")
  (c-name "gtk_ctree_unselect_recursive")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node")
  )
)

(define-method real_select_recursive
  (of-object "GtkCTree")
  (c-name "gtk_ctree_real_select_recursive")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node")
    '("gint" "state")
  )
)

(define-method node_set_text
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_set_text")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node")
    '("gint" "column")
    '("const-gchar*" "text")
  )
)

(define-method node_set_pixmap
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_set_pixmap")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node")
    '("gint" "column")
    '("GdkPixmap*" "pixmap")
    '("GdkBitmap*" "mask")
  )
)

(define-method node_set_pixtext
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_set_pixtext")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node")
    '("gint" "column")
    '("const-gchar*" "text")
    '("guint8" "spacing")
    '("GdkPixmap*" "pixmap")
    '("GdkBitmap*" "mask")
  )
)

(define-method set_node_info
  (of-object "GtkCTree")
  (c-name "gtk_ctree_set_node_info")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node")
    '("const-gchar*" "text")
    '("guint8" "spacing")
    '("GdkPixmap*" "pixmap_closed")
    '("GdkBitmap*" "mask_closed")
    '("GdkPixmap*" "pixmap_opened")
    '("GdkBitmap*" "mask_opened")
    '("gboolean" "is_leaf")
    '("gboolean" "expanded")
  )
)

(define-method node_set_shift
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_set_shift")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node")
    '("gint" "column")
    '("gint" "vertical")
    '("gint" "horizontal")
  )
)

(define-method node_set_selectable
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_set_selectable")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node")
    '("gboolean" "selectable")
  )
)

(define-method node_get_selectable
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_get_selectable")
  (return-type "gboolean")
  (parameters
    '("GtkCTreeNode*" "node")
  )
)

(define-method node_get_cell_type
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_get_cell_type")
  (return-type "GtkCellType")
  (parameters
    '("GtkCTreeNode*" "node")
    '("gint" "column")
  )
)

(define-method node_get_text
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_get_text")
  (return-type "gboolean")
  (parameters
    '("GtkCTreeNode*" "node")
    '("gint" "column")
    '("gchar**" "text")
  )
)

(define-method node_get_pixmap
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_get_pixmap")
  (return-type "gboolean")
  (parameters
    '("GtkCTreeNode*" "node")
    '("gint" "column")
    '("GdkPixmap**" "pixmap")
    '("GdkBitmap**" "mask")
  )
)

(define-method node_get_pixtext
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_get_pixtext")
  (return-type "gboolean")
  (parameters
    '("GtkCTreeNode*" "node")
    '("gint" "column")
    '("gchar**" "text")
    '("guint8*" "spacing")
    '("GdkPixmap**" "pixmap")
    '("GdkBitmap**" "mask")
  )
)

(define-method get_node_info
  (of-object "GtkCTree")
  (c-name "gtk_ctree_get_node_info")
  (return-type "gboolean")
  (parameters
    '("GtkCTreeNode*" "node")
    '("gchar**" "text")
    '("guint8*" "spacing")
    '("GdkPixmap**" "pixmap_closed")
    '("GdkBitmap**" "mask_closed")
    '("GdkPixmap**" "pixmap_opened")
    '("GdkBitmap**" "mask_opened")
    '("gboolean*" "is_leaf")
    '("gboolean*" "expanded")
  )
)

(define-method node_set_row_style
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_set_row_style")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node")
    '("GtkStyle*" "style")
  )
)

(define-method node_get_row_style
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_get_row_style")
  (return-type "GtkStyle*")
  (parameters
    '("GtkCTreeNode*" "node")
  )
)

(define-method node_set_cell_style
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_set_cell_style")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node")
    '("gint" "column")
    '("GtkStyle*" "style")
  )
)

(define-method node_get_cell_style
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_get_cell_style")
  (return-type "GtkStyle*")
  (parameters
    '("GtkCTreeNode*" "node")
    '("gint" "column")
  )
)

(define-method node_set_foreground
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_set_foreground")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node")
    '("GdkColor*" "color")
  )
)

(define-method node_set_background
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_set_background")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node")
    '("GdkColor*" "color")
  )
)

(define-method node_set_row_data
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_set_row_data")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node")
    '("gpointer" "data")
  )
)

(define-method node_set_row_data_full
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_set_row_data_full")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node")
    '("gpointer" "data")
    '("GtkDestroyNotify" "destroy")
  )
)

(define-method node_get_row_data
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_get_row_data")
  (return-type "gpointer")
  (parameters
    '("GtkCTreeNode*" "node")
  )
)

(define-method node_moveto
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_moveto")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node")
    '("gint" "column")
    '("gfloat" "row_align")
    '("gfloat" "col_align")
  )
)

(define-method node_is_visible
  (of-object "GtkCTree")
  (c-name "gtk_ctree_node_is_visible")
  (return-type "GtkVisibility")
  (parameters
    '("GtkCTreeNode*" "node")
  )
)

(define-method set_indent
  (of-object "GtkCTree")
  (c-name "gtk_ctree_set_indent")
  (return-type "none")
  (parameters
    '("gint" "indent")
  )
)

(define-method set_spacing
  (of-object "GtkCTree")
  (c-name "gtk_ctree_set_spacing")
  (return-type "none")
  (parameters
    '("gint" "spacing")
  )
)

(define-method set_show_stub
  (of-object "GtkCTree")
  (c-name "gtk_ctree_set_show_stub")
  (return-type "none")
  (parameters
    '("gboolean" "show_stub")
  )
)

(define-method set_line_style
  (of-object "GtkCTree")
  (c-name "gtk_ctree_set_line_style")
  (return-type "none")
  (parameters
    '("GtkCTreeLineStyle" "line_style")
  )
)

(define-method set_expander_style
  (of-object "GtkCTree")
  (c-name "gtk_ctree_set_expander_style")
  (return-type "none")
  (parameters
    '("GtkCTreeExpanderStyle" "expander_style")
  )
)

(define-method set_drag_compare_func
  (of-object "GtkCTree")
  (c-name "gtk_ctree_set_drag_compare_func")
  (return-type "none")
  (parameters
    '("GtkCTreeCompareDragFunc" "cmp_func")
  )
)

(define-method sort_node
  (of-object "GtkCTree")
  (c-name "gtk_ctree_sort_node")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node")
  )
)

(define-method sort_recursive
  (of-object "GtkCTree")
  (c-name "gtk_ctree_sort_recursive")
  (return-type "none")
  (parameters
    '("GtkCTreeNode*" "node")
  )
)

(define-function gtk_ctree_node_get_type
  (c-name "gtk_ctree_node_get_type")
  (return-type "GType")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkcurve.h

(define-function gtk_curve_get_type
  (c-name "gtk_curve_get_type")
  (return-type "GType")
)

(define-function gtk_curve_new
  (c-name "gtk_curve_new")
  (is-constructor-of "GtkCurve")
  (return-type "GtkWidget*")
)

(define-method reset
  (of-object "GtkCurve")
  (c-name "gtk_curve_reset")
  (return-type "none")
)

(define-method set_gamma
  (of-object "GtkCurve")
  (c-name "gtk_curve_set_gamma")
  (return-type "none")
  (parameters
    '("gfloat" "gamma_")
  )
)

(define-method set_range
  (of-object "GtkCurve")
  (c-name "gtk_curve_set_range")
  (return-type "none")
  (parameters
    '("gfloat" "min_x")
    '("gfloat" "max_x")
    '("gfloat" "min_y")
    '("gfloat" "max_y")
  )
)

(define-method get_vector
  (of-object "GtkCurve")
  (c-name "gtk_curve_get_vector")
  (return-type "none")
  (parameters
    '("int" "veclen")
    '("gfloat[]" "vector")
  )
)

(define-method set_vector
  (of-object "GtkCurve")
  (c-name "gtk_curve_set_vector")
  (return-type "none")
  (parameters
    '("int" "veclen")
    '("gfloat[]" "vector")
  )
)

(define-method set_curve_type
  (of-object "GtkCurve")
  (c-name "gtk_curve_set_curve_type")
  (return-type "none")
  (parameters
    '("GtkCurveType" "type")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkdebug.h



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkdialog.h

(define-function gtk_dialog_get_type
  (c-name "gtk_dialog_get_type")
  (return-type "GType")
)

(define-function gtk_dialog_new
  (c-name "gtk_dialog_new")
  (is-constructor-of "GtkDialog")
  (return-type "GtkWidget*")
)

(define-function gtk_dialog_new_with_buttons
  (c-name "gtk_dialog_new_with_buttons")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "title")
    '("GtkWindow*" "parent")
    '("GtkDialogFlags" "flags")
    '("const-gchar*" "first_button_text")
  )
  (varargs #t)
)

(define-method add_action_widget
  (of-object "GtkDialog")
  (c-name "gtk_dialog_add_action_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("gint" "response_id")
  )
)

(define-method add_button
  (of-object "GtkDialog")
  (c-name "gtk_dialog_add_button")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "button_text")
    '("gint" "response_id")
  )
)

(define-method add_buttons
  (of-object "GtkDialog")
  (c-name "gtk_dialog_add_buttons")
  (return-type "none")
  (parameters
    '("const-gchar*" "first_button_text")
  )
  (varargs #t)
)

(define-method set_response_sensitive
  (of-object "GtkDialog")
  (c-name "gtk_dialog_set_response_sensitive")
  (return-type "none")
  (parameters
    '("gint" "response_id")
    '("gboolean" "setting")
  )
)

(define-method set_default_response
  (of-object "GtkDialog")
  (c-name "gtk_dialog_set_default_response")
  (return-type "none")
  (parameters
    '("gint" "response_id")
  )
)

(define-method set_has_separator
  (of-object "GtkDialog")
  (c-name "gtk_dialog_set_has_separator")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_has_separator
  (of-object "GtkDialog")
  (c-name "gtk_dialog_get_has_separator")
  (return-type "gboolean")
)

(define-method response
  (of-object "GtkDialog")
  (c-name "gtk_dialog_response")
  (return-type "none")
  (parameters
    '("gint" "response_id")
  )
)

(define-method run
  (of-object "GtkDialog")
  (c-name "gtk_dialog_run")
  (return-type "gint")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkdnd.h

(define-function gtk_drag_finish
  (c-name "gtk_drag_finish")
  (return-type "none")
  (parameters
    '("GdkDragContext*" "context")
    '("gboolean" "success")
    '("gboolean" "del")
    '("guint32" "time_")
  )
)

(define-function gtk_drag_get_source_widget
  (c-name "gtk_drag_get_source_widget")
  (return-type "GtkWidget*")
  (parameters
    '("GdkDragContext*" "context")
  )
)

(define-function gtk_drag_highlight
  (c-name "gtk_drag_highlight")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-function gtk_drag_unhighlight
  (c-name "gtk_drag_unhighlight")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-function gtk_drag_dest_set
  (c-name "gtk_drag_dest_set")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("GtkDestDefaults" "flags")
    '("const-GtkTargetEntry*" "targets")
    '("gint" "n_targets")
    '("GdkDragAction" "actions")
  )
)

(define-function gtk_drag_dest_set_proxy
  (c-name "gtk_drag_dest_set_proxy")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("GdkWindow*" "proxy_window")
    '("GdkDragProtocol" "protocol")
    '("gboolean" "use_coordinates")
  )
)

(define-function gtk_drag_dest_unset
  (c-name "gtk_drag_dest_unset")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-function gtk_drag_dest_find_target
  (c-name "gtk_drag_dest_find_target")
  (return-type "GdkAtom")
  (parameters
    '("GtkWidget*" "widget")
    '("GdkDragContext*" "context")
    '("GtkTargetList*" "target_list")
  )
)

(define-function gtk_drag_dest_get_target_list
  (c-name "gtk_drag_dest_get_target_list")
  (return-type "GtkTargetList*")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-function gtk_drag_dest_set_target_list
  (c-name "gtk_drag_dest_set_target_list")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("GtkTargetList*" "target_list")
  )
)

(define-function gtk_drag_source_set
  (c-name "gtk_drag_source_set")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("GdkModifierType" "start_button_mask")
    '("const-GtkTargetEntry*" "targets")
    '("gint" "n_targets")
    '("GdkDragAction" "actions")
  )
)

(define-function gtk_drag_source_unset
  (c-name "gtk_drag_source_unset")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-function gtk_drag_source_set_icon
  (c-name "gtk_drag_source_set_icon")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("GdkColormap*" "colormap")
    '("GdkPixmap*" "pixmap")
    '("GdkBitmap*" "mask")
  )
)

(define-function gtk_drag_source_set_icon_pixbuf
  (c-name "gtk_drag_source_set_icon_pixbuf")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("GdkPixbuf*" "pixbuf")
  )
)

(define-function gtk_drag_source_set_icon_stock
  (c-name "gtk_drag_source_set_icon_stock")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("const-gchar*" "stock_id")
  )
)

(define-function gtk_drag_begin
  (c-name "gtk_drag_begin")
  (return-type "GdkDragContext*")
  (parameters
    '("GtkWidget*" "widget")
    '("GtkTargetList*" "targets")
    '("GdkDragAction" "actions")
    '("gint" "button")
    '("GdkEvent*" "event")
  )
)

(define-function gtk_drag_set_icon_widget
  (c-name "gtk_drag_set_icon_widget")
  (return-type "none")
  (parameters
    '("GdkDragContext*" "context")
    '("GtkWidget*" "widget")
    '("gint" "hot_x")
    '("gint" "hot_y")
  )
)

(define-function gtk_drag_set_icon_pixmap
  (c-name "gtk_drag_set_icon_pixmap")
  (return-type "none")
  (parameters
    '("GdkDragContext*" "context")
    '("GdkColormap*" "colormap")
    '("GdkPixmap*" "pixmap")
    '("GdkBitmap*" "mask")
    '("gint" "hot_x")
    '("gint" "hot_y")
  )
)

(define-function gtk_drag_set_icon_pixbuf
  (c-name "gtk_drag_set_icon_pixbuf")
  (return-type "none")
  (parameters
    '("GdkDragContext*" "context")
    '("GdkPixbuf*" "pixbuf")
    '("gint" "hot_x")
    '("gint" "hot_y")
  )
)

(define-function gtk_drag_set_icon_stock
  (c-name "gtk_drag_set_icon_stock")
  (return-type "none")
  (parameters
    '("GdkDragContext*" "context")
    '("const-gchar*" "stock_id")
    '("gint" "hot_x")
    '("gint" "hot_y")
  )
)

(define-function gtk_drag_set_icon_default
  (c-name "gtk_drag_set_icon_default")
  (return-type "none")
  (parameters
    '("GdkDragContext*" "context")
  )
)

(define-function gtk_drag_check_threshold
  (c-name "gtk_drag_check_threshold")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "widget")
    '("gint" "start_x")
    '("gint" "start_y")
    '("gint" "current_x")
    '("gint" "current_y")
  )
)

(define-function _gtk_drag_source_handle_event
  (c-name "_gtk_drag_source_handle_event")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("GdkEvent*" "event")
  )
)

(define-function _gtk_drag_dest_handle_event
  (c-name "_gtk_drag_dest_handle_event")
  (return-type "none")
  (parameters
    '("GtkWidget*" "toplevel")
    '("GdkEvent*" "event")
  )
)

(define-function gtk_drag_set_default_icon
  (c-name "gtk_drag_set_default_icon")
  (return-type "none")
  (parameters
    '("GdkColormap*" "colormap")
    '("GdkPixmap*" "pixmap")
    '("GdkBitmap*" "mask")
    '("gint" "hot_x")
    '("gint" "hot_y")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkdrawingarea.h

(define-function gtk_drawing_area_get_type
  (c-name "gtk_drawing_area_get_type")
  (return-type "GType")
)

(define-function gtk_drawing_area_new
  (c-name "gtk_drawing_area_new")
  (is-constructor-of "GtkDrawingArea")
  (return-type "GtkWidget*")
)

(define-method size
  (of-object "GtkDrawingArea")
  (c-name "gtk_drawing_area_size")
  (return-type "none")
  (parameters
    '("gint" "width")
    '("gint" "height")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkeditable.h

(define-function gtk_editable_get_type
  (c-name "gtk_editable_get_type")
  (return-type "GType")
)

(define-method select_region
  (of-object "GtkEditable")
  (c-name "gtk_editable_select_region")
  (return-type "none")
  (parameters
    '("gint" "start")
    '("gint" "end")
  )
)

(define-method get_selection_bounds
  (of-object "GtkEditable")
  (c-name "gtk_editable_get_selection_bounds")
  (return-type "gboolean")
  (parameters
    '("gint*" "start")
    '("gint*" "end")
  )
)

(define-method insert_text
  (of-object "GtkEditable")
  (c-name "gtk_editable_insert_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "new_text")
    '("gint" "new_text_length")
    '("gint*" "position")
  )
)

(define-method delete_text
  (of-object "GtkEditable")
  (c-name "gtk_editable_delete_text")
  (return-type "none")
  (parameters
    '("gint" "start_pos")
    '("gint" "end_pos")
  )
)

(define-method get_chars
  (of-object "GtkEditable")
  (c-name "gtk_editable_get_chars")
  (return-type "gchar*")
  (parameters
    '("gint" "start_pos")
    '("gint" "end_pos")
  )
)

(define-method cut_clipboard
  (of-object "GtkEditable")
  (c-name "gtk_editable_cut_clipboard")
  (return-type "none")
)

(define-method copy_clipboard
  (of-object "GtkEditable")
  (c-name "gtk_editable_copy_clipboard")
  (return-type "none")
)

(define-method paste_clipboard
  (of-object "GtkEditable")
  (c-name "gtk_editable_paste_clipboard")
  (return-type "none")
)

(define-method delete_selection
  (of-object "GtkEditable")
  (c-name "gtk_editable_delete_selection")
  (return-type "none")
)

(define-method set_position
  (of-object "GtkEditable")
  (c-name "gtk_editable_set_position")
  (return-type "none")
  (parameters
    '("gint" "position")
  )
)

(define-method get_position
  (of-object "GtkEditable")
  (c-name "gtk_editable_get_position")
  (return-type "gint")
)

(define-method set_editable
  (of-object "GtkEditable")
  (c-name "gtk_editable_set_editable")
  (return-type "none")
  (parameters
    '("gboolean" "is_editable")
  )
)

(define-method get_editable
  (of-object "GtkEditable")
  (c-name "gtk_editable_get_editable")
  (return-type "gboolean")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkentrycompletion.h

(define-function gtk_entry_completion_get_type
  (c-name "gtk_entry_completion_get_type")
  (return-type "GType")
)

(define-function gtk_entry_completion_new
  (c-name "gtk_entry_completion_new")
  (is-constructor-of "GtkEntryCompletion")
  (return-type "GtkEntryCompletion*")
)

(define-method get_entry
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_get_entry")
  (return-type "GtkWidget*")
)

(define-method set_model
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_set_model")
  (return-type "none")
  (parameters
    '("GtkTreeModel*" "model")
  )
)

(define-method get_model
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_get_model")
  (return-type "GtkTreeModel*")
)

(define-method set_match_func
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_set_match_func")
  (return-type "none")
  (parameters
    '("GtkEntryCompletionMatchFunc" "func")
    '("gpointer" "func_data")
    '("GDestroyNotify" "func_notify")
  )
)

(define-method set_minimum_key_length
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_set_minimum_key_length")
  (return-type "none")
  (parameters
    '("gint" "length")
  )
)

(define-method get_minimum_key_length
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_get_minimum_key_length")
  (return-type "gint")
)

(define-method complete
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_complete")
  (return-type "none")
)

(define-method insert_action_text
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_insert_action_text")
  (return-type "none")
  (parameters
    '("gint" "index")
    '("const-gchar*" "text")
  )
)

(define-method insert_action_markup
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_insert_action_markup")
  (return-type "none")
  (parameters
    '("gint" "index")
    '("const-gchar*" "markup")
  )
)

(define-method delete_action
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_delete_action")
  (return-type "none")
  (parameters
    '("gint" "index")
  )
)

(define-method set_text_column
  (of-object "GtkEntryCompletion")
  (c-name "gtk_entry_completion_set_text_column")
  (return-type "none")
  (parameters
    '("gint" "column")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkentry.h

(define-function gtk_entry_get_type
  (c-name "gtk_entry_get_type")
  (return-type "GType")
)

(define-function gtk_entry_new
  (c-name "gtk_entry_new")
  (is-constructor-of "GtkEntry")
  (return-type "GtkWidget*")
)

(define-method set_visibility
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_visibility")
  (return-type "none")
  (parameters
    '("gboolean" "visible")
  )
)

(define-method get_visibility
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_visibility")
  (return-type "gboolean")
)

(define-method set_invisible_char
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_invisible_char")
  (return-type "none")
  (parameters
    '("gunichar" "ch")
  )
)

(define-method get_invisible_char
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_invisible_char")
  (return-type "gunichar")
)

(define-method set_has_frame
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_has_frame")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_has_frame
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_has_frame")
  (return-type "gboolean")
)

(define-method set_max_length
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_max_length")
  (return-type "none")
  (parameters
    '("gint" "max")
  )
)

(define-method get_max_length
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_max_length")
  (return-type "gint")
)

(define-method set_activates_default
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_activates_default")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_activates_default
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_activates_default")
  (return-type "gboolean")
)

(define-method set_width_chars
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_width_chars")
  (return-type "none")
  (parameters
    '("gint" "n_chars")
  )
)

(define-method get_width_chars
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_width_chars")
  (return-type "gint")
)

(define-method set_text
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "text")
  )
)

(define-method get_text
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_text")
  (return-type "const-gchar*")
)

(define-method get_layout
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_layout")
  (return-type "PangoLayout*")
)

(define-method get_layout_offsets
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_layout_offsets")
  (return-type "none")
  (parameters
    '("gint*" "x")
    '("gint*" "y")
  )
)

(define-method set_completion
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_completion")
  (return-type "none")
  (parameters
    '("GtkEntryCompletion*" "completion")
  )
)

(define-method get_completion
  (of-object "GtkEntry")
  (c-name "gtk_entry_get_completion")
  (return-type "GtkEntryCompletion*")
)

(define-function gtk_entry_new_with_max_length
  (c-name "gtk_entry_new_with_max_length")
  (return-type "GtkWidget*")
  (parameters
    '("gint" "max")
  )
)

(define-method append_text
  (of-object "GtkEntry")
  (c-name "gtk_entry_append_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "text")
  )
)

(define-method prepend_text
  (of-object "GtkEntry")
  (c-name "gtk_entry_prepend_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "text")
  )
)

(define-method set_position
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_position")
  (return-type "none")
  (parameters
    '("gint" "position")
  )
)

(define-method select_region
  (of-object "GtkEntry")
  (c-name "gtk_entry_select_region")
  (return-type "none")
  (parameters
    '("gint" "start")
    '("gint" "end")
  )
)

(define-method set_editable
  (of-object "GtkEntry")
  (c-name "gtk_entry_set_editable")
  (return-type "none")
  (parameters
    '("gboolean" "editable")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkentryprivate.h

(define-method _popup
  (of-object "GtkEntryCompletion")
  (c-name "_gtk_entry_completion_popup")
  (return-type "none")
)

(define-method _popdown
  (of-object "GtkEntryCompletion")
  (c-name "_gtk_entry_completion_popdown")
  (return-type "none")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkenums.h



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkeventbox.h

(define-function gtk_event_box_get_type
  (c-name "gtk_event_box_get_type")
  (return-type "GType")
)

(define-function gtk_event_box_new
  (c-name "gtk_event_box_new")
  (is-constructor-of "GtkEventBox")
  (return-type "GtkWidget*")
)

(define-method get_visible_window
  (of-object "GtkEventBox")
  (c-name "gtk_event_box_get_visible_window")
  (return-type "gboolean")
)

(define-method set_visible_window
  (of-object "GtkEventBox")
  (c-name "gtk_event_box_set_visible_window")
  (return-type "none")
  (parameters
    '("gboolean" "visible_window")
  )
)

(define-method get_above_child
  (of-object "GtkEventBox")
  (c-name "gtk_event_box_get_above_child")
  (return-type "gboolean")
)

(define-method set_above_child
  (of-object "GtkEventBox")
  (c-name "gtk_event_box_set_above_child")
  (return-type "none")
  (parameters
    '("gboolean" "above_child")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkexpander.h

(define-function gtk_expander_get_type
  (c-name "gtk_expander_get_type")
  (return-type "GType")
)

(define-function gtk_expander_new
  (c-name "gtk_expander_new")
  (is-constructor-of "GtkExpander")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "label")
  )
)

(define-function gtk_expander_new_with_mnemonic
  (c-name "gtk_expander_new_with_mnemonic")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "label")
  )
)

(define-method set_expanded
  (of-object "GtkExpander")
  (c-name "gtk_expander_set_expanded")
  (return-type "none")
  (parameters
    '("gboolean" "expanded")
  )
)

(define-method get_expanded
  (of-object "GtkExpander")
  (c-name "gtk_expander_get_expanded")
  (return-type "gboolean")
)

(define-method set_spacing
  (of-object "GtkExpander")
  (c-name "gtk_expander_set_spacing")
  (return-type "none")
  (parameters
    '("gint" "spacing")
  )
)

(define-method get_spacing
  (of-object "GtkExpander")
  (c-name "gtk_expander_get_spacing")
  (return-type "gint")
)

(define-method set_label
  (of-object "GtkExpander")
  (c-name "gtk_expander_set_label")
  (return-type "none")
  (parameters
    '("const-gchar*" "label")
  )
)

(define-method get_label
  (of-object "GtkExpander")
  (c-name "gtk_expander_get_label")
  (return-type "const-gchar*")
)

(define-method set_use_underline
  (of-object "GtkExpander")
  (c-name "gtk_expander_set_use_underline")
  (return-type "none")
  (parameters
    '("gboolean" "use_underline")
  )
)

(define-method get_use_underline
  (of-object "GtkExpander")
  (c-name "gtk_expander_get_use_underline")
  (return-type "gboolean")
)

(define-method set_label_widget
  (of-object "GtkExpander")
  (c-name "gtk_expander_set_label_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "label_widget")
  )
)

(define-method get_label_widget
  (of-object "GtkExpander")
  (c-name "gtk_expander_get_label_widget")
  (return-type "GtkWidget*")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkfilechooserdefault.h

(define-function _gtk_file_chooser_default_new
  (c-name "_gtk_file_chooser_default_new")
  (is-constructor-of "GtkFileChooserDefault")
  (return-type "GtkWidget*")
  (parameters
    '("GtkFileSystem*" "file_system")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkfilechooserdialog.h

(define-function gtk_file_chooser_dialog_get_type
  (c-name "gtk_file_chooser_dialog_get_type")
  (return-type "GType")
)

(define-function gtk_file_chooser_dialog_new
  (c-name "gtk_file_chooser_dialog_new")
  (is-constructor-of "GtkFileChooserDialog")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "title")
    '("GtkWindow*" "parent")
    '("GtkFileChooserAction" "action")
    '("const-gchar*" "first_button_text")
  )
  (varargs #t)
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkfilechooserentry.h

(define-function _gtk_file_chooser_entry_new
  (c-name "_gtk_file_chooser_entry_new")
  (is-constructor-of "GtkFileChooserEntry")
  (return-type "GtkWidget*")
)

(define-method _set_file_system
  (of-object "GtkFileChooserEntry")
  (c-name "_gtk_file_chooser_entry_set_file_system")
  (return-type "none")
  (parameters
    '("GtkFileSystem*" "file_system")
  )
)

(define-method _set_base_folder
  (of-object "GtkFileChooserEntry")
  (c-name "_gtk_file_chooser_entry_set_base_folder")
  (return-type "none")
  (parameters
    '("const-GtkFilePath*" "path")
  )
)

(define-method _set_file_part
  (of-object "GtkFileChooserEntry")
  (c-name "_gtk_file_chooser_entry_set_file_part")
  (return-type "none")
  (parameters
    '("const-gchar*" "file_part")
  )
)

(define-method _get_current_folder
  (of-object "GtkFileChooserEntry")
  (c-name "_gtk_file_chooser_entry_get_current_folder")
  (return-type "const-GtkFilePath*")
)

(define-method _get_file_part
  (of-object "GtkFileChooserEntry")
  (c-name "_gtk_file_chooser_entry_get_file_part")
  (return-type "const-gchar*")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkfilechooser.h

(define-function gtk_file_chooser_error_quark
  (c-name "gtk_file_chooser_error_quark")
  (return-type "GQuark")
)

(define-method set_action
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_action")
  (return-type "none")
  (parameters
    '("GtkFileChooserAction" "action")
  )
)

(define-method get_action
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_action")
  (return-type "GtkFileChooserAction")
)

(define-method set_folder_mode
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_folder_mode")
  (return-type "none")
  (parameters
    '("gboolean" "folder_mode")
  )
)

(define-method get_folder_mode
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_folder_mode")
  (return-type "gboolean")
)

(define-method set_local_only
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_local_only")
  (return-type "none")
  (parameters
    '("gboolean" "files_only")
  )
)

(define-method get_local_only
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_local_only")
  (return-type "gboolean")
)

(define-method set_select_multiple
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_select_multiple")
  (return-type "none")
  (parameters
    '("gboolean" "select_multiple")
  )
)

(define-method get_select_multiple
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_select_multiple")
  (return-type "gboolean")
)

(define-method set_current_name
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_current_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method get_filename
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_filename")
  (return-type "gchar*")
)

(define-method set_filename
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_filename")
  (return-type "none")
  (parameters
    '("const-char*" "filename")
  )
)

(define-method select_filename
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_select_filename")
  (return-type "none")
  (parameters
    '("const-char*" "filename")
  )
)

(define-method unselect_filename
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_unselect_filename")
  (return-type "none")
  (parameters
    '("const-char*" "filename")
  )
)

(define-method select_all
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_select_all")
  (return-type "none")
)

(define-method unselect_all
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_unselect_all")
  (return-type "none")
)

(define-method get_filenames
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_filenames")
  (return-type "GSList*")
)

(define-method set_current_folder
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_current_folder")
  (return-type "none")
  (parameters
    '("const-gchar*" "filename")
  )
)

(define-method get_current_folder
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_current_folder")
  (return-type "gchar*")
)

(define-method get_uri
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_uri")
  (return-type "gchar*")
)

(define-method set_uri
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_uri")
  (return-type "none")
  (parameters
    '("const-char*" "uri")
  )
)

(define-method select_uri
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_select_uri")
  (return-type "none")
  (parameters
    '("const-char*" "uri")
  )
)

(define-method unselect_uri
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_unselect_uri")
  (return-type "none")
  (parameters
    '("const-char*" "uri")
  )
)

(define-method get_uris
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_uris")
  (return-type "GSList*")
)

(define-method set_current_folder_uri
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_current_folder_uri")
  (return-type "none")
  (parameters
    '("const-gchar*" "uri")
  )
)

(define-method get_current_folder_uri
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_current_folder_uri")
  (return-type "gchar*")
)

(define-method set_preview_widget
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_preview_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "preview_widget")
  )
)

(define-method get_preview_widget
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_preview_widget")
  (return-type "GtkWidget*")
)

(define-method set_preview_widget_active
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_preview_widget_active")
  (return-type "none")
  (parameters
    '("gboolean" "active")
  )
)

(define-method get_preview_widget_active
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_preview_widget_active")
  (return-type "gboolean")
)

(define-method get_preview_filename
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_preview_filename")
  (return-type "char*")
)

(define-method get_preview_uri
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_preview_uri")
  (return-type "char*")
)

(define-method set_extra_widget
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_extra_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "extra_widget")
  )
)

(define-method get_extra_widget
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_extra_widget")
  (return-type "GtkWidget*")
)

(define-method add_filter
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_add_filter")
  (return-type "none")
  (parameters
    '("GtkFileFilter*" "filter")
  )
)

(define-method remove_filter
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_remove_filter")
  (return-type "none")
  (parameters
    '("GtkFileFilter*" "filter")
  )
)

(define-method list_filters
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_list_filters")
  (return-type "GSList*")
)

(define-method set_filter
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_set_filter")
  (return-type "none")
  (parameters
    '("GtkFileFilter*" "filter")
  )
)

(define-method get_filter
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_get_filter")
  (return-type "GtkFileFilter*")
)

(define-method add_shortcut_folder
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_add_shortcut_folder")
  (return-type "gboolean")
  (parameters
    '("const-char*" "folder")
    '("GError**" "error")
  )
)

(define-method remove_shortcut_folder
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_remove_shortcut_folder")
  (return-type "gboolean")
  (parameters
    '("const-char*" "folder")
    '("GError**" "error")
  )
)

(define-method list_shortcut_folders
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_list_shortcut_folders")
  (return-type "GSList*")
)

(define-method add_shortcut_folder_uri
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_add_shortcut_folder_uri")
  (return-type "gboolean")
  (parameters
    '("const-char*" "folder")
    '("GError**" "error")
  )
)

(define-method remove_shortcut_folder_uri
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_remove_shortcut_folder_uri")
  (return-type "gboolean")
  (parameters
    '("const-char*" "folder")
    '("GError**" "error")
  )
)

(define-method list_shortcut_folder_uris
  (of-object "GtkFileChooser")
  (c-name "gtk_file_chooser_list_shortcut_folder_uris")
  (return-type "GSList*")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkfilechooserprivate.h

(define-function void
  (c-name "void")
  (return-type "G_BEGIN_DECLS")
  (parameters
  )
)

(define-method _get_file_system
  (of-object "GtkFileChooser")
  (c-name "_gtk_file_chooser_get_file_system")
  (return-type "GtkFileSystem*")
)

(define-method _set_current_folder_path
  (of-object "GtkFileChooser")
  (c-name "_gtk_file_chooser_set_current_folder_path")
  (return-type "none")
  (parameters
    '("const-GtkFilePath*" "path")
  )
)

(define-method _get_current_folder_path
  (of-object "GtkFileChooser")
  (c-name "_gtk_file_chooser_get_current_folder_path")
  (return-type "GtkFilePath*")
)

(define-method _select_path
  (of-object "GtkFileChooser")
  (c-name "_gtk_file_chooser_select_path")
  (return-type "none")
  (parameters
    '("const-GtkFilePath*" "path")
  )
)

(define-method _unselect_path
  (of-object "GtkFileChooser")
  (c-name "_gtk_file_chooser_unselect_path")
  (return-type "none")
  (parameters
    '("const-GtkFilePath*" "path")
  )
)

(define-method _get_paths
  (of-object "GtkFileChooser")
  (c-name "_gtk_file_chooser_get_paths")
  (return-type "GSList*")
)

(define-method _get_preview_path
  (of-object "GtkFileChooser")
  (c-name "_gtk_file_chooser_get_preview_path")
  (return-type "GtkFilePath*")
)

(define-method _add_shortcut_folder
  (of-object "GtkFileChooser")
  (c-name "_gtk_file_chooser_add_shortcut_folder")
  (return-type "gboolean")
  (parameters
    '("const-GtkFilePath*" "path")
    '("GError**" "error")
  )
)

(define-method _remove_shortcut_folder
  (of-object "GtkFileChooser")
  (c-name "_gtk_file_chooser_remove_shortcut_folder")
  (return-type "gboolean")
  (parameters
    '("const-GtkFilePath*" "path")
    '("GError**" "error")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkfilechooserutils.h

(define-function _gtk_file_chooser_delegate_iface_init
  (c-name "_gtk_file_chooser_delegate_iface_init")
  (return-type "none")
  (parameters
    '("GtkFileChooserIface*" "iface")
  )
)

(define-method _set_delegate
  (of-object "GtkFileChooser")
  (c-name "_gtk_file_chooser_set_delegate")
  (return-type "none")
  (parameters
    '("GtkFileChooser*" "delegate")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkfilechooserwidget.h

(define-function gtk_file_chooser_widget_get_type
  (c-name "gtk_file_chooser_widget_get_type")
  (return-type "GType")
)

(define-function gtk_file_chooser_widget_new
  (c-name "gtk_file_chooser_widget_new")
  (is-constructor-of "GtkFileChooserWidget")
  (return-type "GtkWidget*")
  (parameters
    '("GtkFileChooserAction" "action")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkfilefilter.h

(define-function gtk_file_filter_get_type
  (c-name "gtk_file_filter_get_type")
  (return-type "GType")
)

(define-function gtk_file_filter_new
  (c-name "gtk_file_filter_new")
  (is-constructor-of "GtkFileFilter")
  (return-type "GtkFileFilter*")
)

(define-method set_name
  (of-object "GtkFileFilter")
  (c-name "gtk_file_filter_set_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method get_name
  (of-object "GtkFileFilter")
  (c-name "gtk_file_filter_get_name")
  (return-type "const-gchar*")
)

(define-method add_mime_type
  (of-object "GtkFileFilter")
  (c-name "gtk_file_filter_add_mime_type")
  (return-type "none")
  (parameters
    '("const-gchar*" "mime_type")
  )
)

(define-method add_pattern
  (of-object "GtkFileFilter")
  (c-name "gtk_file_filter_add_pattern")
  (return-type "none")
  (parameters
    '("const-gchar*" "pattern")
  )
)

(define-method add_custom
  (of-object "GtkFileFilter")
  (c-name "gtk_file_filter_add_custom")
  (return-type "none")
  (parameters
    '("GtkFileFilterFlags" "needed")
    '("GtkFileFilterFunc" "func")
    '("gpointer" "data")
    '("GDestroyNotify" "notify")
  )
)

(define-method get_needed
  (of-object "GtkFileFilter")
  (c-name "gtk_file_filter_get_needed")
  (return-type "GtkFileFilterFlags")
)

(define-method filter
  (of-object "GtkFileFilter")
  (c-name "gtk_file_filter_filter")
  (return-type "gboolean")
  (parameters
    '("const-GtkFileFilterInfo*" "filter_info")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkfilesel.h

(define-function gtk_file_selection_get_type
  (c-name "gtk_file_selection_get_type")
  (return-type "GType")
)

(define-function gtk_file_selection_new
  (c-name "gtk_file_selection_new")
  (is-constructor-of "GtkFileSelection")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "title")
  )
)

(define-method set_filename
  (of-object "GtkFileSelection")
  (c-name "gtk_file_selection_set_filename")
  (return-type "none")
  (parameters
    '("const-gchar*" "filename")
  )
)

(define-method get_filename
  (of-object "GtkFileSelection")
  (c-name "gtk_file_selection_get_filename")
  (return-type "const-gchar*")
)

(define-method complete
  (of-object "GtkFileSelection")
  (c-name "gtk_file_selection_complete")
  (return-type "none")
  (parameters
    '("const-gchar*" "pattern")
  )
)

(define-method show_fileop_buttons
  (of-object "GtkFileSelection")
  (c-name "gtk_file_selection_show_fileop_buttons")
  (return-type "none")
)

(define-method hide_fileop_buttons
  (of-object "GtkFileSelection")
  (c-name "gtk_file_selection_hide_fileop_buttons")
  (return-type "none")
)

(define-method get_selections
  (of-object "GtkFileSelection")
  (c-name "gtk_file_selection_get_selections")
  (return-type "gchar**")
)

(define-method set_select_multiple
  (of-object "GtkFileSelection")
  (c-name "gtk_file_selection_set_select_multiple")
  (return-type "none")
  (parameters
    '("gboolean" "select_multiple")
  )
)

(define-method get_select_multiple
  (of-object "GtkFileSelection")
  (c-name "gtk_file_selection_get_select_multiple")
  (return-type "gboolean")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkfilesystem.h

(define-function gtk_file_info_get_type
  (c-name "gtk_file_info_get_type")
  (return-type "GType")
)

(define-function gtk_file_info_new
  (c-name "gtk_file_info_new")
  (is-constructor-of "GtkFileInfo")
  (return-type "GtkFileInfo*")
)

(define-method copy
  (of-object "GtkFileInfo")
  (c-name "gtk_file_info_copy")
  (return-type "GtkFileInfo*")
)

(define-method free
  (of-object "GtkFileInfo")
  (c-name "gtk_file_info_free")
  (return-type "none")
)

(define-method get_display_name
  (of-object "GtkFileInfo")
  (c-name "gtk_file_info_get_display_name")
  (return-type "const-gchar*")
)

(define-method get_display_key
  (of-object "GtkFileInfo")
  (c-name "gtk_file_info_get_display_key")
  (return-type "const-gchar*")
)

(define-method set_display_name
  (of-object "GtkFileInfo")
  (c-name "gtk_file_info_set_display_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "display_name")
  )
)

(define-method get_is_folder
  (of-object "GtkFileInfo")
  (c-name "gtk_file_info_get_is_folder")
  (return-type "gboolean")
)

(define-method set_is_folder
  (of-object "GtkFileInfo")
  (c-name "gtk_file_info_set_is_folder")
  (return-type "none")
  (parameters
    '("gboolean" "is_folder")
  )
)

(define-method get_is_hidden
  (of-object "GtkFileInfo")
  (c-name "gtk_file_info_get_is_hidden")
  (return-type "gboolean")
)

(define-method set_is_hidden
  (of-object "GtkFileInfo")
  (c-name "gtk_file_info_set_is_hidden")
  (return-type "none")
  (parameters
    '("gboolean" "is_hidden")
  )
)

(define-method get_mime_type
  (of-object "GtkFileInfo")
  (c-name "gtk_file_info_get_mime_type")
  (return-type "const-gchar*")
)

(define-method set_mime_type
  (of-object "GtkFileInfo")
  (c-name "gtk_file_info_set_mime_type")
  (return-type "none")
  (parameters
    '("const-gchar*" "mime_type")
  )
)

(define-method get_modification_time
  (of-object "GtkFileInfo")
  (c-name "gtk_file_info_get_modification_time")
  (return-type "GtkFileTime")
)

(define-method set_modification_time
  (of-object "GtkFileInfo")
  (c-name "gtk_file_info_set_modification_time")
  (return-type "none")
  (parameters
    '("GtkFileTime" "modification_time")
  )
)

(define-method get_size
  (of-object "GtkFileInfo")
  (c-name "gtk_file_info_get_size")
  (return-type "gint64")
)

(define-method set_size
  (of-object "GtkFileInfo")
  (c-name "gtk_file_info_set_size")
  (return-type "none")
  (parameters
    '("gint64" "size")
  )
)

(define-method set_icon_type
  (of-object "GtkFileInfo")
  (c-name "gtk_file_info_set_icon_type")
  (return-type "none")
  (parameters
    '("GtkFileIconType" "icon_type")
  )
)

(define-method get_icon_type
  (of-object "GtkFileInfo")
  (c-name "gtk_file_info_get_icon_type")
  (return-type "GtkFileIconType")
)

(define-method render_icon
  (of-object "GtkFileInfo")
  (c-name "gtk_file_info_render_icon")
  (return-type "GdkPixbuf*")
  (parameters
    '("GtkWidget*" "widget")
    '("gint" "pixel_size")
  )
)

(define-function gtk_file_system_get_type
  (c-name "gtk_file_system_get_type")
  (return-type "GType")
)

(define-method list_roots
  (of-object "GtkFileSystem")
  (c-name "gtk_file_system_list_roots")
  (return-type "GSList*")
)

(define-method get_root_info
  (of-object "GtkFileSystem")
  (c-name "gtk_file_system_get_root_info")
  (return-type "GtkFileInfo*")
  (parameters
    '("const-GtkFilePath*" "path")
    '("GtkFileInfoType" "types")
    '("GError**" "error")
  )
)

(define-method get_parent
  (of-object "GtkFileSystem")
  (c-name "gtk_file_system_get_parent")
  (return-type "gboolean")
  (parameters
    '("const-GtkFilePath*" "path")
    '("GtkFilePath**" "parent")
    '("GError**" "error")
  )
)

(define-method get_folder
  (of-object "GtkFileSystem")
  (c-name "gtk_file_system_get_folder")
  (return-type "GtkFileFolder*")
  (parameters
    '("const-GtkFilePath*" "path")
    '("GtkFileInfoType" "types")
    '("GError**" "error")
  )
)

(define-method create_folder
  (of-object "GtkFileSystem")
  (c-name "gtk_file_system_create_folder")
  (return-type "gboolean")
  (parameters
    '("const-GtkFilePath*" "path")
    '("GError**" "error")
  )
)

(define-method make_path
  (of-object "GtkFileSystem")
  (c-name "gtk_file_system_make_path")
  (return-type "GtkFilePath*")
  (parameters
    '("const-GtkFilePath*" "base_path")
    '("const-gchar*" "display_name")
    '("GError**" "error")
  )
)

(define-method parse
  (of-object "GtkFileSystem")
  (c-name "gtk_file_system_parse")
  (return-type "gboolean")
  (parameters
    '("const-GtkFilePath*" "base_path")
    '("const-gchar*" "str")
    '("GtkFilePath**" "folder")
    '("gchar**" "file_part")
    '("GError**" "error")
  )
)

(define-method path_to_uri
  (of-object "GtkFileSystem")
  (c-name "gtk_file_system_path_to_uri")
  (return-type "gchar*")
  (parameters
    '("const-GtkFilePath*" "path")
  )
)

(define-method path_to_filename
  (of-object "GtkFileSystem")
  (c-name "gtk_file_system_path_to_filename")
  (return-type "gchar*")
  (parameters
    '("const-GtkFilePath*" "path")
  )
)

(define-method uri_to_path
  (of-object "GtkFileSystem")
  (c-name "gtk_file_system_uri_to_path")
  (return-type "GtkFilePath*")
  (parameters
    '("const-gchar*" "uri")
  )
)

(define-method filename_to_path
  (of-object "GtkFileSystem")
  (c-name "gtk_file_system_filename_to_path")
  (return-type "GtkFilePath*")
  (parameters
    '("const-gchar*" "filename")
  )
)

(define-method add_bookmark
  (of-object "GtkFileSystem")
  (c-name "gtk_file_system_add_bookmark")
  (return-type "gboolean")
  (parameters
    '("const-GtkFilePath*" "path")
    '("GError**" "error")
  )
)

(define-method remove_bookmark
  (of-object "GtkFileSystem")
  (c-name "gtk_file_system_remove_bookmark")
  (return-type "gboolean")
  (parameters
    '("const-GtkFilePath*" "path")
    '("GError**" "error")
  )
)

(define-method list_bookmarks
  (of-object "GtkFileSystem")
  (c-name "gtk_file_system_list_bookmarks")
  (return-type "GSList*")
)

(define-function gtk_file_folder_get_type
  (c-name "gtk_file_folder_get_type")
  (return-type "GType")
)

(define-method list_children
  (of-object "GtkFileFolder")
  (c-name "gtk_file_folder_list_children")
  (return-type "gboolean")
  (parameters
    '("GSList**" "children")
    '("GError**" "error")
  )
)

(define-method get_info
  (of-object "GtkFileFolder")
  (c-name "gtk_file_folder_get_info")
  (return-type "GtkFileInfo*")
  (parameters
    '("const-GtkFilePath*" "path")
    '("GError**" "error")
  )
)

(define-function gtk_file_paths_sort
  (c-name "gtk_file_paths_sort")
  (return-type "GSList*")
  (parameters
    '("GSList*" "paths")
  )
)

(define-function gtk_file_paths_copy
  (c-name "gtk_file_paths_copy")
  (return-type "GSList*")
  (parameters
    '("GSList*" "paths")
  )
)

(define-function gtk_file_paths_free
  (c-name "gtk_file_paths_free")
  (return-type "none")
  (parameters
    '("GSList*" "paths")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkfilesystemmodel.h

(define-method _model_new
  (of-object "GtkFileSystem")
  (c-name "_gtk_file_system_model_new")
  (return-type "GtkFileSystemModel*")
  (parameters
    '("const-GtkFilePath*" "root_path")
    '("gint" "max_depth")
    '("GtkFileInfoType" "types")
  )
)

(define-method _get_info
  (of-object "GtkFileSystemModel")
  (c-name "_gtk_file_system_model_get_info")
  (return-type "const-GtkFileInfo*")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method _get_path
  (of-object "GtkFileSystemModel")
  (c-name "_gtk_file_system_model_get_path")
  (return-type "const-GtkFilePath*")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method _set_show_hidden
  (of-object "GtkFileSystemModel")
  (c-name "_gtk_file_system_model_set_show_hidden")
  (return-type "none")
  (parameters
    '("gboolean" "show_hidden")
  )
)

(define-method _set_show_folders
  (of-object "GtkFileSystemModel")
  (c-name "_gtk_file_system_model_set_show_folders")
  (return-type "none")
  (parameters
    '("gboolean" "show_folders")
  )
)

(define-method _set_show_files
  (of-object "GtkFileSystemModel")
  (c-name "_gtk_file_system_model_set_show_files")
  (return-type "none")
  (parameters
    '("gboolean" "show_files")
  )
)

(define-method _set_filter
  (of-object "GtkFileSystemModel")
  (c-name "_gtk_file_system_model_set_filter")
  (return-type "none")
  (parameters
    '("GtkFileSystemModelFilter" "filter")
    '("gpointer" "user_data")
  )
)

(define-method _path_do
  (of-object "GtkFileSystemModel")
  (c-name "_gtk_file_system_model_path_do")
  (return-type "gboolean")
  (parameters
    '("const-GtkFilePath*" "path")
    '("GtkFileSystemModelPathFunc" "func")
    '("gpointer" "user_data")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkfilesystemunix.h

(define-function gtk_file_system_unix_get_type
  (c-name "gtk_file_system_unix_get_type")
  (return-type "GType")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkfixed.h

(define-function gtk_fixed_get_type
  (c-name "gtk_fixed_get_type")
  (return-type "GType")
)

(define-function gtk_fixed_new
  (c-name "gtk_fixed_new")
  (is-constructor-of "GtkFixed")
  (return-type "GtkWidget*")
)

(define-method put
  (of-object "GtkFixed")
  (c-name "gtk_fixed_put")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("gint" "x")
    '("gint" "y")
  )
)

(define-method move
  (of-object "GtkFixed")
  (c-name "gtk_fixed_move")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("gint" "x")
    '("gint" "y")
  )
)

(define-method set_has_window
  (of-object "GtkFixed")
  (c-name "gtk_fixed_set_has_window")
  (return-type "none")
  (parameters
    '("gboolean" "has_window")
  )
)

(define-method get_has_window
  (of-object "GtkFixed")
  (c-name "gtk_fixed_get_has_window")
  (return-type "gboolean")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkfontbutton.h

(define-function gtk_font_button_get_type
  (c-name "gtk_font_button_get_type")
  (return-type "GType")
)

(define-function gtk_font_button_new
  (c-name "gtk_font_button_new")
  (is-constructor-of "GtkFontButton")
  (return-type "GtkWidget*")
)

(define-function gtk_font_button_new_with_font
  (c-name "gtk_font_button_new_with_font")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "fontname")
  )
)

(define-method get_title
  (of-object "GtkFontButton")
  (c-name "gtk_font_button_get_title")
  (return-type "const-gchar*")
)

(define-method set_title
  (of-object "GtkFontButton")
  (c-name "gtk_font_button_set_title")
  (return-type "none")
  (parameters
    '("const-gchar*" "title")
  )
)

(define-method get_use_font
  (of-object "GtkFontButton")
  (c-name "gtk_font_button_get_use_font")
  (return-type "gboolean")
)

(define-method set_use_font
  (of-object "GtkFontButton")
  (c-name "gtk_font_button_set_use_font")
  (return-type "none")
  (parameters
    '("gboolean" "use_font")
  )
)

(define-method get_use_size
  (of-object "GtkFontButton")
  (c-name "gtk_font_button_get_use_size")
  (return-type "gboolean")
)

(define-method set_use_size
  (of-object "GtkFontButton")
  (c-name "gtk_font_button_set_use_size")
  (return-type "none")
  (parameters
    '("gboolean" "use_size")
  )
)

(define-method get_font_name
  (of-object "GtkFontButton")
  (c-name "gtk_font_button_get_font_name")
  (return-type "const-gchar*")
)

(define-method set_font_name
  (of-object "GtkFontButton")
  (c-name "gtk_font_button_set_font_name")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "fontname")
  )
)

(define-method get_show_style
  (of-object "GtkFontButton")
  (c-name "gtk_font_button_get_show_style")
  (return-type "gboolean")
)

(define-method set_show_style
  (of-object "GtkFontButton")
  (c-name "gtk_font_button_set_show_style")
  (return-type "none")
  (parameters
    '("gboolean" "show_style")
  )
)

(define-method get_show_size
  (of-object "GtkFontButton")
  (c-name "gtk_font_button_get_show_size")
  (return-type "gboolean")
)

(define-method set_show_size
  (of-object "GtkFontButton")
  (c-name "gtk_font_button_set_show_size")
  (return-type "none")
  (parameters
    '("gboolean" "show_size")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkfontsel.h

(define-function gtk_font_selection_get_type
  (c-name "gtk_font_selection_get_type")
  (return-type "GType")
)

(define-function gtk_font_selection_new
  (c-name "gtk_font_selection_new")
  (is-constructor-of "GtkFontSelection")
  (return-type "GtkWidget*")
)

(define-method get_font_name
  (of-object "GtkFontSelection")
  (c-name "gtk_font_selection_get_font_name")
  (return-type "gchar*")
)

(define-method get_font
  (of-object "GtkFontSelection")
  (c-name "gtk_font_selection_get_font")
  (return-type "GdkFont*")
)

(define-method set_font_name
  (of-object "GtkFontSelection")
  (c-name "gtk_font_selection_set_font_name")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "fontname")
  )
)

(define-method get_preview_text
  (of-object "GtkFontSelection")
  (c-name "gtk_font_selection_get_preview_text")
  (return-type "const-gchar*")
)

(define-method set_preview_text
  (of-object "GtkFontSelection")
  (c-name "gtk_font_selection_set_preview_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "text")
  )
)

(define-function gtk_font_selection_dialog_get_type
  (c-name "gtk_font_selection_dialog_get_type")
  (return-type "GType")
)

(define-function gtk_font_selection_dialog_new
  (c-name "gtk_font_selection_dialog_new")
  (is-constructor-of "GtkFontSelectionDialog")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "title")
  )
)

(define-method get_font_name
  (of-object "GtkFontSelectionDialog")
  (c-name "gtk_font_selection_dialog_get_font_name")
  (return-type "gchar*")
)

(define-method get_font
  (of-object "GtkFontSelectionDialog")
  (c-name "gtk_font_selection_dialog_get_font")
  (return-type "GdkFont*")
)

(define-method set_font_name
  (of-object "GtkFontSelectionDialog")
  (c-name "gtk_font_selection_dialog_set_font_name")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "fontname")
  )
)

(define-method get_preview_text
  (of-object "GtkFontSelectionDialog")
  (c-name "gtk_font_selection_dialog_get_preview_text")
  (return-type "const-gchar*")
)

(define-method set_preview_text
  (of-object "GtkFontSelectionDialog")
  (c-name "gtk_font_selection_dialog_set_preview_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "text")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkframe.h

(define-function gtk_frame_get_type
  (c-name "gtk_frame_get_type")
  (return-type "GType")
)

(define-function gtk_frame_new
  (c-name "gtk_frame_new")
  (is-constructor-of "GtkFrame")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "label")
  )
)

(define-method set_label
  (of-object "GtkFrame")
  (c-name "gtk_frame_set_label")
  (return-type "none")
  (parameters
    '("const-gchar*" "label")
  )
)

(define-method get_label
  (of-object "GtkFrame")
  (c-name "gtk_frame_get_label")
  (return-type "const-gchar*")
)

(define-method set_label_widget
  (of-object "GtkFrame")
  (c-name "gtk_frame_set_label_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "label_widget")
  )
)

(define-method get_label_widget
  (of-object "GtkFrame")
  (c-name "gtk_frame_get_label_widget")
  (return-type "GtkWidget*")
)

(define-method set_label_align
  (of-object "GtkFrame")
  (c-name "gtk_frame_set_label_align")
  (return-type "none")
  (parameters
    '("gfloat" "xalign")
    '("gfloat" "yalign")
  )
)

(define-method get_label_align
  (of-object "GtkFrame")
  (c-name "gtk_frame_get_label_align")
  (return-type "none")
  (parameters
    '("gfloat*" "xalign")
    '("gfloat*" "yalign")
  )
)

(define-method set_shadow_type
  (of-object "GtkFrame")
  (c-name "gtk_frame_set_shadow_type")
  (return-type "none")
  (parameters
    '("GtkShadowType" "type")
  )
)

(define-method get_shadow_type
  (of-object "GtkFrame")
  (c-name "gtk_frame_get_shadow_type")
  (return-type "GtkShadowType")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkgamma.h

(define-function gtk_gamma_curve_get_type
  (c-name "gtk_gamma_curve_get_type")
  (return-type "GType")
)

(define-function gtk_gamma_curve_new
  (c-name "gtk_gamma_curve_new")
  (is-constructor-of "GtkGammaCurve")
  (return-type "GtkWidget*")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkgc.h

(define-function gtk_gc_release
  (c-name "gtk_gc_release")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtk.h



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkhandlebox.h

(define-function gtk_handle_box_get_type
  (c-name "gtk_handle_box_get_type")
  (return-type "GType")
)

(define-function gtk_handle_box_new
  (c-name "gtk_handle_box_new")
  (is-constructor-of "GtkHandleBox")
  (return-type "GtkWidget*")
)

(define-method set_shadow_type
  (of-object "GtkHandleBox")
  (c-name "gtk_handle_box_set_shadow_type")
  (return-type "none")
  (parameters
    '("GtkShadowType" "type")
  )
)

(define-method get_shadow_type
  (of-object "GtkHandleBox")
  (c-name "gtk_handle_box_get_shadow_type")
  (return-type "GtkShadowType")
)

(define-method set_handle_position
  (of-object "GtkHandleBox")
  (c-name "gtk_handle_box_set_handle_position")
  (return-type "none")
  (parameters
    '("GtkPositionType" "position")
  )
)

(define-method get_handle_position
  (of-object "GtkHandleBox")
  (c-name "gtk_handle_box_get_handle_position")
  (return-type "GtkPositionType")
)

(define-method set_snap_edge
  (of-object "GtkHandleBox")
  (c-name "gtk_handle_box_set_snap_edge")
  (return-type "none")
  (parameters
    '("GtkPositionType" "edge")
  )
)

(define-method get_snap_edge
  (of-object "GtkHandleBox")
  (c-name "gtk_handle_box_get_snap_edge")
  (return-type "GtkPositionType")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkhbbox.h

(define-function gtk_hbutton_box_get_type
  (c-name "gtk_hbutton_box_get_type")
  (return-type "GType")
)

(define-function gtk_hbutton_box_new
  (c-name "gtk_hbutton_box_new")
  (is-constructor-of "GtkHbuttonBox")
  (return-type "GtkWidget*")
)

(define-function gtk_hbutton_box_get_spacing_default
  (c-name "gtk_hbutton_box_get_spacing_default")
  (return-type "gint")
)

(define-function gtk_hbutton_box_get_layout_default
  (c-name "gtk_hbutton_box_get_layout_default")
  (return-type "GtkButtonBoxStyle")
)

(define-function gtk_hbutton_box_set_spacing_default
  (c-name "gtk_hbutton_box_set_spacing_default")
  (return-type "none")
  (parameters
    '("gint" "spacing")
  )
)

(define-function gtk_hbutton_box_set_layout_default
  (c-name "gtk_hbutton_box_set_layout_default")
  (return-type "none")
  (parameters
    '("GtkButtonBoxStyle" "layout")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkhbox.h

(define-function gtk_hbox_get_type
  (c-name "gtk_hbox_get_type")
  (return-type "GType")
)

(define-function gtk_hbox_new
  (c-name "gtk_hbox_new")
  (is-constructor-of "GtkHbox")
  (return-type "GtkWidget*")
  (parameters
    '("gboolean" "homogeneous")
    '("gint" "spacing")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkhpaned.h

(define-function gtk_hpaned_get_type
  (c-name "gtk_hpaned_get_type")
  (return-type "GType")
)

(define-function gtk_hpaned_new
  (c-name "gtk_hpaned_new")
  (is-constructor-of "GtkHpaned")
  (return-type "GtkWidget*")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkhruler.h

(define-function gtk_hruler_get_type
  (c-name "gtk_hruler_get_type")
  (return-type "GType")
)

(define-function gtk_hruler_new
  (c-name "gtk_hruler_new")
  (is-constructor-of "GtkHruler")
  (return-type "GtkWidget*")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkhscale.h

(define-function gtk_hscale_get_type
  (c-name "gtk_hscale_get_type")
  (return-type "GType")
)

(define-function gtk_hscale_new
  (c-name "gtk_hscale_new")
  (is-constructor-of "GtkHscale")
  (return-type "GtkWidget*")
  (parameters
    '("GtkAdjustment*" "adjustment")
  )
)

(define-function gtk_hscale_new_with_range
  (c-name "gtk_hscale_new_with_range")
  (return-type "GtkWidget*")
  (parameters
    '("gdouble" "min")
    '("gdouble" "max")
    '("gdouble" "step")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkhscrollbar.h

(define-function gtk_hscrollbar_get_type
  (c-name "gtk_hscrollbar_get_type")
  (return-type "GType")
)

(define-function gtk_hscrollbar_new
  (c-name "gtk_hscrollbar_new")
  (is-constructor-of "GtkHscrollbar")
  (return-type "GtkWidget*")
  (parameters
    '("GtkAdjustment*" "adjustment")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkhseparator.h

(define-function gtk_hseparator_get_type
  (c-name "gtk_hseparator_get_type")
  (return-type "GType")
)

(define-function gtk_hseparator_new
  (c-name "gtk_hseparator_new")
  (is-constructor-of "GtkHseparator")
  (return-type "GtkWidget*")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkhsv.h

(define-function gtk_hsv_get_type
  (c-name "gtk_hsv_get_type")
  (return-type "GType")
)

(define-function gtk_hsv_new
  (c-name "gtk_hsv_new")
  (is-constructor-of "GtkHsv")
  (return-type "GtkWidget*")
)

(define-method set_color
  (of-object "GtkHSV")
  (c-name "gtk_hsv_set_color")
  (return-type "none")
  (parameters
    '("double" "h")
    '("double" "s")
    '("double" "v")
  )
)

(define-method get_color
  (of-object "GtkHSV")
  (c-name "gtk_hsv_get_color")
  (return-type "none")
  (parameters
    '("gdouble*" "h")
    '("gdouble*" "s")
    '("gdouble*" "v")
  )
)

(define-method set_metrics
  (of-object "GtkHSV")
  (c-name "gtk_hsv_set_metrics")
  (return-type "none")
  (parameters
    '("gint" "size")
    '("gint" "ring_width")
  )
)

(define-method get_metrics
  (of-object "GtkHSV")
  (c-name "gtk_hsv_get_metrics")
  (return-type "none")
  (parameters
    '("gint*" "size")
    '("gint*" "ring_width")
  )
)

(define-method is_adjusting
  (of-object "GtkHSV")
  (c-name "gtk_hsv_is_adjusting")
  (return-type "gboolean")
)

(define-function gtk_hsv_to_rgb
  (c-name "gtk_hsv_to_rgb")
  (return-type "none")
  (parameters
    '("gdouble" "h")
    '("gdouble" "s")
    '("gdouble" "v")
    '("gdouble*" "r")
    '("gdouble*" "g")
    '("gdouble*" "b")
  )
)

(define-function gtk_rgb_to_hsv
  (c-name "gtk_rgb_to_hsv")
  (return-type "none")
  (parameters
    '("gdouble" "r")
    '("gdouble" "g")
    '("gdouble" "b")
    '("gdouble*" "h")
    '("gdouble*" "s")
    '("gdouble*" "v")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkiconfactory.h

(define-function gtk_icon_factory_get_type
  (c-name "gtk_icon_factory_get_type")
  (return-type "GType")
)

(define-function gtk_icon_factory_new
  (c-name "gtk_icon_factory_new")
  (is-constructor-of "GtkIconFactory")
  (return-type "GtkIconFactory*")
)

(define-method add
  (of-object "GtkIconFactory")
  (c-name "gtk_icon_factory_add")
  (return-type "none")
  (parameters
    '("const-gchar*" "stock_id")
    '("GtkIconSet*" "icon_set")
  )
)

(define-method lookup
  (of-object "GtkIconFactory")
  (c-name "gtk_icon_factory_lookup")
  (return-type "GtkIconSet*")
  (parameters
    '("const-gchar*" "stock_id")
  )
)

(define-method add_default
  (of-object "GtkIconFactory")
  (c-name "gtk_icon_factory_add_default")
  (return-type "none")
)

(define-method remove_default
  (of-object "GtkIconFactory")
  (c-name "gtk_icon_factory_remove_default")
  (return-type "none")
)

(define-function gtk_icon_factory_lookup_default
  (c-name "gtk_icon_factory_lookup_default")
  (return-type "GtkIconSet*")
  (parameters
    '("const-gchar*" "stock_id")
  )
)

(define-method lookup
  (of-object "GtkIconSize")
  (c-name "gtk_icon_size_lookup")
  (return-type "gboolean")
  (parameters
    '("gint*" "width")
    '("gint*" "height")
  )
)

(define-function gtk_icon_size_lookup_for_settings
  (c-name "gtk_icon_size_lookup_for_settings")
  (return-type "gboolean")
  (parameters
    '("GtkSettings*" "settings")
    '("GtkIconSize" "size")
    '("gint*" "width")
    '("gint*" "height")
  )
)

(define-function gtk_icon_size_register
  (c-name "gtk_icon_size_register")
  (return-type "GtkIconSize")
  (parameters
    '("const-gchar*" "name")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-function gtk_icon_size_register_alias
  (c-name "gtk_icon_size_register_alias")
  (return-type "none")
  (parameters
    '("const-gchar*" "alias")
    '("GtkIconSize" "target")
  )
)

(define-function gtk_icon_size_from_name
  (c-name "gtk_icon_size_from_name")
  (return-type "GtkIconSize")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method get_name
  (of-object "GtkIconSize")
  (c-name "gtk_icon_size_get_name")
  (return-type "const-gchar*")
)

(define-function gtk_icon_set_get_type
  (c-name "gtk_icon_set_get_type")
  (return-type "GType")
)

(define-function gtk_icon_set_new
  (c-name "gtk_icon_set_new")
  (is-constructor-of "GtkIconSet")
  (return-type "GtkIconSet*")
)

(define-function gtk_icon_set_new_from_pixbuf
  (c-name "gtk_icon_set_new_from_pixbuf")
  (return-type "GtkIconSet*")
  (parameters
    '("GdkPixbuf*" "pixbuf")
  )
)

(define-method ref
  (of-object "GtkIconSet")
  (c-name "gtk_icon_set_ref")
  (return-type "GtkIconSet*")
)

(define-method unref
  (of-object "GtkIconSet")
  (c-name "gtk_icon_set_unref")
  (return-type "none")
)

(define-method copy
  (of-object "GtkIconSet")
  (c-name "gtk_icon_set_copy")
  (return-type "GtkIconSet*")
)

(define-method render_icon
  (of-object "GtkIconSet")
  (c-name "gtk_icon_set_render_icon")
  (return-type "GdkPixbuf*")
  (parameters
    '("GtkStyle*" "style")
    '("GtkTextDirection" "direction")
    '("GtkStateType" "state")
    '("GtkIconSize" "size")
    '("GtkWidget*" "widget")
    '("const-char*" "detail")
  )
)

(define-method add_source
  (of-object "GtkIconSet")
  (c-name "gtk_icon_set_add_source")
  (return-type "none")
  (parameters
    '("const-GtkIconSource*" "source")
  )
)

(define-method get_sizes
  (of-object "GtkIconSet")
  (c-name "gtk_icon_set_get_sizes")
  (return-type "none")
  (parameters
    '("GtkIconSize**" "sizes")
    '("gint*" "n_sizes")
  )
)

(define-function gtk_icon_source_get_type
  (c-name "gtk_icon_source_get_type")
  (return-type "GType")
)

(define-function gtk_icon_source_new
  (c-name "gtk_icon_source_new")
  (is-constructor-of "GtkIconSource")
  (return-type "GtkIconSource*")
)

(define-method copy
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_copy")
  (return-type "GtkIconSource*")
)

(define-method free
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_free")
  (return-type "none")
)

(define-method set_filename
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_set_filename")
  (return-type "none")
  (parameters
    '("const-gchar*" "filename")
  )
)

(define-method set_icon_name
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_set_icon_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "icon_name")
  )
)

(define-method set_pixbuf
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_set_pixbuf")
  (return-type "none")
  (parameters
    '("GdkPixbuf*" "pixbuf")
  )
)

(define-method set_icon_name
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_set_icon_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "icon_name")
  )
)

(define-method get_filename
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_get_filename")
  (return-type "const-gchar*")
)

(define-method get_icon_name
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_get_icon_name")
  (return-type "const-gchar*")
)

(define-method get_pixbuf
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_get_pixbuf")
  (return-type "GdkPixbuf*")
)

(define-method set_direction_wildcarded
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_set_direction_wildcarded")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method set_state_wildcarded
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_set_state_wildcarded")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method set_size_wildcarded
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_set_size_wildcarded")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_size_wildcarded
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_get_size_wildcarded")
  (return-type "gboolean")
)

(define-method get_state_wildcarded
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_get_state_wildcarded")
  (return-type "gboolean")
)

(define-method get_direction_wildcarded
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_get_direction_wildcarded")
  (return-type "gboolean")
)

(define-method set_direction
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_set_direction")
  (return-type "none")
  (parameters
    '("GtkTextDirection" "direction")
  )
)

(define-method set_state
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_set_state")
  (return-type "none")
  (parameters
    '("GtkStateType" "state")
  )
)

(define-method set_size
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_set_size")
  (return-type "none")
  (parameters
    '("GtkIconSize" "size")
  )
)

(define-method get_direction
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_get_direction")
  (return-type "GtkTextDirection")
)

(define-method get_state
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_get_state")
  (return-type "GtkStateType")
)

(define-method get_size
  (of-object "GtkIconSource")
  (c-name "gtk_icon_source_get_size")
  (return-type "GtkIconSize")
)

(define-function _gtk_icon_set_invalidate_caches
  (c-name "_gtk_icon_set_invalidate_caches")
  (return-type "none")
)

(define-function _gtk_icon_factory_list_ids
  (c-name "_gtk_icon_factory_list_ids")
  (return-type "GSList*")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkicontheme.h

(define-function gtk_icon_theme_error_quark
  (c-name "gtk_icon_theme_error_quark")
  (return-type "GQuark")
)

(define-function gtk_icon_theme_get_type
  (c-name "gtk_icon_theme_get_type")
  (return-type "GType")
)

(define-function gtk_icon_theme_new
  (c-name "gtk_icon_theme_new")
  (is-constructor-of "GtkIconTheme")
  (return-type "GtkIconTheme*")
)

(define-function gtk_icon_theme_get_default
  (c-name "gtk_icon_theme_get_default")
  (return-type "GtkIconTheme*")
)

(define-function gtk_icon_theme_get_for_screen
  (c-name "gtk_icon_theme_get_for_screen")
  (return-type "GtkIconTheme*")
  (parameters
    '("GdkScreen*" "screen")
  )
)

(define-method set_screen
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_set_screen")
  (return-type "none")
  (parameters
    '("GdkScreen*" "screen")
  )
)

(define-method set_search_path
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_set_search_path")
  (return-type "none")
  (parameters
    '("const-gchar*[]" "path")
    '("gint" "n_elements")
  )
)

(define-method get_search_path
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_get_search_path")
  (return-type "none")
  (parameters
    '("gchar**[]" "path")
    '("gint*" "n_elements")
  )
)

(define-method append_search_path
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_append_search_path")
  (return-type "none")
  (parameters
    '("const-gchar*" "path")
  )
)

(define-method prepend_search_path
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_prepend_search_path")
  (return-type "none")
  (parameters
    '("const-gchar*" "path")
  )
)

(define-method set_custom_theme
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_set_custom_theme")
  (return-type "none")
  (parameters
    '("const-gchar*" "theme_name")
  )
)

(define-method has_icon
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_has_icon")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "icon_name")
  )
)

(define-method lookup_icon
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_lookup_icon")
  (return-type "GtkIconInfo*")
  (parameters
    '("const-gchar*" "icon_name")
    '("gint" "size")
    '("GtkIconLookupFlags" "flags")
  )
)

(define-method load_icon
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_load_icon")
  (return-type "GdkPixbuf*")
  (parameters
    '("const-gchar*" "icon_name")
    '("gint" "size")
    '("GtkIconLookupFlags" "flags")
    '("GError**" "error")
  )
)

(define-method list_icons
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_list_icons")
  (return-type "GList*")
  (parameters
    '("const-gchar*" "context")
  )
)

(define-method get_example_icon_name
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_get_example_icon_name")
  (return-type "char*")
)

(define-method rescan_if_needed
  (of-object "GtkIconTheme")
  (c-name "gtk_icon_theme_rescan_if_needed")
  (return-type "gboolean")
)

(define-function gtk_icon_theme_add_builtin_icon
  (c-name "gtk_icon_theme_add_builtin_icon")
  (return-type "none")
  (parameters
    '("const-gchar*" "icon_name")
    '("gint" "size")
    '("GdkPixbuf*" "pixbuf")
  )
)

(define-function gtk_icon_info_get_type
  (c-name "gtk_icon_info_get_type")
  (return-type "GType")
)

(define-method copy
  (of-object "GtkIconInfo")
  (c-name "gtk_icon_info_copy")
  (return-type "GtkIconInfo*")
)

(define-method free
  (of-object "GtkIconInfo")
  (c-name "gtk_icon_info_free")
  (return-type "none")
)

(define-method get_base_size
  (of-object "GtkIconInfo")
  (c-name "gtk_icon_info_get_base_size")
  (return-type "gint")
)

(define-method get_filename
  (of-object "GtkIconInfo")
  (c-name "gtk_icon_info_get_filename")
  (return-type "const-gchar*")
)

(define-method get_builtin_pixbuf
  (of-object "GtkIconInfo")
  (c-name "gtk_icon_info_get_builtin_pixbuf")
  (return-type "GdkPixbuf*")
)

(define-method load_icon
  (of-object "GtkIconInfo")
  (c-name "gtk_icon_info_load_icon")
  (return-type "GdkPixbuf*")
  (parameters
    '("GError**" "error")
  )
)

(define-method set_raw_coordinates
  (of-object "GtkIconInfo")
  (c-name "gtk_icon_info_set_raw_coordinates")
  (return-type "none")
  (parameters
    '("gboolean" "raw_coordinates")
  )
)

(define-method get_embedded_rect
  (of-object "GtkIconInfo")
  (c-name "gtk_icon_info_get_embedded_rect")
  (return-type "gboolean")
  (parameters
    '("GdkRectangle*" "rectangle")
  )
)

(define-method get_attach_points
  (of-object "GtkIconInfo")
  (c-name "gtk_icon_info_get_attach_points")
  (return-type "gboolean")
  (parameters
    '("GdkPoint**" "points")
    '("gint*" "n_points")
  )
)

(define-method get_display_name
  (of-object "GtkIconInfo")
  (c-name "gtk_icon_info_get_display_name")
  (return-type "const-gchar*")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkiconthemeparser.h

(define-function _gtk_icon_theme_file_new_from_string
  (c-name "_gtk_icon_theme_file_new_from_string")
  (return-type "GtkIconThemeFile*")
  (parameters
    '("char*" "data")
    '("GError**" "error")
  )
)

(define-method _to_string
  (of-object "GtkIconThemeFile")
  (c-name "_gtk_icon_theme_file_to_string")
  (return-type "char*")
)

(define-method _free
  (of-object "GtkIconThemeFile")
  (c-name "_gtk_icon_theme_file_free")
  (return-type "none")
)

(define-method _foreach_section
  (of-object "GtkIconThemeFile")
  (c-name "_gtk_icon_theme_file_foreach_section")
  (return-type "none")
  (parameters
    '("GtkIconThemeFileSectionFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-method _foreach_key
  (of-object "GtkIconThemeFile")
  (c-name "_gtk_icon_theme_file_foreach_key")
  (return-type "none")
  (parameters
    '("const-char*" "section")
    '("gboolean" "include_localized")
    '("GtkIconThemeFileLineFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-method _get_raw
  (of-object "GtkIconThemeFile")
  (c-name "_gtk_icon_theme_file_get_raw")
  (return-type "gboolean")
  (parameters
    '("const-char*" "section")
    '("const-char*" "keyname")
    '("const-char*" "locale")
    '("char**" "val")
  )
)

(define-method _get_integer
  (of-object "GtkIconThemeFile")
  (c-name "_gtk_icon_theme_file_get_integer")
  (return-type "gboolean")
  (parameters
    '("const-char*" "section")
    '("const-char*" "keyname")
    '("int*" "val")
  )
)

(define-method _get_string
  (of-object "GtkIconThemeFile")
  (c-name "_gtk_icon_theme_file_get_string")
  (return-type "gboolean")
  (parameters
    '("const-char*" "section")
    '("const-char*" "keyname")
    '("char**" "val")
  )
)

(define-method _get_locale_string
  (of-object "GtkIconThemeFile")
  (c-name "_gtk_icon_theme_file_get_locale_string")
  (return-type "gboolean")
  (parameters
    '("const-char*" "section")
    '("const-char*" "keyname")
    '("char**" "val")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkimage.h

(define-function gtk_image_get_type
  (c-name "gtk_image_get_type")
  (return-type "GType")
)

(define-function gtk_image_new
  (c-name "gtk_image_new")
  (is-constructor-of "GtkImage")
  (return-type "GtkWidget*")
)

(define-function gtk_image_new_from_pixmap
  (c-name "gtk_image_new_from_pixmap")
  (return-type "GtkWidget*")
  (parameters
    '("GdkPixmap*" "pixmap")
    '("GdkBitmap*" "mask")
  )
)

(define-function gtk_image_new_from_image
  (c-name "gtk_image_new_from_image")
  (return-type "GtkWidget*")
  (parameters
    '("GdkImage*" "image")
    '("GdkBitmap*" "mask")
  )
)

(define-function gtk_image_new_from_file
  (c-name "gtk_image_new_from_file")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "filename")
  )
)

(define-function gtk_image_new_from_pixbuf
  (c-name "gtk_image_new_from_pixbuf")
  (return-type "GtkWidget*")
  (parameters
    '("GdkPixbuf*" "pixbuf")
  )
)

(define-function gtk_image_new_from_stock
  (c-name "gtk_image_new_from_stock")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "stock_id")
    '("GtkIconSize" "size")
  )
)

(define-function gtk_image_new_from_icon_set
  (c-name "gtk_image_new_from_icon_set")
  (return-type "GtkWidget*")
  (parameters
    '("GtkIconSet*" "icon_set")
    '("GtkIconSize" "size")
  )
)

(define-function gtk_image_new_from_animation
  (c-name "gtk_image_new_from_animation")
  (return-type "GtkWidget*")
  (parameters
    '("GdkPixbufAnimation*" "animation")
  )
)

(define-method set_from_pixmap
  (of-object "GtkImage")
  (c-name "gtk_image_set_from_pixmap")
  (return-type "none")
  (parameters
    '("GdkPixmap*" "pixmap")
    '("GdkBitmap*" "mask")
  )
)

(define-method set_from_image
  (of-object "GtkImage")
  (c-name "gtk_image_set_from_image")
  (return-type "none")
  (parameters
    '("GdkImage*" "gdk_image")
    '("GdkBitmap*" "mask")
  )
)

(define-method set_from_file
  (of-object "GtkImage")
  (c-name "gtk_image_set_from_file")
  (return-type "none")
  (parameters
    '("const-gchar*" "filename")
  )
)

(define-method set_from_pixbuf
  (of-object "GtkImage")
  (c-name "gtk_image_set_from_pixbuf")
  (return-type "none")
  (parameters
    '("GdkPixbuf*" "pixbuf")
  )
)

(define-method set_from_stock
  (of-object "GtkImage")
  (c-name "gtk_image_set_from_stock")
  (return-type "none")
  (parameters
    '("const-gchar*" "stock_id")
    '("GtkIconSize" "size")
  )
)

(define-method set_from_icon_set
  (of-object "GtkImage")
  (c-name "gtk_image_set_from_icon_set")
  (return-type "none")
  (parameters
    '("GtkIconSet*" "icon_set")
    '("GtkIconSize" "size")
  )
)

(define-method set_from_animation
  (of-object "GtkImage")
  (c-name "gtk_image_set_from_animation")
  (return-type "none")
  (parameters
    '("GdkPixbufAnimation*" "animation")
  )
)

(define-method get_storage_type
  (of-object "GtkImage")
  (c-name "gtk_image_get_storage_type")
  (return-type "GtkImageType")
)

(define-method get_pixmap
  (of-object "GtkImage")
  (c-name "gtk_image_get_pixmap")
  (return-type "none")
  (parameters
    '("GdkPixmap**" "pixmap")
    '("GdkBitmap**" "mask")
  )
)

(define-method get_image
  (of-object "GtkImage")
  (c-name "gtk_image_get_image")
  (return-type "none")
  (parameters
    '("GdkImage**" "gdk_image")
    '("GdkBitmap**" "mask")
  )
)

(define-method get_pixbuf
  (of-object "GtkImage")
  (c-name "gtk_image_get_pixbuf")
  (return-type "GdkPixbuf*")
)

(define-method get_stock
  (of-object "GtkImage")
  (c-name "gtk_image_get_stock")
  (return-type "none")
  (parameters
    '("gchar**" "stock_id")
    '("GtkIconSize*" "size")
  )
)

(define-method get_icon_set
  (of-object "GtkImage")
  (c-name "gtk_image_get_icon_set")
  (return-type "none")
  (parameters
    '("GtkIconSet**" "icon_set")
    '("GtkIconSize*" "size")
  )
)

(define-method get_animation
  (of-object "GtkImage")
  (c-name "gtk_image_get_animation")
  (return-type "GdkPixbufAnimation*")
)

(define-method set
  (of-object "GtkImage")
  (c-name "gtk_image_set")
  (return-type "none")
  (parameters
    '("GdkImage*" "val")
    '("GdkBitmap*" "mask")
  )
)

(define-method get
  (of-object "GtkImage")
  (c-name "gtk_image_get")
  (return-type "none")
  (parameters
    '("GdkImage**" "val")
    '("GdkBitmap**" "mask")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkimagemenuitem.h

(define-function gtk_image_menu_item_get_type
  (c-name "gtk_image_menu_item_get_type")
  (return-type "GType")
)

(define-function gtk_image_menu_item_new
  (c-name "gtk_image_menu_item_new")
  (is-constructor-of "GtkImageMenuItem")
  (return-type "GtkWidget*")
)

(define-function gtk_image_menu_item_new_with_label
  (c-name "gtk_image_menu_item_new_with_label")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "label")
  )
)

(define-function gtk_image_menu_item_new_with_mnemonic
  (c-name "gtk_image_menu_item_new_with_mnemonic")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "label")
  )
)

(define-function gtk_image_menu_item_new_from_stock
  (c-name "gtk_image_menu_item_new_from_stock")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "stock_id")
    '("GtkAccelGroup*" "accel_group")
  )
)

(define-method set_image
  (of-object "GtkImageMenuItem")
  (c-name "gtk_image_menu_item_set_image")
  (return-type "none")
  (parameters
    '("GtkWidget*" "image")
  )
)

(define-method get_image
  (of-object "GtkImageMenuItem")
  (c-name "gtk_image_menu_item_get_image")
  (return-type "GtkWidget*")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkimcontext.h

(define-function gtk_im_context_get_type
  (c-name "gtk_im_context_get_type")
  (return-type "GType")
)

(define-method set_client_window
  (of-object "GtkIMContext")
  (c-name "gtk_im_context_set_client_window")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window")
  )
)

(define-method get_preedit_string
  (of-object "GtkIMContext")
  (c-name "gtk_im_context_get_preedit_string")
  (return-type "none")
  (parameters
    '("gchar**" "str")
    '("PangoAttrList**" "attrs")
    '("gint*" "cursor_pos")
  )
)

(define-method filter_keypress
  (of-object "GtkIMContext")
  (c-name "gtk_im_context_filter_keypress")
  (return-type "gboolean")
  (parameters
    '("GdkEventKey*" "event")
  )
)

(define-method focus_in
  (of-object "GtkIMContext")
  (c-name "gtk_im_context_focus_in")
  (return-type "none")
)

(define-method focus_out
  (of-object "GtkIMContext")
  (c-name "gtk_im_context_focus_out")
  (return-type "none")
)

(define-method reset
  (of-object "GtkIMContext")
  (c-name "gtk_im_context_reset")
  (return-type "none")
)

(define-method set_cursor_location
  (of-object "GtkIMContext")
  (c-name "gtk_im_context_set_cursor_location")
  (return-type "none")
  (parameters
    '("GdkRectangle*" "area")
  )
)

(define-method set_use_preedit
  (of-object "GtkIMContext")
  (c-name "gtk_im_context_set_use_preedit")
  (return-type "none")
  (parameters
    '("gboolean" "use_preedit")
  )
)

(define-method set_surrounding
  (of-object "GtkIMContext")
  (c-name "gtk_im_context_set_surrounding")
  (return-type "none")
  (parameters
    '("const-gchar*" "text")
    '("gint" "len")
    '("gint" "cursor_index")
  )
)

(define-method get_surrounding
  (of-object "GtkIMContext")
  (c-name "gtk_im_context_get_surrounding")
  (return-type "gboolean")
  (parameters
    '("gchar**" "text")
    '("gint*" "cursor_index")
  )
)

(define-method delete_surrounding
  (of-object "GtkIMContext")
  (c-name "gtk_im_context_delete_surrounding")
  (return-type "gboolean")
  (parameters
    '("gint" "offset")
    '("gint" "n_chars")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkimcontextsimple.h

(define-function gtk_im_context_simple_get_type
  (c-name "gtk_im_context_simple_get_type")
  (return-type "GType")
)

(define-function gtk_im_context_simple_new
  (c-name "gtk_im_context_simple_new")
  (is-constructor-of "GtkImContextSimple")
  (return-type "GtkIMContext*")
)

(define-method add_table
  (of-object "GtkIMContextSimple")
  (c-name "gtk_im_context_simple_add_table")
  (return-type "none")
  (parameters
    '("guint16*" "data")
    '("gint" "max_seq_len")
    '("gint" "n_seqs")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkimmodule.h

(define-function _gtk_im_module_list
  (c-name "_gtk_im_module_list")
  (return-type "none")
  (parameters
    '("const-GtkIMContextInfo***" "contexts")
    '("guint*" "n_contexts")
  )
)

(define-function _gtk_im_module_create
  (c-name "_gtk_im_module_create")
  (return-type "GtkIMContext*")
  (parameters
    '("const-gchar*" "context_id")
  )
)

(define-function _gtk_im_module_get_default_context_id
  (c-name "_gtk_im_module_get_default_context_id")
  (return-type "const-gchar*")
  (parameters
    '("const-gchar*" "lang")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkimmulticontext.h

(define-function gtk_im_multicontext_get_type
  (c-name "gtk_im_multicontext_get_type")
  (return-type "GType")
)

(define-function gtk_im_multicontext_new
  (c-name "gtk_im_multicontext_new")
  (is-constructor-of "GtkImMulticontext")
  (return-type "GtkIMContext*")
)

(define-method append_menuitems
  (of-object "GtkIMMulticontext")
  (c-name "gtk_im_multicontext_append_menuitems")
  (return-type "none")
  (parameters
    '("GtkMenuShell*" "menushell")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkinputdialog.h

(define-function gtk_input_dialog_get_type
  (c-name "gtk_input_dialog_get_type")
  (return-type "GType")
)

(define-function gtk_input_dialog_new
  (c-name "gtk_input_dialog_new")
  (is-constructor-of "GtkInputDialog")
  (return-type "GtkWidget*")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkintl.h



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkinvisible.h

(define-function gtk_invisible_get_type
  (c-name "gtk_invisible_get_type")
  (return-type "GType")
)

(define-function gtk_invisible_new
  (c-name "gtk_invisible_new")
  (is-constructor-of "GtkInvisible")
  (return-type "GtkWidget*")
)

(define-function gtk_invisible_new_for_screen
  (c-name "gtk_invisible_new_for_screen")
  (return-type "GtkWidget*")
  (parameters
    '("GdkScreen*" "screen")
  )
)

(define-method set_screen
  (of-object "GtkInvisible")
  (c-name "gtk_invisible_set_screen")
  (return-type "none")
  (parameters
    '("GdkScreen*" "screen")
  )
)

(define-method get_screen
  (of-object "GtkInvisible")
  (c-name "gtk_invisible_get_screen")
  (return-type "GdkScreen*")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkitemfactory.h

(define-function gtk_item_factory_get_type
  (c-name "gtk_item_factory_get_type")
  (return-type "GType")
)

(define-function gtk_item_factory_new
  (c-name "gtk_item_factory_new")
  (is-constructor-of "GtkItemFactory")
  (return-type "GtkItemFactory*")
  (parameters
    '("GType" "container_type")
    '("const-gchar*" "path")
    '("GtkAccelGroup*" "accel_group")
  )
)

(define-method construct
  (of-object "GtkItemFactory")
  (c-name "gtk_item_factory_construct")
  (return-type "none")
  (parameters
    '("GType" "container_type")
    '("const-gchar*" "path")
    '("GtkAccelGroup*" "accel_group")
  )
)

(define-function gtk_item_factory_add_foreign
  (c-name "gtk_item_factory_add_foreign")
  (return-type "none")
  (parameters
    '("GtkWidget*" "accel_widget")
    '("const-gchar*" "full_path")
    '("GtkAccelGroup*" "accel_group")
    '("guint" "keyval")
    '("GdkModifierType" "modifiers")
  )
)

(define-function gtk_item_factory_from_widget
  (c-name "gtk_item_factory_from_widget")
  (return-type "GtkItemFactory*")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-function gtk_item_factory_path_from_widget
  (c-name "gtk_item_factory_path_from_widget")
  (return-type "const-gchar*")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method get_item
  (of-object "GtkItemFactory")
  (c-name "gtk_item_factory_get_item")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "path")
  )
)

(define-method get_widget
  (of-object "GtkItemFactory")
  (c-name "gtk_item_factory_get_widget")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "path")
  )
)

(define-method get_widget_by_action
  (of-object "GtkItemFactory")
  (c-name "gtk_item_factory_get_widget_by_action")
  (return-type "GtkWidget*")
  (parameters
    '("guint" "action")
  )
)

(define-method get_item_by_action
  (of-object "GtkItemFactory")
  (c-name "gtk_item_factory_get_item_by_action")
  (return-type "GtkWidget*")
  (parameters
    '("guint" "action")
  )
)

(define-method create_item
  (of-object "GtkItemFactory")
  (c-name "gtk_item_factory_create_item")
  (return-type "none")
  (parameters
    '("GtkItemFactoryEntry*" "entry")
    '("gpointer" "callback_data")
    '("guint" "callback_type")
  )
)

(define-method create_items
  (of-object "GtkItemFactory")
  (c-name "gtk_item_factory_create_items")
  (return-type "none")
  (parameters
    '("guint" "n_entries")
    '("GtkItemFactoryEntry*" "entries")
    '("gpointer" "callback_data")
  )
)

(define-method delete_item
  (of-object "GtkItemFactory")
  (c-name "gtk_item_factory_delete_item")
  (return-type "none")
  (parameters
    '("const-gchar*" "path")
  )
)

(define-method delete_entry
  (of-object "GtkItemFactory")
  (c-name "gtk_item_factory_delete_entry")
  (return-type "none")
  (parameters
    '("GtkItemFactoryEntry*" "entry")
  )
)

(define-method delete_entries
  (of-object "GtkItemFactory")
  (c-name "gtk_item_factory_delete_entries")
  (return-type "none")
  (parameters
    '("guint" "n_entries")
    '("GtkItemFactoryEntry*" "entries")
  )
)

(define-method popup
  (of-object "GtkItemFactory")
  (c-name "gtk_item_factory_popup")
  (return-type "none")
  (parameters
    '("guint" "x")
    '("guint" "y")
    '("guint" "mouse_button")
    '("guint32" "time_")
  )
)

(define-method popup_with_data
  (of-object "GtkItemFactory")
  (c-name "gtk_item_factory_popup_with_data")
  (return-type "none")
  (parameters
    '("gpointer" "popup_data")
    '("GtkDestroyNotify" "destroy")
    '("guint" "x")
    '("guint" "y")
    '("guint" "mouse_button")
    '("guint32" "time_")
  )
)

(define-method popup_data
  (of-object "GtkItemFactory")
  (c-name "gtk_item_factory_popup_data")
  (return-type "gpointer")
)

(define-function gtk_item_factory_popup_data_from_widget
  (c-name "gtk_item_factory_popup_data_from_widget")
  (return-type "gpointer")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method set_translate_func
  (of-object "GtkItemFactory")
  (c-name "gtk_item_factory_set_translate_func")
  (return-type "none")
  (parameters
    '("GtkTranslateFunc" "func")
    '("gpointer" "data")
    '("GtkDestroyNotify" "notify")
  )
)

(define-method create_items_ac
  (of-object "GtkItemFactory")
  (c-name "gtk_item_factory_create_items_ac")
  (return-type "none")
  (parameters
    '("guint" "n_entries")
    '("GtkItemFactoryEntry*" "entries")
    '("gpointer" "callback_data")
    '("guint" "callback_type")
  )
)

(define-function gtk_item_factory_from_path
  (c-name "gtk_item_factory_from_path")
  (return-type "GtkItemFactory*")
  (parameters
    '("const-gchar*" "path")
  )
)

(define-function gtk_item_factory_create_menu_entries
  (c-name "gtk_item_factory_create_menu_entries")
  (return-type "none")
  (parameters
    '("guint" "n_entries")
    '("GtkMenuEntry*" "entries")
  )
)

(define-function gtk_item_factories_path_delete
  (c-name "gtk_item_factories_path_delete")
  (return-type "none")
  (parameters
    '("const-gchar*" "ifactory_path")
    '("const-gchar*" "path")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkitem.h

(define-function gtk_item_get_type
  (c-name "gtk_item_get_type")
  (return-type "GType")
)

(define-method select
  (of-object "GtkItem")
  (c-name "gtk_item_select")
  (return-type "none")
)

(define-method deselect
  (of-object "GtkItem")
  (c-name "gtk_item_deselect")
  (return-type "none")
)

(define-method toggle
  (of-object "GtkItem")
  (c-name "gtk_item_toggle")
  (return-type "none")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkkeyhash.h

(define-method _add_entry
  (of-object "GtkKeyHash")
  (c-name "_gtk_key_hash_add_entry")
  (return-type "none")
  (parameters
    '("guint" "keyval")
    '("GdkModifierType" "modifiers")
    '("gpointer" "value")
  )
)

(define-method _remove_entry
  (of-object "GtkKeyHash")
  (c-name "_gtk_key_hash_remove_entry")
  (return-type "none")
  (parameters
    '("gpointer" "value")
  )
)

(define-method _lookup
  (of-object "GtkKeyHash")
  (c-name "_gtk_key_hash_lookup")
  (return-type "GSList*")
  (parameters
    '("guint16" "hardware_keycode")
    '("GdkModifierType" "state")
    '("GdkModifierType" "mask")
    '("gint" "group")
  )
)

(define-method _lookup_keyval
  (of-object "GtkKeyHash")
  (c-name "_gtk_key_hash_lookup_keyval")
  (return-type "GSList*")
  (parameters
    '("guint" "keyval")
    '("GdkModifierType" "modifiers")
  )
)

(define-method _free
  (of-object "GtkKeyHash")
  (c-name "_gtk_key_hash_free")
  (return-type "none")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtklabel.h

(define-function gtk_label_get_type
  (c-name "gtk_label_get_type")
  (return-type "GType")
)

(define-function gtk_label_new
  (c-name "gtk_label_new")
  (is-constructor-of "GtkLabel")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "str")
  )
)

(define-function gtk_label_new_with_mnemonic
  (c-name "gtk_label_new_with_mnemonic")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "str")
  )
)

(define-method set_text
  (of-object "GtkLabel")
  (c-name "gtk_label_set_text")
  (return-type "none")
  (parameters
    '("const-char*" "str")
  )
)

(define-method get_text
  (of-object "GtkLabel")
  (c-name "gtk_label_get_text")
  (return-type "const-gchar*")
)

(define-method set_attributes
  (of-object "GtkLabel")
  (c-name "gtk_label_set_attributes")
  (return-type "none")
  (parameters
    '("PangoAttrList*" "attrs")
  )
)

(define-method get_attributes
  (of-object "GtkLabel")
  (c-name "gtk_label_get_attributes")
  (return-type "PangoAttrList*")
)

(define-method set_label
  (of-object "GtkLabel")
  (c-name "gtk_label_set_label")
  (return-type "none")
  (parameters
    '("const-gchar*" "str")
  )
)

(define-method get_label
  (of-object "GtkLabel")
  (c-name "gtk_label_get_label")
  (return-type "const-gchar*")
)

(define-method set_markup
  (of-object "GtkLabel")
  (c-name "gtk_label_set_markup")
  (return-type "none")
  (parameters
    '("const-gchar*" "str")
  )
)

(define-method set_use_markup
  (of-object "GtkLabel")
  (c-name "gtk_label_set_use_markup")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_use_markup
  (of-object "GtkLabel")
  (c-name "gtk_label_get_use_markup")
  (return-type "gboolean")
)

(define-method set_use_underline
  (of-object "GtkLabel")
  (c-name "gtk_label_set_use_underline")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_use_underline
  (of-object "GtkLabel")
  (c-name "gtk_label_get_use_underline")
  (return-type "gboolean")
)

(define-method set_markup_with_mnemonic
  (of-object "GtkLabel")
  (c-name "gtk_label_set_markup_with_mnemonic")
  (return-type "none")
  (parameters
    '("const-gchar*" "str")
  )
)

(define-method get_mnemonic_keyval
  (of-object "GtkLabel")
  (c-name "gtk_label_get_mnemonic_keyval")
  (return-type "guint")
)

(define-method set_mnemonic_widget
  (of-object "GtkLabel")
  (c-name "gtk_label_set_mnemonic_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method get_mnemonic_widget
  (of-object "GtkLabel")
  (c-name "gtk_label_get_mnemonic_widget")
  (return-type "GtkWidget*")
)

(define-method set_text_with_mnemonic
  (of-object "GtkLabel")
  (c-name "gtk_label_set_text_with_mnemonic")
  (return-type "none")
  (parameters
    '("const-gchar*" "str")
  )
)

(define-method set_justify
  (of-object "GtkLabel")
  (c-name "gtk_label_set_justify")
  (return-type "none")
  (parameters
    '("GtkJustification" "jtype")
  )
)

(define-method get_justify
  (of-object "GtkLabel")
  (c-name "gtk_label_get_justify")
  (return-type "GtkJustification")
)

(define-method set_pattern
  (of-object "GtkLabel")
  (c-name "gtk_label_set_pattern")
  (return-type "none")
  (parameters
    '("const-gchar*" "pattern")
  )
)

(define-method set_line_wrap
  (of-object "GtkLabel")
  (c-name "gtk_label_set_line_wrap")
  (return-type "none")
  (parameters
    '("gboolean" "wrap")
  )
)

(define-method get_line_wrap
  (of-object "GtkLabel")
  (c-name "gtk_label_get_line_wrap")
  (return-type "gboolean")
)

(define-method set_selectable
  (of-object "GtkLabel")
  (c-name "gtk_label_set_selectable")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_selectable
  (of-object "GtkLabel")
  (c-name "gtk_label_get_selectable")
  (return-type "gboolean")
)

(define-method select_region
  (of-object "GtkLabel")
  (c-name "gtk_label_select_region")
  (return-type "none")
  (parameters
    '("gint" "start_offset")
    '("gint" "end_offset")
  )
)

(define-method get_selection_bounds
  (of-object "GtkLabel")
  (c-name "gtk_label_get_selection_bounds")
  (return-type "gboolean")
  (parameters
    '("gint*" "start")
    '("gint*" "end")
  )
)

(define-method get_layout
  (of-object "GtkLabel")
  (c-name "gtk_label_get_layout")
  (return-type "PangoLayout*")
)

(define-method get_layout_offsets
  (of-object "GtkLabel")
  (c-name "gtk_label_get_layout_offsets")
  (return-type "none")
  (parameters
    '("gint*" "x")
    '("gint*" "y")
  )
)

(define-method get
  (of-object "GtkLabel")
  (c-name "gtk_label_get")
  (return-type "none")
  (parameters
    '("char**" "str")
  )
)

(define-method parse_uline
  (of-object "GtkLabel")
  (c-name "gtk_label_parse_uline")
  (return-type "guint")
  (parameters
    '("const-gchar*" "string")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtklayout.h

(define-function gtk_layout_get_type
  (c-name "gtk_layout_get_type")
  (return-type "GType")
)

(define-function gtk_layout_new
  (c-name "gtk_layout_new")
  (is-constructor-of "GtkLayout")
  (return-type "GtkWidget*")
  (parameters
    '("GtkAdjustment*" "hadjustment")
    '("GtkAdjustment*" "vadjustment")
  )
)

(define-method put
  (of-object "GtkLayout")
  (c-name "gtk_layout_put")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child_widget")
    '("gint" "x")
    '("gint" "y")
  )
)

(define-method move
  (of-object "GtkLayout")
  (c-name "gtk_layout_move")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child_widget")
    '("gint" "x")
    '("gint" "y")
  )
)

(define-method set_size
  (of-object "GtkLayout")
  (c-name "gtk_layout_set_size")
  (return-type "none")
  (parameters
    '("guint" "width")
    '("guint" "height")
  )
)

(define-method get_size
  (of-object "GtkLayout")
  (c-name "gtk_layout_get_size")
  (return-type "none")
  (parameters
    '("guint*" "width")
    '("guint*" "height")
  )
)

(define-method get_hadjustment
  (of-object "GtkLayout")
  (c-name "gtk_layout_get_hadjustment")
  (return-type "GtkAdjustment*")
)

(define-method get_vadjustment
  (of-object "GtkLayout")
  (c-name "gtk_layout_get_vadjustment")
  (return-type "GtkAdjustment*")
)

(define-method set_hadjustment
  (of-object "GtkLayout")
  (c-name "gtk_layout_set_hadjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment")
  )
)

(define-method set_vadjustment
  (of-object "GtkLayout")
  (c-name "gtk_layout_set_vadjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment")
  )
)

(define-method freeze
  (of-object "GtkLayout")
  (c-name "gtk_layout_freeze")
  (return-type "none")
)

(define-method thaw
  (of-object "GtkLayout")
  (c-name "gtk_layout_thaw")
  (return-type "none")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtklist.h

(define-function gtk_list_get_type
  (c-name "gtk_list_get_type")
  (return-type "GtkType")
)

(define-function gtk_list_new
  (c-name "gtk_list_new")
  (is-constructor-of "GtkList")
  (return-type "GtkWidget*")
)

(define-method insert_items
  (of-object "GtkList")
  (c-name "gtk_list_insert_items")
  (return-type "none")
  (parameters
    '("GList*" "items")
    '("gint" "position")
  )
)

(define-method append_items
  (of-object "GtkList")
  (c-name "gtk_list_append_items")
  (return-type "none")
  (parameters
    '("GList*" "items")
  )
)

(define-method prepend_items
  (of-object "GtkList")
  (c-name "gtk_list_prepend_items")
  (return-type "none")
  (parameters
    '("GList*" "items")
  )
)

(define-method remove_items
  (of-object "GtkList")
  (c-name "gtk_list_remove_items")
  (return-type "none")
  (parameters
    '("GList*" "items")
  )
)

(define-method remove_items_no_unref
  (of-object "GtkList")
  (c-name "gtk_list_remove_items_no_unref")
  (return-type "none")
  (parameters
    '("GList*" "items")
  )
)

(define-method clear_items
  (of-object "GtkList")
  (c-name "gtk_list_clear_items")
  (return-type "none")
  (parameters
    '("gint" "start")
    '("gint" "end")
  )
)

(define-method select_item
  (of-object "GtkList")
  (c-name "gtk_list_select_item")
  (return-type "none")
  (parameters
    '("gint" "item")
  )
)

(define-method unselect_item
  (of-object "GtkList")
  (c-name "gtk_list_unselect_item")
  (return-type "none")
  (parameters
    '("gint" "item")
  )
)

(define-method select_child
  (of-object "GtkList")
  (c-name "gtk_list_select_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method unselect_child
  (of-object "GtkList")
  (c-name "gtk_list_unselect_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method child_position
  (of-object "GtkList")
  (c-name "gtk_list_child_position")
  (return-type "gint")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method set_selection_mode
  (of-object "GtkList")
  (c-name "gtk_list_set_selection_mode")
  (return-type "none")
  (parameters
    '("GtkSelectionMode" "mode")
  )
)

(define-method extend_selection
  (of-object "GtkList")
  (c-name "gtk_list_extend_selection")
  (return-type "none")
  (parameters
    '("GtkScrollType" "scroll_type")
    '("gfloat" "position")
    '("gboolean" "auto_start_selection")
  )
)

(define-method start_selection
  (of-object "GtkList")
  (c-name "gtk_list_start_selection")
  (return-type "none")
)

(define-method end_selection
  (of-object "GtkList")
  (c-name "gtk_list_end_selection")
  (return-type "none")
)

(define-method select_all
  (of-object "GtkList")
  (c-name "gtk_list_select_all")
  (return-type "none")
)

(define-method unselect_all
  (of-object "GtkList")
  (c-name "gtk_list_unselect_all")
  (return-type "none")
)

(define-method scroll_horizontal
  (of-object "GtkList")
  (c-name "gtk_list_scroll_horizontal")
  (return-type "none")
  (parameters
    '("GtkScrollType" "scroll_type")
    '("gfloat" "position")
  )
)

(define-method scroll_vertical
  (of-object "GtkList")
  (c-name "gtk_list_scroll_vertical")
  (return-type "none")
  (parameters
    '("GtkScrollType" "scroll_type")
    '("gfloat" "position")
  )
)

(define-method toggle_add_mode
  (of-object "GtkList")
  (c-name "gtk_list_toggle_add_mode")
  (return-type "none")
)

(define-method toggle_focus_row
  (of-object "GtkList")
  (c-name "gtk_list_toggle_focus_row")
  (return-type "none")
)

(define-method toggle_row
  (of-object "GtkList")
  (c-name "gtk_list_toggle_row")
  (return-type "none")
  (parameters
    '("GtkWidget*" "item")
  )
)

(define-method undo_selection
  (of-object "GtkList")
  (c-name "gtk_list_undo_selection")
  (return-type "none")
)

(define-method end_drag_selection
  (of-object "GtkList")
  (c-name "gtk_list_end_drag_selection")
  (return-type "none")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtklistitem.h

(define-function gtk_list_item_get_type
  (c-name "gtk_list_item_get_type")
  (return-type "GtkType")
)

(define-function gtk_list_item_new
  (c-name "gtk_list_item_new")
  (is-constructor-of "GtkListItem")
  (return-type "GtkWidget*")
)

(define-function gtk_list_item_new_with_label
  (c-name "gtk_list_item_new_with_label")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "label")
  )
)

(define-method select
  (of-object "GtkListItem")
  (c-name "gtk_list_item_select")
  (return-type "none")
)

(define-method deselect
  (of-object "GtkListItem")
  (c-name "gtk_list_item_deselect")
  (return-type "none")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkliststore.h

(define-function gtk_list_store_get_type
  (c-name "gtk_list_store_get_type")
  (return-type "GType")
)

(define-function gtk_list_store_new
  (c-name "gtk_list_store_new")
  (is-constructor-of "GtkListStore")
  (return-type "GtkListStore*")
  (parameters
    '("gint" "n_columns")
  )
  (varargs #t)
)

(define-function gtk_list_store_newv
  (c-name "gtk_list_store_newv")
  (return-type "GtkListStore*")
  (parameters
    '("gint" "n_columns")
    '("GType*" "types")
  )
)

(define-method set_column_types
  (of-object "GtkListStore")
  (c-name "gtk_list_store_set_column_types")
  (return-type "none")
  (parameters
    '("gint" "n_columns")
    '("GType*" "types")
  )
)

(define-method set_value
  (of-object "GtkListStore")
  (c-name "gtk_list_store_set_value")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("gint" "column")
    '("GValue*" "value")
  )
)

(define-method set
  (of-object "GtkListStore")
  (c-name "gtk_list_store_set")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
  )
  (varargs #t)
)

(define-method set_valist
  (of-object "GtkListStore")
  (c-name "gtk_list_store_set_valist")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("va_list" "var_args")
  )
)

(define-method remove
  (of-object "GtkListStore")
  (c-name "gtk_list_store_remove")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method insert
  (of-object "GtkListStore")
  (c-name "gtk_list_store_insert")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("gint" "position")
  )
)

(define-method insert_before
  (of-object "GtkListStore")
  (c-name "gtk_list_store_insert_before")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreeIter*" "sibling")
  )
)

(define-method insert_after
  (of-object "GtkListStore")
  (c-name "gtk_list_store_insert_after")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreeIter*" "sibling")
  )
)

(define-method prepend
  (of-object "GtkListStore")
  (c-name "gtk_list_store_prepend")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method append
  (of-object "GtkListStore")
  (c-name "gtk_list_store_append")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method clear
  (of-object "GtkListStore")
  (c-name "gtk_list_store_clear")
  (return-type "none")
)

(define-method iter_is_valid
  (of-object "GtkListStore")
  (c-name "gtk_list_store_iter_is_valid")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method reorder
  (of-object "GtkListStore")
  (c-name "gtk_list_store_reorder")
  (return-type "none")
  (parameters
    '("gint*" "new_order")
  )
)

(define-method swap
  (of-object "GtkListStore")
  (c-name "gtk_list_store_swap")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "a")
    '("GtkTreeIter*" "b")
  )
)

(define-method move_after
  (of-object "GtkListStore")
  (c-name "gtk_list_store_move_after")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreeIter*" "position")
  )
)

(define-method move_before
  (of-object "GtkListStore")
  (c-name "gtk_list_store_move_before")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreeIter*" "position")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkmain.h

(define-function gtk_check_version
  (c-name "gtk_check_version")
  (return-type "gchar*")
  (parameters
    '("guint" "required_major")
    '("guint" "required_minor")
    '("guint" "required_micro")
  )
)

(define-function gtk_init
  (c-name "gtk_init")
  (return-type "none")
  (parameters
    '("int*" "argc")
    '("char***" "argv")
  )
)

(define-function gtk_init_check
  (c-name "gtk_init_check")
  (return-type "gboolean")
  (parameters
    '("int*" "argc")
    '("char***" "argv")
  )
)

(define-function gtk_init_abi_check
  (c-name "gtk_init_abi_check")
  (return-type "none")
  (parameters
    '("int*" "argc")
    '("char***" "argv")
    '("int" "num_checks")
    '("size_t" "sizeof_GtkWindow")
    '("size_t" "sizeof_GtkBox")
  )
)

(define-function gtk_init_check_abi_check
  (c-name "gtk_init_check_abi_check")
  (return-type "gboolean")
  (parameters
    '("int*" "argc")
    '("char***" "argv")
    '("int" "num_checks")
    '("size_t" "sizeof_GtkWindow")
    '("size_t" "sizeof_GtkBox")
  )
)

(define-function gtk_exit
  (c-name "gtk_exit")
  (return-type "none")
  (parameters
    '("gint" "error_code")
  )
)

(define-function gtk_disable_setlocale
  (c-name "gtk_disable_setlocale")
  (return-type "none")
)

(define-function gtk_set_locale
  (c-name "gtk_set_locale")
  (return-type "gchar*")
)

(define-function gtk_get_default_language
  (c-name "gtk_get_default_language")
  (return-type "PangoLanguage*")
)

(define-function gtk_events_pending
  (c-name "gtk_events_pending")
  (return-type "gint")
)

(define-function gtk_main_do_event
  (c-name "gtk_main_do_event")
  (return-type "none")
  (parameters
    '("GdkEvent*" "event")
  )
)

(define-function gtk_main
  (c-name "gtk_main")
  (return-type "none")
)

(define-function gtk_main_level
  (c-name "gtk_main_level")
  (return-type "guint")
)

(define-function gtk_main_quit
  (c-name "gtk_main_quit")
  (return-type "none")
)

(define-function gtk_main_iteration
  (c-name "gtk_main_iteration")
  (return-type "gboolean")
)

(define-function gtk_main_iteration_do
  (c-name "gtk_main_iteration_do")
  (return-type "gboolean")
  (parameters
    '("gboolean" "blocking")
  )
)

(define-function gtk_true
  (c-name "gtk_true")
  (return-type "gboolean")
)

(define-function gtk_false
  (c-name "gtk_false")
  (return-type "gboolean")
)

(define-function gtk_grab_add
  (c-name "gtk_grab_add")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-function gtk_grab_get_current
  (c-name "gtk_grab_get_current")
  (return-type "GtkWidget*")
)

(define-function gtk_grab_remove
  (c-name "gtk_grab_remove")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-function gtk_init_add
  (c-name "gtk_init_add")
  (return-type "none")
  (parameters
    '("GtkFunction" "function")
    '("gpointer" "data")
  )
)

(define-function gtk_quit_add_destroy
  (c-name "gtk_quit_add_destroy")
  (return-type "none")
  (parameters
    '("guint" "main_level")
    '("GtkObject*" "object")
  )
)

(define-function gtk_quit_add
  (c-name "gtk_quit_add")
  (return-type "guint")
  (parameters
    '("guint" "main_level")
    '("GtkFunction" "function")
    '("gpointer" "data")
  )
)

(define-function gtk_quit_add_full
  (c-name "gtk_quit_add_full")
  (return-type "guint")
  (parameters
    '("guint" "main_level")
    '("GtkFunction" "function")
    '("GtkCallbackMarshal" "marshal")
    '("gpointer" "data")
    '("GtkDestroyNotify" "destroy")
  )
)

(define-function gtk_quit_remove
  (c-name "gtk_quit_remove")
  (return-type "none")
  (parameters
    '("guint" "quit_handler_id")
  )
)

(define-function gtk_quit_remove_by_data
  (c-name "gtk_quit_remove_by_data")
  (return-type "none")
  (parameters
    '("gpointer" "data")
  )
)

(define-function gtk_timeout_add
  (c-name "gtk_timeout_add")
  (return-type "guint")
  (parameters
    '("guint32" "interval")
    '("GtkFunction" "function")
    '("gpointer" "data")
  )
)

(define-function gtk_timeout_add_full
  (c-name "gtk_timeout_add_full")
  (return-type "guint")
  (parameters
    '("guint32" "interval")
    '("GtkFunction" "function")
    '("GtkCallbackMarshal" "marshal")
    '("gpointer" "data")
    '("GtkDestroyNotify" "destroy")
  )
)

(define-function gtk_timeout_remove
  (c-name "gtk_timeout_remove")
  (return-type "none")
  (parameters
    '("guint" "timeout_handler_id")
  )
)

(define-function gtk_idle_add
  (c-name "gtk_idle_add")
  (return-type "guint")
  (parameters
    '("GtkFunction" "function")
    '("gpointer" "data")
  )
)

(define-function gtk_idle_add_priority
  (c-name "gtk_idle_add_priority")
  (return-type "guint")
  (parameters
    '("gint" "priority")
    '("GtkFunction" "function")
    '("gpointer" "data")
  )
)

(define-function gtk_idle_add_full
  (c-name "gtk_idle_add_full")
  (return-type "guint")
  (parameters
    '("gint" "priority")
    '("GtkFunction" "function")
    '("GtkCallbackMarshal" "marshal")
    '("gpointer" "data")
    '("GtkDestroyNotify" "destroy")
  )
)

(define-function gtk_idle_remove
  (c-name "gtk_idle_remove")
  (return-type "none")
  (parameters
    '("guint" "idle_handler_id")
  )
)

(define-function gtk_idle_remove_by_data
  (c-name "gtk_idle_remove_by_data")
  (return-type "none")
  (parameters
    '("gpointer" "data")
  )
)

(define-function gtk_input_add_full
  (c-name "gtk_input_add_full")
  (return-type "guint")
  (parameters
    '("gint" "source")
    '("GdkInputCondition" "condition")
    '("GdkInputFunction" "function")
    '("GtkCallbackMarshal" "marshal")
    '("gpointer" "data")
    '("GtkDestroyNotify" "destroy")
  )
)

(define-function gtk_input_remove
  (c-name "gtk_input_remove")
  (return-type "none")
  (parameters
    '("guint" "input_handler_id")
  )
)

(define-function gtk_key_snooper_install
  (c-name "gtk_key_snooper_install")
  (return-type "guint")
  (parameters
    '("GtkKeySnoopFunc" "snooper")
    '("gpointer" "func_data")
  )
)

(define-function gtk_key_snooper_remove
  (c-name "gtk_key_snooper_remove")
  (return-type "none")
  (parameters
    '("guint" "snooper_handler_id")
  )
)

(define-function gtk_get_current_event
  (c-name "gtk_get_current_event")
  (return-type "GdkEvent*")
)

(define-function gtk_get_current_event_time
  (c-name "gtk_get_current_event_time")
  (return-type "guint32")
)

(define-function gtk_get_current_event_state
  (c-name "gtk_get_current_event_state")
  (return-type "gboolean")
  (parameters
    '("GdkModifierType*" "state")
  )
)

(define-function gtk_get_event_widget
  (c-name "gtk_get_event_widget")
  (return-type "GtkWidget*")
  (parameters
    '("GdkEvent*" "event")
  )
)

(define-function gtk_propagate_event
  (c-name "gtk_propagate_event")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("GdkEvent*" "event")
  )
)

(define-function _gtk_boolean_handled_accumulator
  (c-name "_gtk_boolean_handled_accumulator")
  (return-type "gboolean")
  (parameters
    '("GSignalInvocationHint*" "ihint")
    '("GValue*" "return_accu")
    '("const-GValue*" "handler_return")
    '("gpointer" "dummy")
  )
)

(define-function _gtk_find_module
  (c-name "_gtk_find_module")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "name")
    '("const-gchar*" "type")
  )
)

(define-function _gtk_get_module_path
  (c-name "_gtk_get_module_path")
  (return-type "gchar**")
  (parameters
    '("const-gchar*" "type")
  )
)

(define-function _gtk_get_lc_ctype
  (c-name "_gtk_get_lc_ctype")
  (return-type "gchar*")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkmarshalers.h



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkmarshal.h



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkmenubar.h

(define-function gtk_menu_bar_get_type
  (c-name "gtk_menu_bar_get_type")
  (return-type "GType")
)

(define-function gtk_menu_bar_new
  (c-name "gtk_menu_bar_new")
  (is-constructor-of "GtkMenuBar")
  (return-type "GtkWidget*")
)

(define-method _cycle_focus
  (of-object "GtkMenuBar")
  (c-name "_gtk_menu_bar_cycle_focus")
  (return-type "none")
  (parameters
    '("GtkDirectionType" "dir")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkmenu.h

(define-function gtk_menu_get_type
  (c-name "gtk_menu_get_type")
  (return-type "GType")
)

(define-function gtk_menu_new
  (c-name "gtk_menu_new")
  (is-constructor-of "GtkMenu")
  (return-type "GtkWidget*")
)

(define-method popup
  (of-object "GtkMenu")
  (c-name "gtk_menu_popup")
  (return-type "none")
  (parameters
    '("GtkWidget*" "parent_menu_shell")
    '("GtkWidget*" "parent_menu_item")
    '("GtkMenuPositionFunc" "func")
    '("gpointer" "data")
    '("guint" "button")
    '("guint32" "activate_time")
  )
)

(define-method reposition
  (of-object "GtkMenu")
  (c-name "gtk_menu_reposition")
  (return-type "none")
)

(define-method popdown
  (of-object "GtkMenu")
  (c-name "gtk_menu_popdown")
  (return-type "none")
)

(define-method get_active
  (of-object "GtkMenu")
  (c-name "gtk_menu_get_active")
  (return-type "GtkWidget*")
)

(define-method set_active
  (of-object "GtkMenu")
  (c-name "gtk_menu_set_active")
  (return-type "none")
  (parameters
    '("guint" "index_")
  )
)

(define-method set_accel_group
  (of-object "GtkMenu")
  (c-name "gtk_menu_set_accel_group")
  (return-type "none")
  (parameters
    '("GtkAccelGroup*" "accel_group")
  )
)

(define-method get_accel_group
  (of-object "GtkMenu")
  (c-name "gtk_menu_get_accel_group")
  (return-type "GtkAccelGroup*")
)

(define-method set_accel_path
  (of-object "GtkMenu")
  (c-name "gtk_menu_set_accel_path")
  (return-type "none")
  (parameters
    '("const-gchar*" "accel_path")
  )
)

(define-method attach_to_widget
  (of-object "GtkMenu")
  (c-name "gtk_menu_attach_to_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "attach_widget")
    '("GtkMenuDetachFunc" "detacher")
  )
)

(define-method detach
  (of-object "GtkMenu")
  (c-name "gtk_menu_detach")
  (return-type "none")
)

(define-method get_attach_widget
  (of-object "GtkMenu")
  (c-name "gtk_menu_get_attach_widget")
  (return-type "GtkWidget*")
)

(define-method set_tearoff_state
  (of-object "GtkMenu")
  (c-name "gtk_menu_set_tearoff_state")
  (return-type "none")
  (parameters
    '("gboolean" "torn_off")
  )
)

(define-method get_tearoff_state
  (of-object "GtkMenu")
  (c-name "gtk_menu_get_tearoff_state")
  (return-type "gboolean")
)

(define-method set_title
  (of-object "GtkMenu")
  (c-name "gtk_menu_set_title")
  (return-type "none")
  (parameters
    '("const-gchar*" "title")
  )
)

(define-method get_title
  (of-object "GtkMenu")
  (c-name "gtk_menu_get_title")
  (return-type "const-gchar*")
)

(define-method reorder_child
  (of-object "GtkMenu")
  (c-name "gtk_menu_reorder_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("gint" "position")
  )
)

(define-method set_screen
  (of-object "GtkMenu")
  (c-name "gtk_menu_set_screen")
  (return-type "none")
  (parameters
    '("GdkScreen*" "screen")
  )
)

(define-method attach
  (of-object "GtkMenu")
  (c-name "gtk_menu_attach")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("guint" "left_attach")
    '("guint" "right_attach")
    '("guint" "top_attach")
    '("guint" "bottom_attach")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkmenuitem.h

(define-function gtk_menu_item_get_type
  (c-name "gtk_menu_item_get_type")
  (return-type "GType")
)

(define-function gtk_menu_item_new
  (c-name "gtk_menu_item_new")
  (is-constructor-of "GtkMenuItem")
  (return-type "GtkWidget*")
)

(define-function gtk_menu_item_new_with_label
  (c-name "gtk_menu_item_new_with_label")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "label")
  )
)

(define-function gtk_menu_item_new_with_mnemonic
  (c-name "gtk_menu_item_new_with_mnemonic")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "label")
  )
)

(define-method set_submenu
  (of-object "GtkMenuItem")
  (c-name "gtk_menu_item_set_submenu")
  (return-type "none")
  (parameters
    '("GtkWidget*" "submenu")
  )
)

(define-method get_submenu
  (of-object "GtkMenuItem")
  (c-name "gtk_menu_item_get_submenu")
  (return-type "GtkWidget*")
)

(define-method remove_submenu
  (of-object "GtkMenuItem")
  (c-name "gtk_menu_item_remove_submenu")
  (return-type "none")
)

(define-method select
  (of-object "GtkMenuItem")
  (c-name "gtk_menu_item_select")
  (return-type "none")
)

(define-method deselect
  (of-object "GtkMenuItem")
  (c-name "gtk_menu_item_deselect")
  (return-type "none")
)

(define-method activate
  (of-object "GtkMenuItem")
  (c-name "gtk_menu_item_activate")
  (return-type "none")
)

(define-method toggle_size_request
  (of-object "GtkMenuItem")
  (c-name "gtk_menu_item_toggle_size_request")
  (return-type "none")
  (parameters
    '("gint*" "requisition")
  )
)

(define-method toggle_size_allocate
  (of-object "GtkMenuItem")
  (c-name "gtk_menu_item_toggle_size_allocate")
  (return-type "none")
  (parameters
    '("gint" "allocation")
  )
)

(define-method set_right_justified
  (of-object "GtkMenuItem")
  (c-name "gtk_menu_item_set_right_justified")
  (return-type "none")
  (parameters
    '("gboolean" "right_justified")
  )
)

(define-method get_right_justified
  (of-object "GtkMenuItem")
  (c-name "gtk_menu_item_get_right_justified")
  (return-type "gboolean")
)

(define-method set_accel_path
  (of-object "GtkMenuItem")
  (c-name "gtk_menu_item_set_accel_path")
  (return-type "none")
  (parameters
    '("const-gchar*" "accel_path")
  )
)

(define-method _refresh_accel_path
  (of-object "GtkMenuItem")
  (c-name "_gtk_menu_item_refresh_accel_path")
  (return-type "none")
  (parameters
    '("const-gchar*" "prefix")
    '("GtkAccelGroup*" "accel_group")
    '("gboolean" "group_changed")
  )
)

(define-function _gtk_menu_item_is_selectable
  (c-name "_gtk_menu_item_is_selectable")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "menu_item")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkmenushell.h

(define-function gtk_menu_shell_get_type
  (c-name "gtk_menu_shell_get_type")
  (return-type "GType")
)

(define-method append
  (of-object "GtkMenuShell")
  (c-name "gtk_menu_shell_append")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method prepend
  (of-object "GtkMenuShell")
  (c-name "gtk_menu_shell_prepend")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method insert
  (of-object "GtkMenuShell")
  (c-name "gtk_menu_shell_insert")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("gint" "position")
  )
)

(define-method deactivate
  (of-object "GtkMenuShell")
  (c-name "gtk_menu_shell_deactivate")
  (return-type "none")
)

(define-method select_item
  (of-object "GtkMenuShell")
  (c-name "gtk_menu_shell_select_item")
  (return-type "none")
  (parameters
    '("GtkWidget*" "menu_item")
  )
)

(define-method deselect
  (of-object "GtkMenuShell")
  (c-name "gtk_menu_shell_deselect")
  (return-type "none")
)

(define-method activate_item
  (of-object "GtkMenuShell")
  (c-name "gtk_menu_shell_activate_item")
  (return-type "none")
  (parameters
    '("GtkWidget*" "menu_item")
    '("gboolean" "force_deactivate")
  )
)

(define-method select_first
  (of-object "GtkMenuShell")
  (c-name "gtk_menu_shell_select_first")
  (return-type "none")
  (parameters
    '("gboolean" "search_sensitive")
  )
)

(define-method _select_last
  (of-object "GtkMenuShell")
  (c-name "_gtk_menu_shell_select_last")
  (return-type "none")
  (parameters
    '("gboolean" "search_sensitive")
  )
)

(define-method _activate
  (of-object "GtkMenuShell")
  (c-name "_gtk_menu_shell_activate")
  (return-type "none")
)

(define-method _get_popup_delay
  (of-object "GtkMenuShell")
  (c-name "_gtk_menu_shell_get_popup_delay")
  (return-type "gint")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkmessagedialog.h

(define-function gtk_message_dialog_get_type
  (c-name "gtk_message_dialog_get_type")
  (return-type "GType")
)

(define-function gtk_message_dialog_new
  (c-name "gtk_message_dialog_new")
  (is-constructor-of "GtkMessageDialog")
  (return-type "GtkWidget*")
  (parameters
    '("GtkWindow*" "parent")
    '("GtkDialogFlags" "flags")
    '("GtkMessageType" "type")
    '("GtkButtonsType" "buttons")
    '("const-gchar*" "message_format")
  )
  (varargs #t)
)

(define-function gtk_message_dialog_new_with_markup
  (c-name "gtk_message_dialog_new_with_markup")
  (return-type "GtkWidget*")
  (parameters
    '("GtkWindow*" "parent")
    '("GtkDialogFlags" "flags")
    '("GtkMessageType" "type")
    '("GtkButtonsType" "buttons")
    '("const-gchar*" "message_format")
  )
  (varargs #t)
)

(define-method set_markup
  (of-object "GtkMessageDialog")
  (c-name "gtk_message_dialog_set_markup")
  (return-type "none")
  (parameters
    '("const-gchar*" "str")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkmisc.h

(define-function gtk_misc_get_type
  (c-name "gtk_misc_get_type")
  (return-type "GType")
)

(define-method set_alignment
  (of-object "GtkMisc")
  (c-name "gtk_misc_set_alignment")
  (return-type "none")
  (parameters
    '("gfloat" "xalign")
    '("gfloat" "yalign")
  )
)

(define-method get_alignment
  (of-object "GtkMisc")
  (c-name "gtk_misc_get_alignment")
  (return-type "none")
  (parameters
    '("gfloat*" "xalign")
    '("gfloat*" "yalign")
  )
)

(define-method set_padding
  (of-object "GtkMisc")
  (c-name "gtk_misc_set_padding")
  (return-type "none")
  (parameters
    '("gint" "xpad")
    '("gint" "ypad")
  )
)

(define-method get_padding
  (of-object "GtkMisc")
  (c-name "gtk_misc_get_padding")
  (return-type "none")
  (parameters
    '("gint*" "xpad")
    '("gint*" "ypad")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtknotebook.h

(define-function gtk_notebook_get_type
  (c-name "gtk_notebook_get_type")
  (return-type "GType")
)

(define-function gtk_notebook_new
  (c-name "gtk_notebook_new")
  (is-constructor-of "GtkNotebook")
  (return-type "GtkWidget*")
)

(define-method append_page
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_append_page")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("GtkWidget*" "tab_label")
  )
)

(define-method append_page_menu
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_append_page_menu")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("GtkWidget*" "tab_label")
    '("GtkWidget*" "menu_label")
  )
)

(define-method prepend_page
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_prepend_page")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("GtkWidget*" "tab_label")
  )
)

(define-method prepend_page_menu
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_prepend_page_menu")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("GtkWidget*" "tab_label")
    '("GtkWidget*" "menu_label")
  )
)

(define-method insert_page
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_insert_page")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("GtkWidget*" "tab_label")
    '("gint" "position")
  )
)

(define-method insert_page_menu
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_insert_page_menu")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("GtkWidget*" "tab_label")
    '("GtkWidget*" "menu_label")
    '("gint" "position")
  )
)

(define-method remove_page
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_remove_page")
  (return-type "none")
  (parameters
    '("gint" "page_num")
  )
)

(define-method get_current_page
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_current_page")
  (return-type "gint")
)

(define-method get_nth_page
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_nth_page")
  (return-type "GtkWidget*")
  (parameters
    '("gint" "page_num")
  )
)

(define-method get_n_pages
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_n_pages")
  (return-type "gint")
)

(define-method page_num
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_page_num")
  (return-type "gint")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method set_current_page
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_current_page")
  (return-type "none")
  (parameters
    '("gint" "page_num")
  )
)

(define-method next_page
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_next_page")
  (return-type "none")
)

(define-method prev_page
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_prev_page")
  (return-type "none")
)

(define-method set_show_border
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_show_border")
  (return-type "none")
  (parameters
    '("gboolean" "show_border")
  )
)

(define-method get_show_border
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_show_border")
  (return-type "gboolean")
)

(define-method set_show_tabs
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_show_tabs")
  (return-type "none")
  (parameters
    '("gboolean" "show_tabs")
  )
)

(define-method get_show_tabs
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_show_tabs")
  (return-type "gboolean")
)

(define-method set_tab_pos
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_tab_pos")
  (return-type "none")
  (parameters
    '("GtkPositionType" "pos")
  )
)

(define-method get_tab_pos
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_tab_pos")
  (return-type "GtkPositionType")
)

(define-method set_homogeneous_tabs
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_homogeneous_tabs")
  (return-type "none")
  (parameters
    '("gboolean" "homogeneous")
  )
)

(define-method set_tab_border
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_tab_border")
  (return-type "none")
  (parameters
    '("guint" "border_width")
  )
)

(define-method set_tab_hborder
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_tab_hborder")
  (return-type "none")
  (parameters
    '("guint" "tab_hborder")
  )
)

(define-method set_tab_vborder
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_tab_vborder")
  (return-type "none")
  (parameters
    '("guint" "tab_vborder")
  )
)

(define-method set_scrollable
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_scrollable")
  (return-type "none")
  (parameters
    '("gboolean" "scrollable")
  )
)

(define-method get_scrollable
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_scrollable")
  (return-type "gboolean")
)

(define-method popup_enable
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_popup_enable")
  (return-type "none")
)

(define-method popup_disable
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_popup_disable")
  (return-type "none")
)

(define-method get_tab_label
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_tab_label")
  (return-type "GtkWidget*")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method set_tab_label
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_tab_label")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("GtkWidget*" "tab_label")
  )
)

(define-method set_tab_label_text
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_tab_label_text")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("const-gchar*" "tab_text")
  )
)

(define-method get_tab_label_text
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_tab_label_text")
  (return-type "const-gchar*")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method get_menu_label
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_menu_label")
  (return-type "GtkWidget*")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method set_menu_label
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_menu_label")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("GtkWidget*" "menu_label")
  )
)

(define-method set_menu_label_text
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_menu_label_text")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("const-gchar*" "menu_text")
  )
)

(define-method get_menu_label_text
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_get_menu_label_text")
  (return-type "const-gchar*")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method query_tab_label_packing
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_query_tab_label_packing")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("gboolean*" "expand")
    '("gboolean*" "fill")
    '("GtkPackType*" "pack_type")
  )
)

(define-method set_tab_label_packing
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_set_tab_label_packing")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("gboolean" "expand")
    '("gboolean" "fill")
    '("GtkPackType" "pack_type")
  )
)

(define-method reorder_child
  (of-object "GtkNotebook")
  (c-name "gtk_notebook_reorder_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("gint" "position")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkobject.h

(define-function gtk_object_get_type
  (c-name "gtk_object_get_type")
  (return-type "GtkType")
)

(define-method sink
  (of-object "GtkObject")
  (c-name "gtk_object_sink")
  (return-type "none")
)

(define-method destroy
  (of-object "GtkObject")
  (c-name "gtk_object_destroy")
  (return-type "none")
)

(define-function gtk_object_new
  (c-name "gtk_object_new")
  (is-constructor-of "GtkObject")
  (return-type "GtkObject*")
  (parameters
    '("GtkType" "type")
    '("const-gchar*" "first_property_name")
  )
  (varargs #t)
)

(define-method ref
  (of-object "GtkObject")
  (c-name "gtk_object_ref")
  (return-type "GtkObject*")
)

(define-method unref
  (of-object "GtkObject")
  (c-name "gtk_object_unref")
  (return-type "none")
)

(define-method weakref
  (of-object "GtkObject")
  (c-name "gtk_object_weakref")
  (return-type "none")
  (parameters
    '("GtkDestroyNotify" "notify")
    '("gpointer" "data")
  )
)

(define-method weakunref
  (of-object "GtkObject")
  (c-name "gtk_object_weakunref")
  (return-type "none")
  (parameters
    '("GtkDestroyNotify" "notify")
    '("gpointer" "data")
  )
)

(define-method set_data
  (of-object "GtkObject")
  (c-name "gtk_object_set_data")
  (return-type "none")
  (parameters
    '("const-gchar*" "key")
    '("gpointer" "data")
  )
)

(define-method set_data_full
  (of-object "GtkObject")
  (c-name "gtk_object_set_data_full")
  (return-type "none")
  (parameters
    '("const-gchar*" "key")
    '("gpointer" "data")
    '("GtkDestroyNotify" "destroy")
  )
)

(define-method remove_data
  (of-object "GtkObject")
  (c-name "gtk_object_remove_data")
  (return-type "none")
  (parameters
    '("const-gchar*" "key")
  )
)

(define-method get_data
  (of-object "GtkObject")
  (c-name "gtk_object_get_data")
  (return-type "gpointer")
  (parameters
    '("const-gchar*" "key")
  )
)

(define-method remove_no_notify
  (of-object "GtkObject")
  (c-name "gtk_object_remove_no_notify")
  (return-type "none")
  (parameters
    '("const-gchar*" "key")
  )
)

(define-method set_user_data
  (of-object "GtkObject")
  (c-name "gtk_object_set_user_data")
  (return-type "none")
  (parameters
    '("gpointer" "data")
  )
)

(define-method get_user_data
  (of-object "GtkObject")
  (c-name "gtk_object_get_user_data")
  (return-type "gpointer")
)

(define-method set_data_by_id
  (of-object "GtkObject")
  (c-name "gtk_object_set_data_by_id")
  (return-type "none")
  (parameters
    '("GQuark" "data_id")
    '("gpointer" "data")
  )
)

(define-method set_data_by_id_full
  (of-object "GtkObject")
  (c-name "gtk_object_set_data_by_id_full")
  (return-type "none")
  (parameters
    '("GQuark" "data_id")
    '("gpointer" "data")
    '("GtkDestroyNotify" "destroy")
  )
)

(define-method get_data_by_id
  (of-object "GtkObject")
  (c-name "gtk_object_get_data_by_id")
  (return-type "gpointer")
  (parameters
    '("GQuark" "data_id")
  )
)

(define-method remove_data_by_id
  (of-object "GtkObject")
  (c-name "gtk_object_remove_data_by_id")
  (return-type "none")
  (parameters
    '("GQuark" "data_id")
  )
)

(define-method remove_no_notify_by_id
  (of-object "GtkObject")
  (c-name "gtk_object_remove_no_notify_by_id")
  (return-type "none")
  (parameters
    '("GQuark" "key_id")
  )
)

(define-method get
  (of-object "GtkObject")
  (c-name "gtk_object_get")
  (return-type "none")
  (parameters
    '("const-gchar*" "first_property_name")
  )
  (varargs #t)
)

(define-method set
  (of-object "GtkObject")
  (c-name "gtk_object_set")
  (return-type "none")
  (parameters
    '("const-gchar*" "first_property_name")
  )
  (varargs #t)
)

(define-function gtk_object_add_arg_type
  (c-name "gtk_object_add_arg_type")
  (return-type "none")
  (parameters
    '("const-gchar*" "arg_name")
    '("GtkType" "arg_type")
    '("guint" "arg_flags")
    '("guint" "arg_id")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkoldeditable.h

(define-function gtk_old_editable_get_type
  (c-name "gtk_old_editable_get_type")
  (return-type "GtkType")
)

(define-method claim_selection
  (of-object "GtkOldEditable")
  (c-name "gtk_old_editable_claim_selection")
  (return-type "none")
  (parameters
    '("gboolean" "claim")
    '("guint32" "time_")
  )
)

(define-method changed
  (of-object "GtkOldEditable")
  (c-name "gtk_old_editable_changed")
  (return-type "none")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkoptionmenu.h

(define-function gtk_option_menu_get_type
  (c-name "gtk_option_menu_get_type")
  (return-type "GType")
)

(define-function gtk_option_menu_new
  (c-name "gtk_option_menu_new")
  (is-constructor-of "GtkOptionMenu")
  (return-type "GtkWidget*")
)

(define-method get_menu
  (of-object "GtkOptionMenu")
  (c-name "gtk_option_menu_get_menu")
  (return-type "GtkWidget*")
)

(define-method set_menu
  (of-object "GtkOptionMenu")
  (c-name "gtk_option_menu_set_menu")
  (return-type "none")
  (parameters
    '("GtkWidget*" "menu")
  )
)

(define-method remove_menu
  (of-object "GtkOptionMenu")
  (c-name "gtk_option_menu_remove_menu")
  (return-type "none")
)

(define-method get_history
  (of-object "GtkOptionMenu")
  (c-name "gtk_option_menu_get_history")
  (return-type "gint")
)

(define-method set_history
  (of-object "GtkOptionMenu")
  (c-name "gtk_option_menu_set_history")
  (return-type "none")
  (parameters
    '("guint" "index_")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkpaned.h

(define-function gtk_paned_get_type
  (c-name "gtk_paned_get_type")
  (return-type "GType")
)

(define-method add1
  (of-object "GtkPaned")
  (c-name "gtk_paned_add1")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method add2
  (of-object "GtkPaned")
  (c-name "gtk_paned_add2")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method pack1
  (of-object "GtkPaned")
  (c-name "gtk_paned_pack1")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("gboolean" "resize")
    '("gboolean" "shrink")
  )
)

(define-method pack2
  (of-object "GtkPaned")
  (c-name "gtk_paned_pack2")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("gboolean" "resize")
    '("gboolean" "shrink")
  )
)

(define-method get_position
  (of-object "GtkPaned")
  (c-name "gtk_paned_get_position")
  (return-type "gint")
)

(define-method set_position
  (of-object "GtkPaned")
  (c-name "gtk_paned_set_position")
  (return-type "none")
  (parameters
    '("gint" "position")
  )
)

(define-method compute_position
  (of-object "GtkPaned")
  (c-name "gtk_paned_compute_position")
  (return-type "none")
  (parameters
    '("gint" "allocation")
    '("gint" "child1_req")
    '("gint" "child2_req")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkpixmap.h

(define-function gtk_pixmap_get_type
  (c-name "gtk_pixmap_get_type")
  (return-type "GtkType")
)

(define-function gtk_pixmap_new
  (c-name "gtk_pixmap_new")
  (is-constructor-of "GtkPixmap")
  (return-type "GtkWidget*")
  (parameters
    '("GdkPixmap*" "pixmap")
    '("GdkBitmap*" "mask")
  )
)

(define-method set
  (of-object "GtkPixmap")
  (c-name "gtk_pixmap_set")
  (return-type "none")
  (parameters
    '("GdkPixmap*" "val")
    '("GdkBitmap*" "mask")
  )
)

(define-method get
  (of-object "GtkPixmap")
  (c-name "gtk_pixmap_get")
  (return-type "none")
  (parameters
    '("GdkPixmap**" "val")
    '("GdkBitmap**" "mask")
  )
)

(define-method set_build_insensitive
  (of-object "GtkPixmap")
  (c-name "gtk_pixmap_set_build_insensitive")
  (return-type "none")
  (parameters
    '("gboolean" "build")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkplug.h

(define-function gtk_plug_get_type
  (c-name "gtk_plug_get_type")
  (return-type "GType")
)

(define-method construct
  (of-object "GtkPlug")
  (c-name "gtk_plug_construct")
  (return-type "none")
  (parameters
    '("GdkNativeWindow" "socket_id")
  )
)

(define-function gtk_plug_new
  (c-name "gtk_plug_new")
  (is-constructor-of "GtkPlug")
  (return-type "GtkWidget*")
  (parameters
    '("GdkNativeWindow" "socket_id")
  )
)

(define-method construct_for_display
  (of-object "GtkPlug")
  (c-name "gtk_plug_construct_for_display")
  (return-type "none")
  (parameters
    '("GdkDisplay*" "display")
    '("GdkNativeWindow" "socket_id")
  )
)

(define-function gtk_plug_new_for_display
  (c-name "gtk_plug_new_for_display")
  (return-type "GtkWidget*")
  (parameters
    '("GdkDisplay*" "display")
    '("GdkNativeWindow" "socket_id")
  )
)

(define-method get_id
  (of-object "GtkPlug")
  (c-name "gtk_plug_get_id")
  (return-type "GdkNativeWindow")
)

(define-method _add_to_socket
  (of-object "GtkPlug")
  (c-name "_gtk_plug_add_to_socket")
  (return-type "none")
  (parameters
    '("GtkSocket*" "socket_")
  )
)

(define-method _remove_from_socket
  (of-object "GtkPlug")
  (c-name "_gtk_plug_remove_from_socket")
  (return-type "none")
  (parameters
    '("GtkSocket*" "socket_")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkpreview.h

(define-function gtk_preview_get_type
  (c-name "gtk_preview_get_type")
  (return-type "GtkType")
)

(define-function gtk_preview_uninit
  (c-name "gtk_preview_uninit")
  (return-type "none")
)

(define-function gtk_preview_new
  (c-name "gtk_preview_new")
  (is-constructor-of "GtkPreview")
  (return-type "GtkWidget*")
  (parameters
    '("GtkPreviewType" "type")
  )
)

(define-method size
  (of-object "GtkPreview")
  (c-name "gtk_preview_size")
  (return-type "none")
  (parameters
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method put
  (of-object "GtkPreview")
  (c-name "gtk_preview_put")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window")
    '("GdkGC*" "gc")
    '("gint" "srcx")
    '("gint" "srcy")
    '("gint" "destx")
    '("gint" "desty")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method draw_row
  (of-object "GtkPreview")
  (c-name "gtk_preview_draw_row")
  (return-type "none")
  (parameters
    '("guchar*" "data")
    '("gint" "x")
    '("gint" "y")
    '("gint" "w")
  )
)

(define-method set_expand
  (of-object "GtkPreview")
  (c-name "gtk_preview_set_expand")
  (return-type "none")
  (parameters
    '("gboolean" "expand")
  )
)

(define-function gtk_preview_set_gamma
  (c-name "gtk_preview_set_gamma")
  (return-type "none")
  (parameters
    '("double" "gamma_")
  )
)

(define-function gtk_preview_set_color_cube
  (c-name "gtk_preview_set_color_cube")
  (return-type "none")
  (parameters
    '("guint" "nred_shades")
    '("guint" "ngreen_shades")
    '("guint" "nblue_shades")
    '("guint" "ngray_shades")
  )
)

(define-function gtk_preview_set_install_cmap
  (c-name "gtk_preview_set_install_cmap")
  (return-type "none")
  (parameters
    '("gint" "install_cmap")
  )
)

(define-function gtk_preview_set_reserved
  (c-name "gtk_preview_set_reserved")
  (return-type "none")
  (parameters
    '("gint" "nreserved")
  )
)

(define-method set_dither
  (of-object "GtkPreview")
  (c-name "gtk_preview_set_dither")
  (return-type "none")
  (parameters
    '("GdkRgbDither" "dither")
  )
)

(define-function gtk_preview_get_visual
  (c-name "gtk_preview_get_visual")
  (return-type "GdkVisual*")
)

(define-function gtk_preview_get_cmap
  (c-name "gtk_preview_get_cmap")
  (return-type "GdkColormap*")
)

(define-function gtk_preview_get_info
  (c-name "gtk_preview_get_info")
  (return-type "GtkPreviewInfo*")
)

(define-function gtk_preview_reset
  (c-name "gtk_preview_reset")
  (return-type "none")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkprivate.h

(define-function _gtk_get_sysconfdir
  (c-name "_gtk_get_sysconfdir")
  (return-type "const-gchar*")
  (parameters
  )
)

(define-function _gtk_get_localedir
  (c-name "_gtk_get_localedir")
  (return-type "const-gchar*")
  (parameters
  )
)

(define-function _gtk_get_data_prefix
  (c-name "_gtk_get_data_prefix")
  (return-type "const-gchar*")
  (parameters
  )
)

(define-function _gtk_fnmatch
  (c-name "_gtk_fnmatch")
  (return-type "gboolean")
  (parameters
    '("const-char*" "pattern")
    '("const-char*" "string")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkprogressbar.h

(define-function gtk_progress_bar_get_type
  (c-name "gtk_progress_bar_get_type")
  (return-type "GType")
)

(define-function gtk_progress_bar_new
  (c-name "gtk_progress_bar_new")
  (is-constructor-of "GtkProgressBar")
  (return-type "GtkWidget*")
)

(define-method pulse
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_pulse")
  (return-type "none")
)

(define-method set_text
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_set_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "text")
  )
)

(define-method set_fraction
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_set_fraction")
  (return-type "none")
  (parameters
    '("gdouble" "fraction")
  )
)

(define-method set_pulse_step
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_set_pulse_step")
  (return-type "none")
  (parameters
    '("gdouble" "fraction")
  )
)

(define-method set_orientation
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_set_orientation")
  (return-type "none")
  (parameters
    '("GtkProgressBarOrientation" "orientation")
  )
)

(define-method get_text
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_get_text")
  (return-type "const-gchar*")
)

(define-method get_fraction
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_get_fraction")
  (return-type "gdouble")
)

(define-method get_pulse_step
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_get_pulse_step")
  (return-type "gdouble")
)

(define-method get_orientation
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_get_orientation")
  (return-type "GtkProgressBarOrientation")
)

(define-function gtk_progress_bar_new_with_adjustment
  (c-name "gtk_progress_bar_new_with_adjustment")
  (return-type "GtkWidget*")
  (parameters
    '("GtkAdjustment*" "adjustment")
  )
)

(define-method set_bar_style
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_set_bar_style")
  (return-type "none")
  (parameters
    '("GtkProgressBarStyle" "style")
  )
)

(define-method set_discrete_blocks
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_set_discrete_blocks")
  (return-type "none")
  (parameters
    '("guint" "blocks")
  )
)

(define-method set_activity_step
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_set_activity_step")
  (return-type "none")
  (parameters
    '("guint" "step")
  )
)

(define-method set_activity_blocks
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_set_activity_blocks")
  (return-type "none")
  (parameters
    '("guint" "blocks")
  )
)

(define-method update
  (of-object "GtkProgressBar")
  (c-name "gtk_progress_bar_update")
  (return-type "none")
  (parameters
    '("gdouble" "percentage")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkprogress.h

(define-function gtk_progress_get_type
  (c-name "gtk_progress_get_type")
  (return-type "GType")
)

(define-method set_show_text
  (of-object "GtkProgress")
  (c-name "gtk_progress_set_show_text")
  (return-type "none")
  (parameters
    '("gboolean" "show_text")
  )
)

(define-method set_text_alignment
  (of-object "GtkProgress")
  (c-name "gtk_progress_set_text_alignment")
  (return-type "none")
  (parameters
    '("gfloat" "x_align")
    '("gfloat" "y_align")
  )
)

(define-method set_format_string
  (of-object "GtkProgress")
  (c-name "gtk_progress_set_format_string")
  (return-type "none")
  (parameters
    '("const-gchar*" "format")
  )
)

(define-method set_adjustment
  (of-object "GtkProgress")
  (c-name "gtk_progress_set_adjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment")
  )
)

(define-method configure
  (of-object "GtkProgress")
  (c-name "gtk_progress_configure")
  (return-type "none")
  (parameters
    '("gdouble" "value")
    '("gdouble" "min")
    '("gdouble" "max")
  )
)

(define-method set_percentage
  (of-object "GtkProgress")
  (c-name "gtk_progress_set_percentage")
  (return-type "none")
  (parameters
    '("gdouble" "percentage")
  )
)

(define-method set_value
  (of-object "GtkProgress")
  (c-name "gtk_progress_set_value")
  (return-type "none")
  (parameters
    '("gdouble" "value")
  )
)

(define-method get_value
  (of-object "GtkProgress")
  (c-name "gtk_progress_get_value")
  (return-type "gdouble")
)

(define-method set_activity_mode
  (of-object "GtkProgress")
  (c-name "gtk_progress_set_activity_mode")
  (return-type "none")
  (parameters
    '("gboolean" "activity_mode")
  )
)

(define-method get_current_text
  (of-object "GtkProgress")
  (c-name "gtk_progress_get_current_text")
  (return-type "gchar*")
)

(define-method get_text_from_value
  (of-object "GtkProgress")
  (c-name "gtk_progress_get_text_from_value")
  (return-type "gchar*")
  (parameters
    '("gdouble" "value")
  )
)

(define-method get_current_percentage
  (of-object "GtkProgress")
  (c-name "gtk_progress_get_current_percentage")
  (return-type "gdouble")
)

(define-method get_percentage_from_value
  (of-object "GtkProgress")
  (c-name "gtk_progress_get_percentage_from_value")
  (return-type "gdouble")
  (parameters
    '("gdouble" "value")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkradioaction.h

(define-function gtk_radio_action_get_type
  (c-name "gtk_radio_action_get_type")
  (return-type "GType")
)

(define-method get_group
  (of-object "GtkRadioAction")
  (c-name "gtk_radio_action_get_group")
  (return-type "GSList*")
)

(define-method set_group
  (of-object "GtkRadioAction")
  (c-name "gtk_radio_action_set_group")
  (return-type "none")
  (parameters
    '("GSList*" "group")
  )
)

(define-method get_current_value
  (of-object "GtkRadioAction")
  (c-name "gtk_radio_action_get_current_value")
  (return-type "gint")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkradiobutton.h

(define-function gtk_radio_button_get_type
  (c-name "gtk_radio_button_get_type")
  (return-type "GType")
)

(define-function gtk_radio_button_new
  (c-name "gtk_radio_button_new")
  (is-constructor-of "GtkRadioButton")
  (return-type "GtkWidget*")
  (parameters
    '("GSList*" "group")
  )
)

(define-method new_from_widget
  (of-object "GtkRadioButton")
  (c-name "gtk_radio_button_new_from_widget")
  (return-type "GtkWidget*")
)

(define-function gtk_radio_button_new_with_label
  (c-name "gtk_radio_button_new_with_label")
  (return-type "GtkWidget*")
  (parameters
    '("GSList*" "group")
    '("const-gchar*" "label")
  )
)

(define-method new_with_label_from_widget
  (of-object "GtkRadioButton")
  (c-name "gtk_radio_button_new_with_label_from_widget")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "label")
  )
)

(define-function gtk_radio_button_new_with_mnemonic
  (c-name "gtk_radio_button_new_with_mnemonic")
  (return-type "GtkWidget*")
  (parameters
    '("GSList*" "group")
    '("const-gchar*" "label")
  )
)

(define-method new_with_mnemonic_from_widget
  (of-object "GtkRadioButton")
  (c-name "gtk_radio_button_new_with_mnemonic_from_widget")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "label")
  )
)

(define-method get_group
  (of-object "GtkRadioButton")
  (c-name "gtk_radio_button_get_group")
  (return-type "GSList*")
)

(define-method set_group
  (of-object "GtkRadioButton")
  (c-name "gtk_radio_button_set_group")
  (return-type "none")
  (parameters
    '("GSList*" "group")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkradiomenuitem.h

(define-function gtk_radio_menu_item_get_type
  (c-name "gtk_radio_menu_item_get_type")
  (return-type "GType")
)

(define-function gtk_radio_menu_item_new
  (c-name "gtk_radio_menu_item_new")
  (is-constructor-of "GtkRadioMenuItem")
  (return-type "GtkWidget*")
  (parameters
    '("GSList*" "group")
  )
)

(define-function gtk_radio_menu_item_new_with_label
  (c-name "gtk_radio_menu_item_new_with_label")
  (return-type "GtkWidget*")
  (parameters
    '("GSList*" "group")
    '("const-gchar*" "label")
  )
)

(define-function gtk_radio_menu_item_new_with_mnemonic
  (c-name "gtk_radio_menu_item_new_with_mnemonic")
  (return-type "GtkWidget*")
  (parameters
    '("GSList*" "group")
    '("const-gchar*" "label")
  )
)

(define-method get_group
  (of-object "GtkRadioMenuItem")
  (c-name "gtk_radio_menu_item_get_group")
  (return-type "GSList*")
)

(define-method set_group
  (of-object "GtkRadioMenuItem")
  (c-name "gtk_radio_menu_item_set_group")
  (return-type "none")
  (parameters
    '("GSList*" "group")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkradiotoolbutton.h

(define-function gtk_radio_tool_button_get_type
  (c-name "gtk_radio_tool_button_get_type")
  (return-type "GType")
)

(define-function gtk_radio_tool_button_new
  (c-name "gtk_radio_tool_button_new")
  (is-constructor-of "GtkRadioToolButton")
  (return-type "GtkToolItem*")
  (parameters
    '("GSList*" "group")
  )
)

(define-function gtk_radio_tool_button_new_from_stock
  (c-name "gtk_radio_tool_button_new_from_stock")
  (return-type "GtkToolItem*")
  (parameters
    '("GSList*" "group")
    '("const-gchar*" "stock_id")
  )
)

(define-function gtk_radio_tool_button_new_from_widget
  (c-name "gtk_radio_tool_button_new_from_widget")
  (return-type "GtkToolItem*")
  (parameters
    '("GtkWidget*" "group")
  )
)

(define-function gtk_radio_tool_button_new_with_stock_from_widget
  (c-name "gtk_radio_tool_button_new_with_stock_from_widget")
  (return-type "GtkToolItem*")
  (parameters
    '("GtkWidget*" "group")
    '("const-gchar*" "stock_id")
  )
)

(define-method get_group
  (of-object "GtkRadioToolButton")
  (c-name "gtk_radio_tool_button_get_group")
  (return-type "GSList*")
)

(define-method set_group
  (of-object "GtkRadioToolButton")
  (c-name "gtk_radio_tool_button_set_group")
  (return-type "none")
  (parameters
    '("GSList*" "group")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkrange.h

(define-function gtk_range_get_type
  (c-name "gtk_range_get_type")
  (return-type "GType")
)

(define-method set_update_policy
  (of-object "GtkRange")
  (c-name "gtk_range_set_update_policy")
  (return-type "none")
  (parameters
    '("GtkUpdateType" "policy")
  )
)

(define-method get_update_policy
  (of-object "GtkRange")
  (c-name "gtk_range_get_update_policy")
  (return-type "GtkUpdateType")
)

(define-method set_adjustment
  (of-object "GtkRange")
  (c-name "gtk_range_set_adjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment")
  )
)

(define-method get_adjustment
  (of-object "GtkRange")
  (c-name "gtk_range_get_adjustment")
  (return-type "GtkAdjustment*")
)

(define-method set_inverted
  (of-object "GtkRange")
  (c-name "gtk_range_set_inverted")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_inverted
  (of-object "GtkRange")
  (c-name "gtk_range_get_inverted")
  (return-type "gboolean")
)

(define-method set_increments
  (of-object "GtkRange")
  (c-name "gtk_range_set_increments")
  (return-type "none")
  (parameters
    '("gdouble" "step")
    '("gdouble" "page")
  )
)

(define-method set_range
  (of-object "GtkRange")
  (c-name "gtk_range_set_range")
  (return-type "none")
  (parameters
    '("gdouble" "min")
    '("gdouble" "max")
  )
)

(define-method set_value
  (of-object "GtkRange")
  (c-name "gtk_range_set_value")
  (return-type "none")
  (parameters
    '("gdouble" "value")
  )
)

(define-method get_value
  (of-object "GtkRange")
  (c-name "gtk_range_get_value")
  (return-type "gdouble")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkrbtree.h

(define-function _gtk_rbtree_push_allocator
  (c-name "_gtk_rbtree_push_allocator")
  (return-type "none")
  (parameters
    '("GAllocator*" "allocator")
  )
)

(define-function _gtk_rbtree_pop_allocator
  (c-name "_gtk_rbtree_pop_allocator")
  (return-type "none")
)

(define-function _gtk_rbtree_new
  (c-name "_gtk_rbtree_new")
  (is-constructor-of "GtkRbtree")
  (return-type "GtkRBTree*")
)

(define-method _free
  (of-object "GtkRBTree")
  (c-name "_gtk_rbtree_free")
  (return-type "none")
)

(define-method _remove
  (of-object "GtkRBTree")
  (c-name "_gtk_rbtree_remove")
  (return-type "none")
)

(define-method _destroy
  (of-object "GtkRBTree")
  (c-name "_gtk_rbtree_destroy")
  (return-type "none")
)

(define-method _insert_before
  (of-object "GtkRBTree")
  (c-name "_gtk_rbtree_insert_before")
  (return-type "GtkRBNode*")
  (parameters
    '("GtkRBNode*" "node")
    '("gint" "height")
    '("gboolean" "valid")
  )
)

(define-method _insert_after
  (of-object "GtkRBTree")
  (c-name "_gtk_rbtree_insert_after")
  (return-type "GtkRBNode*")
  (parameters
    '("GtkRBNode*" "node")
    '("gint" "height")
    '("gboolean" "valid")
  )
)

(define-method _remove_node
  (of-object "GtkRBTree")
  (c-name "_gtk_rbtree_remove_node")
  (return-type "none")
  (parameters
    '("GtkRBNode*" "node")
  )
)

(define-method _reorder
  (of-object "GtkRBTree")
  (c-name "_gtk_rbtree_reorder")
  (return-type "none")
  (parameters
    '("gint*" "new_order")
    '("gint" "length")
  )
)

(define-method _find_count
  (of-object "GtkRBTree")
  (c-name "_gtk_rbtree_find_count")
  (return-type "GtkRBNode*")
  (parameters
    '("gint" "count")
  )
)

(define-method _node_set_height
  (of-object "GtkRBTree")
  (c-name "_gtk_rbtree_node_set_height")
  (return-type "none")
  (parameters
    '("GtkRBNode*" "node")
    '("gint" "height")
  )
)

(define-method _node_mark_invalid
  (of-object "GtkRBTree")
  (c-name "_gtk_rbtree_node_mark_invalid")
  (return-type "none")
  (parameters
    '("GtkRBNode*" "node")
  )
)

(define-method _node_mark_valid
  (of-object "GtkRBTree")
  (c-name "_gtk_rbtree_node_mark_valid")
  (return-type "none")
  (parameters
    '("GtkRBNode*" "node")
  )
)

(define-method _column_invalid
  (of-object "GtkRBTree")
  (c-name "_gtk_rbtree_column_invalid")
  (return-type "none")
)

(define-method _mark_invalid
  (of-object "GtkRBTree")
  (c-name "_gtk_rbtree_mark_invalid")
  (return-type "none")
)

(define-method _set_fixed_height
  (of-object "GtkRBTree")
  (c-name "_gtk_rbtree_set_fixed_height")
  (return-type "none")
  (parameters
    '("gint" "height")
  )
)

(define-method _node_find_offset
  (of-object "GtkRBTree")
  (c-name "_gtk_rbtree_node_find_offset")
  (return-type "gint")
  (parameters
    '("GtkRBNode*" "node")
  )
)

(define-method _node_find_parity
  (of-object "GtkRBTree")
  (c-name "_gtk_rbtree_node_find_parity")
  (return-type "gint")
  (parameters
    '("GtkRBNode*" "node")
  )
)

(define-method _find_offset
  (of-object "GtkRBTree")
  (c-name "_gtk_rbtree_find_offset")
  (return-type "gint")
  (parameters
    '("gint" "offset")
    '("GtkRBTree**" "new_tree")
    '("GtkRBNode**" "new_node")
  )
)

(define-method _traverse
  (of-object "GtkRBTree")
  (c-name "_gtk_rbtree_traverse")
  (return-type "none")
  (parameters
    '("GtkRBNode*" "node")
    '("GTraverseType" "order")
    '("GtkRBTreeTraverseFunc" "func")
    '("gpointer" "data")
  )
)

(define-method _next
  (of-object "GtkRBTree")
  (c-name "_gtk_rbtree_next")
  (return-type "GtkRBNode*")
  (parameters
    '("GtkRBNode*" "node")
  )
)

(define-method _prev
  (of-object "GtkRBTree")
  (c-name "_gtk_rbtree_prev")
  (return-type "GtkRBNode*")
  (parameters
    '("GtkRBNode*" "node")
  )
)

(define-method _next_full
  (of-object "GtkRBTree")
  (c-name "_gtk_rbtree_next_full")
  (return-type "none")
  (parameters
    '("GtkRBNode*" "node")
    '("GtkRBTree**" "new_tree")
    '("GtkRBNode**" "new_node")
  )
)

(define-method _prev_full
  (of-object "GtkRBTree")
  (c-name "_gtk_rbtree_prev_full")
  (return-type "none")
  (parameters
    '("GtkRBNode*" "node")
    '("GtkRBTree**" "new_tree")
    '("GtkRBNode**" "new_node")
  )
)

(define-method _get_depth
  (of-object "GtkRBTree")
  (c-name "_gtk_rbtree_get_depth")
  (return-type "gint")
)

(define-function _gtk_rbtree_test
  (c-name "_gtk_rbtree_test")
  (return-type "none")
  (parameters
    '("const-gchar*" "where")
    '("GtkRBTree*" "tree")
  )
)

(define-method _debug_spew
  (of-object "GtkRBTree")
  (c-name "_gtk_rbtree_debug_spew")
  (return-type "none")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkrc.h

(define-function _gtk_rc_init
  (c-name "_gtk_rc_init")
  (return-type "none")
)

(define-function gtk_rc_add_default_file
  (c-name "gtk_rc_add_default_file")
  (return-type "none")
  (parameters
    '("const-gchar*" "filename")
  )
)

(define-function gtk_rc_set_default_files
  (c-name "gtk_rc_set_default_files")
  (return-type "none")
  (parameters
    '("gchar**" "filenames")
  )
)

(define-function gtk_rc_get_default_files
  (c-name "gtk_rc_get_default_files")
  (return-type "gchar**")
)

(define-function gtk_rc_get_style
  (c-name "gtk_rc_get_style")
  (return-type "GtkStyle*")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-function gtk_rc_get_style_by_paths
  (c-name "gtk_rc_get_style_by_paths")
  (return-type "GtkStyle*")
  (parameters
    '("GtkSettings*" "settings")
    '("const-char*" "widget_path")
    '("const-char*" "class_path")
    '("GType" "type")
  )
)

(define-function gtk_rc_reparse_all_for_settings
  (c-name "gtk_rc_reparse_all_for_settings")
  (return-type "gboolean")
  (parameters
    '("GtkSettings*" "settings")
    '("gboolean" "force_load")
  )
)

(define-function gtk_rc_find_pixmap_in_path
  (c-name "gtk_rc_find_pixmap_in_path")
  (return-type "gchar*")
  (parameters
    '("GtkSettings*" "settings")
    '("GScanner*" "scanner")
    '("const-gchar*" "pixmap_file")
  )
)

(define-function gtk_rc_parse
  (c-name "gtk_rc_parse")
  (return-type "none")
  (parameters
    '("const-gchar*" "filename")
  )
)

(define-function gtk_rc_parse_string
  (c-name "gtk_rc_parse_string")
  (return-type "none")
  (parameters
    '("const-gchar*" "rc_string")
  )
)

(define-function gtk_rc_reparse_all
  (c-name "gtk_rc_reparse_all")
  (return-type "gboolean")
)

(define-function gtk_rc_add_widget_name_style
  (c-name "gtk_rc_add_widget_name_style")
  (return-type "none")
  (parameters
    '("GtkRcStyle*" "rc_style")
    '("const-gchar*" "pattern")
  )
)

(define-function gtk_rc_add_widget_class_style
  (c-name "gtk_rc_add_widget_class_style")
  (return-type "none")
  (parameters
    '("GtkRcStyle*" "rc_style")
    '("const-gchar*" "pattern")
  )
)

(define-function gtk_rc_add_class_style
  (c-name "gtk_rc_add_class_style")
  (return-type "none")
  (parameters
    '("GtkRcStyle*" "rc_style")
    '("const-gchar*" "pattern")
  )
)

(define-function gtk_rc_style_get_type
  (c-name "gtk_rc_style_get_type")
  (return-type "GType")
)

(define-function gtk_rc_style_new
  (c-name "gtk_rc_style_new")
  (is-constructor-of "GtkRcStyle")
  (return-type "GtkRcStyle*")
)

(define-method copy
  (of-object "GtkRcStyle")
  (c-name "gtk_rc_style_copy")
  (return-type "GtkRcStyle*")
)

(define-method ref
  (of-object "GtkRcStyle")
  (c-name "gtk_rc_style_ref")
  (return-type "none")
)

(define-method unref
  (of-object "GtkRcStyle")
  (c-name "gtk_rc_style_unref")
  (return-type "none")
)

(define-function gtk_rc_find_module_in_path
  (c-name "gtk_rc_find_module_in_path")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "module_file")
  )
)

(define-function gtk_rc_get_theme_dir
  (c-name "gtk_rc_get_theme_dir")
  (return-type "gchar*")
)

(define-function gtk_rc_get_module_dir
  (c-name "gtk_rc_get_module_dir")
  (return-type "gchar*")
)

(define-function gtk_rc_get_im_module_path
  (c-name "gtk_rc_get_im_module_path")
  (return-type "gchar*")
)

(define-function gtk_rc_get_im_module_file
  (c-name "gtk_rc_get_im_module_file")
  (return-type "gchar*")
)

(define-function gtk_rc_scanner_new
  (c-name "gtk_rc_scanner_new")
  (is-constructor-of "GtkRcScanner")
  (return-type "GScanner*")
)

(define-function gtk_rc_parse_color
  (c-name "gtk_rc_parse_color")
  (return-type "guint")
  (parameters
    '("GScanner*" "scanner")
    '("GdkColor*" "color")
  )
)

(define-function gtk_rc_parse_state
  (c-name "gtk_rc_parse_state")
  (return-type "guint")
  (parameters
    '("GScanner*" "scanner")
    '("GtkStateType*" "state")
  )
)

(define-function gtk_rc_parse_priority
  (c-name "gtk_rc_parse_priority")
  (return-type "guint")
  (parameters
    '("GScanner*" "scanner")
    '("GtkPathPriorityType*" "priority")
  )
)

(define-method _lookup_rc_property
  (of-object "GtkRcStyle")
  (c-name "_gtk_rc_style_lookup_rc_property")
  (return-type "const-GtkRcProperty*")
  (parameters
    '("GQuark" "type_name")
    '("GQuark" "property_name")
  )
)

(define-function _gtk_rc_context_get_default_font_name
  (c-name "_gtk_rc_context_get_default_font_name")
  (return-type "const-gchar*")
  (parameters
    '("GtkSettings*" "settings")
  )
)

(define-function _gtk_rc_reset_styles
  (c-name "_gtk_rc_reset_styles")
  (return-type "none")
  (parameters
    '("GtkSettings*" "settings")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkruler.h

(define-function gtk_ruler_get_type
  (c-name "gtk_ruler_get_type")
  (return-type "GType")
)

(define-method set_metric
  (of-object "GtkRuler")
  (c-name "gtk_ruler_set_metric")
  (return-type "none")
  (parameters
    '("GtkMetricType" "metric")
  )
)

(define-method set_range
  (of-object "GtkRuler")
  (c-name "gtk_ruler_set_range")
  (return-type "none")
  (parameters
    '("gdouble" "lower")
    '("gdouble" "upper")
    '("gdouble" "position")
    '("gdouble" "max_size")
  )
)

(define-method draw_ticks
  (of-object "GtkRuler")
  (c-name "gtk_ruler_draw_ticks")
  (return-type "none")
)

(define-method draw_pos
  (of-object "GtkRuler")
  (c-name "gtk_ruler_draw_pos")
  (return-type "none")
)

(define-method get_metric
  (of-object "GtkRuler")
  (c-name "gtk_ruler_get_metric")
  (return-type "GtkMetricType")
)

(define-method get_range
  (of-object "GtkRuler")
  (c-name "gtk_ruler_get_range")
  (return-type "none")
  (parameters
    '("gdouble*" "lower")
    '("gdouble*" "upper")
    '("gdouble*" "position")
    '("gdouble*" "max_size")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkscale.h

(define-function gtk_scale_get_type
  (c-name "gtk_scale_get_type")
  (return-type "GType")
)

(define-method set_digits
  (of-object "GtkScale")
  (c-name "gtk_scale_set_digits")
  (return-type "none")
  (parameters
    '("gint" "digits")
  )
)

(define-method get_digits
  (of-object "GtkScale")
  (c-name "gtk_scale_get_digits")
  (return-type "gint")
)

(define-method set_draw_value
  (of-object "GtkScale")
  (c-name "gtk_scale_set_draw_value")
  (return-type "none")
  (parameters
    '("gboolean" "draw_value")
  )
)

(define-method get_draw_value
  (of-object "GtkScale")
  (c-name "gtk_scale_get_draw_value")
  (return-type "gboolean")
)

(define-method set_value_pos
  (of-object "GtkScale")
  (c-name "gtk_scale_set_value_pos")
  (return-type "none")
  (parameters
    '("GtkPositionType" "pos")
  )
)

(define-method get_value_pos
  (of-object "GtkScale")
  (c-name "gtk_scale_get_value_pos")
  (return-type "GtkPositionType")
)

(define-method _get_value_size
  (of-object "GtkScale")
  (c-name "_gtk_scale_get_value_size")
  (return-type "none")
  (parameters
    '("gint*" "width")
    '("gint*" "height")
  )
)

(define-method _format_value
  (of-object "GtkScale")
  (c-name "_gtk_scale_format_value")
  (return-type "gchar*")
  (parameters
    '("gdouble" "value")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkscrollbar.h

(define-function gtk_scrollbar_get_type
  (c-name "gtk_scrollbar_get_type")
  (return-type "GType")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkscrolledwindow.h

(define-function gtk_scrolled_window_get_type
  (c-name "gtk_scrolled_window_get_type")
  (return-type "GType")
)

(define-function gtk_scrolled_window_new
  (c-name "gtk_scrolled_window_new")
  (is-constructor-of "GtkScrolledWindow")
  (return-type "GtkWidget*")
  (parameters
    '("GtkAdjustment*" "hadjustment")
    '("GtkAdjustment*" "vadjustment")
  )
)

(define-method set_hadjustment
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_set_hadjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "hadjustment")
  )
)

(define-method set_vadjustment
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_set_vadjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "hadjustment")
  )
)

(define-method get_hadjustment
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_get_hadjustment")
  (return-type "GtkAdjustment*")
)

(define-method get_vadjustment
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_get_vadjustment")
  (return-type "GtkAdjustment*")
)

(define-method set_policy
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_set_policy")
  (return-type "none")
  (parameters
    '("GtkPolicyType" "hscrollbar_policy")
    '("GtkPolicyType" "vscrollbar_policy")
  )
)

(define-method get_policy
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_get_policy")
  (return-type "none")
  (parameters
    '("GtkPolicyType*" "hscrollbar_policy")
    '("GtkPolicyType*" "vscrollbar_policy")
  )
)

(define-method set_placement
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_set_placement")
  (return-type "none")
  (parameters
    '("GtkCornerType" "window_placement")
  )
)

(define-method get_placement
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_get_placement")
  (return-type "GtkCornerType")
)

(define-method set_shadow_type
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_set_shadow_type")
  (return-type "none")
  (parameters
    '("GtkShadowType" "type")
  )
)

(define-method get_shadow_type
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_get_shadow_type")
  (return-type "GtkShadowType")
)

(define-method add_with_viewport
  (of-object "GtkScrolledWindow")
  (c-name "gtk_scrolled_window_add_with_viewport")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method _get_scrollbar_spacing
  (of-object "GtkScrolledWindow")
  (c-name "_gtk_scrolled_window_get_scrollbar_spacing")
  (return-type "gint")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkselection.h

(define-function gtk_target_list_new
  (c-name "gtk_target_list_new")
  (is-constructor-of "GtkTargetList")
  (return-type "GtkTargetList*")
  (parameters
    '("const-GtkTargetEntry*" "targets")
    '("guint" "ntargets")
  )
)

(define-method ref
  (of-object "GtkTargetList")
  (c-name "gtk_target_list_ref")
  (return-type "none")
)

(define-method unref
  (of-object "GtkTargetList")
  (c-name "gtk_target_list_unref")
  (return-type "none")
)

(define-method add
  (of-object "GtkTargetList")
  (c-name "gtk_target_list_add")
  (return-type "none")
  (parameters
    '("GdkAtom" "target")
    '("guint" "flags")
    '("guint" "info")
  )
)

(define-method add_table
  (of-object "GtkTargetList")
  (c-name "gtk_target_list_add_table")
  (return-type "none")
  (parameters
    '("const-GtkTargetEntry*" "targets")
    '("guint" "ntargets")
  )
)

(define-method remove
  (of-object "GtkTargetList")
  (c-name "gtk_target_list_remove")
  (return-type "none")
  (parameters
    '("GdkAtom" "target")
  )
)

(define-method find
  (of-object "GtkTargetList")
  (c-name "gtk_target_list_find")
  (return-type "gboolean")
  (parameters
    '("GdkAtom" "target")
    '("guint*" "info")
  )
)

(define-function gtk_selection_owner_set
  (c-name "gtk_selection_owner_set")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "widget")
    '("GdkAtom" "selection")
    '("guint32" "time_")
  )
)

(define-function gtk_selection_owner_set_for_display
  (c-name "gtk_selection_owner_set_for_display")
  (return-type "gboolean")
  (parameters
    '("GdkDisplay*" "display")
    '("GtkWidget*" "widget")
    '("GdkAtom" "selection")
    '("guint32" "time_")
  )
)

(define-function gtk_selection_add_target
  (c-name "gtk_selection_add_target")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("GdkAtom" "selection")
    '("GdkAtom" "target")
    '("guint" "info")
  )
)

(define-function gtk_selection_add_targets
  (c-name "gtk_selection_add_targets")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("GdkAtom" "selection")
    '("const-GtkTargetEntry*" "targets")
    '("guint" "ntargets")
  )
)

(define-function gtk_selection_clear_targets
  (c-name "gtk_selection_clear_targets")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("GdkAtom" "selection")
  )
)

(define-function gtk_selection_convert
  (c-name "gtk_selection_convert")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "widget")
    '("GdkAtom" "selection")
    '("GdkAtom" "target")
    '("guint32" "time_")
  )
)

(define-method set
  (of-object "GtkSelectionData")
  (c-name "gtk_selection_data_set")
  (return-type "none")
  (parameters
    '("GdkAtom" "type")
    '("gint" "format")
    '("const-guchar*" "data")
    '("gint" "length")
  )
)

(define-method set_text
  (of-object "GtkSelectionData")
  (c-name "gtk_selection_data_set_text")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "str")
    '("gint" "len")
  )
)

(define-method get_text
  (of-object "GtkSelectionData")
  (c-name "gtk_selection_data_get_text")
  (return-type "guchar*")
)

(define-method get_targets
  (of-object "GtkSelectionData")
  (c-name "gtk_selection_data_get_targets")
  (return-type "gboolean")
  (parameters
    '("GdkAtom**" "targets")
    '("gint*" "n_atoms")
  )
)

(define-method targets_include_text
  (of-object "GtkSelectionData")
  (c-name "gtk_selection_data_targets_include_text")
  (return-type "gboolean")
)

(define-function gtk_selection_remove_all
  (c-name "gtk_selection_remove_all")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-function gtk_selection_clear
  (c-name "gtk_selection_clear")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "widget")
    '("GdkEventSelection*" "event")
  )
)

(define-function _gtk_selection_request
  (c-name "_gtk_selection_request")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "widget")
    '("GdkEventSelection*" "event")
  )
)

(define-function _gtk_selection_incr_event
  (c-name "_gtk_selection_incr_event")
  (return-type "gboolean")
  (parameters
    '("GdkWindow*" "window")
    '("GdkEventProperty*" "event")
  )
)

(define-function _gtk_selection_notify
  (c-name "_gtk_selection_notify")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "widget")
    '("GdkEventSelection*" "event")
  )
)

(define-function _gtk_selection_property_notify
  (c-name "_gtk_selection_property_notify")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "widget")
    '("GdkEventProperty*" "event")
  )
)

(define-function gtk_selection_data_get_type
  (c-name "gtk_selection_data_get_type")
  (return-type "GType")
)

(define-method copy
  (of-object "GtkSelectionData")
  (c-name "gtk_selection_data_copy")
  (return-type "GtkSelectionData*")
)

(define-method free
  (of-object "GtkSelectionData")
  (c-name "gtk_selection_data_free")
  (return-type "none")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkseparator.h

(define-function gtk_separator_get_type
  (c-name "gtk_separator_get_type")
  (return-type "GType")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkseparatormenuitem.h

(define-function gtk_separator_menu_item_get_type
  (c-name "gtk_separator_menu_item_get_type")
  (return-type "GType")
)

(define-function gtk_separator_menu_item_new
  (c-name "gtk_separator_menu_item_new")
  (is-constructor-of "GtkSeparatorMenuItem")
  (return-type "GtkWidget*")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkseparatortoolitem.h

(define-function gtk_separator_tool_item_get_type
  (c-name "gtk_separator_tool_item_get_type")
  (return-type "GType")
)

(define-function gtk_separator_tool_item_new
  (c-name "gtk_separator_tool_item_new")
  (is-constructor-of "GtkSeparatorToolItem")
  (return-type "GtkToolItem*")
)

(define-method get_draw
  (of-object "GtkSeparatorToolItem")
  (c-name "gtk_separator_tool_item_get_draw")
  (return-type "gboolean")
)

(define-method set_draw
  (of-object "GtkSeparatorToolItem")
  (c-name "gtk_separator_tool_item_set_draw")
  (return-type "none")
  (parameters
    '("gboolean" "draw")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtksettings.h

(define-function gtk_settings_get_type
  (c-name "gtk_settings_get_type")
  (return-type "GType")
)

(define-function gtk_settings_get_default
  (c-name "gtk_settings_get_default")
  (return-type "GtkSettings*")
)

(define-function gtk_settings_get_for_screen
  (c-name "gtk_settings_get_for_screen")
  (return-type "GtkSettings*")
  (parameters
    '("GdkScreen*" "screen")
  )
)

(define-function gtk_settings_install_property
  (c-name "gtk_settings_install_property")
  (return-type "none")
  (parameters
    '("GParamSpec*" "pspec")
  )
)

(define-function gtk_settings_install_property_parser
  (c-name "gtk_settings_install_property_parser")
  (return-type "none")
  (parameters
    '("GParamSpec*" "pspec")
    '("GtkRcPropertyParser" "parser")
  )
)

(define-function gtk_rc_property_parse_color
  (c-name "gtk_rc_property_parse_color")
  (return-type "gboolean")
  (parameters
    '("const-GParamSpec*" "pspec")
    '("const-GString*" "gstring")
    '("GValue*" "property_value")
  )
)

(define-function gtk_rc_property_parse_enum
  (c-name "gtk_rc_property_parse_enum")
  (return-type "gboolean")
  (parameters
    '("const-GParamSpec*" "pspec")
    '("const-GString*" "gstring")
    '("GValue*" "property_value")
  )
)

(define-function gtk_rc_property_parse_flags
  (c-name "gtk_rc_property_parse_flags")
  (return-type "gboolean")
  (parameters
    '("const-GParamSpec*" "pspec")
    '("const-GString*" "gstring")
    '("GValue*" "property_value")
  )
)

(define-function gtk_rc_property_parse_requisition
  (c-name "gtk_rc_property_parse_requisition")
  (return-type "gboolean")
  (parameters
    '("const-GParamSpec*" "pspec")
    '("const-GString*" "gstring")
    '("GValue*" "property_value")
  )
)

(define-function gtk_rc_property_parse_border
  (c-name "gtk_rc_property_parse_border")
  (return-type "gboolean")
  (parameters
    '("const-GParamSpec*" "pspec")
    '("const-GString*" "gstring")
    '("GValue*" "property_value")
  )
)

(define-method set_property_value
  (of-object "GtkSettings")
  (c-name "gtk_settings_set_property_value")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
    '("const-GtkSettingsValue*" "svalue")
  )
)

(define-method set_string_property
  (of-object "GtkSettings")
  (c-name "gtk_settings_set_string_property")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
    '("const-gchar*" "v_string")
    '("const-gchar*" "origin")
  )
)

(define-method set_long_property
  (of-object "GtkSettings")
  (c-name "gtk_settings_set_long_property")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
    '("glong" "v_long")
    '("const-gchar*" "origin")
  )
)

(define-method set_double_property
  (of-object "GtkSettings")
  (c-name "gtk_settings_set_double_property")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
    '("gdouble" "v_double")
    '("const-gchar*" "origin")
  )
)

(define-method _set_property_value_from_rc
  (of-object "GtkSettings")
  (c-name "_gtk_settings_set_property_value_from_rc")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
    '("const-GtkSettingsValue*" "svalue")
  )
)

(define-method _reset_rc_values
  (of-object "GtkSettings")
  (c-name "_gtk_settings_reset_rc_values")
  (return-type "none")
)

(define-function _gtk_settings_handle_event
  (c-name "_gtk_settings_handle_event")
  (return-type "none")
  (parameters
    '("GdkEventSetting*" "event")
  )
)

(define-function _gtk_rc_property_parser_from_type
  (c-name "_gtk_rc_property_parser_from_type")
  (return-type "GtkRcPropertyParser")
  (parameters
    '("GType" "type")
  )
)

(define-function _gtk_settings_parse_convert
  (c-name "_gtk_settings_parse_convert")
  (return-type "gboolean")
  (parameters
    '("GtkRcPropertyParser" "parser")
    '("const-GValue*" "src_value")
    '("GParamSpec*" "pspec")
    '("GValue*" "dest_value")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtksignal.h

(define-function gtk_signal_new
  (c-name "gtk_signal_new")
  (return-type "guint")
  (parameters
    '("const-gchar*" "name")
    '("GtkSignalRunType" "signal_flags")
    '("GtkType" "object_type")
    '("guint" "function_offset")
    '("GtkSignalMarshaller" "marshaller")
    '("GtkType" "return_val")
    '("guint" "n_args")
  )
  (varargs #t)
)

(define-function gtk_signal_emit_stop_by_name
  (c-name "gtk_signal_emit_stop_by_name")
  (return-type "none")
  (parameters
    '("GtkObject*" "object")
    '("const-gchar*" "name")
  )
)

(define-function gtk_signal_connect_object_while_alive
  (c-name "gtk_signal_connect_object_while_alive")
  (return-type "none")
  (parameters
    '("GtkObject*" "object")
    '("const-gchar*" "name")
    '("GtkSignalFunc" "func")
    '("GtkObject*" "alive_object")
  )
)

(define-function gtk_signal_connect_while_alive
  (c-name "gtk_signal_connect_while_alive")
  (return-type "none")
  (parameters
    '("GtkObject*" "object")
    '("const-gchar*" "name")
    '("GtkSignalFunc" "func")
    '("gpointer" "func_data")
    '("GtkObject*" "alive_object")
  )
)

(define-function gtk_signal_connect_full
  (c-name "gtk_signal_connect_full")
  (return-type "gulong")
  (parameters
    '("GtkObject*" "object")
    '("const-gchar*" "name")
    '("GtkSignalFunc" "func")
    '("GtkCallbackMarshal" "unsupported")
    '("gpointer" "data")
    '("GtkDestroyNotify" "destroy_func")
    '("gint" "object_signal")
    '("gint" "after")
  )
)

(define-function gtk_signal_emitv
  (c-name "gtk_signal_emitv")
  (return-type "none")
  (parameters
    '("GtkObject*" "object")
    '("guint" "signal_id")
    '("GtkArg*" "args")
  )
)

(define-function gtk_signal_emit
  (c-name "gtk_signal_emit")
  (return-type "none")
  (parameters
    '("GtkObject*" "object")
    '("guint" "signal_id")
  )
  (varargs #t)
)

(define-function gtk_signal_emit_by_name
  (c-name "gtk_signal_emit_by_name")
  (return-type "none")
  (parameters
    '("GtkObject*" "object")
    '("const-gchar*" "name")
  )
  (varargs #t)
)

(define-function gtk_signal_emitv_by_name
  (c-name "gtk_signal_emitv_by_name")
  (return-type "none")
  (parameters
    '("GtkObject*" "object")
    '("const-gchar*" "name")
    '("GtkArg*" "args")
  )
)

(define-function gtk_signal_compat_matched
  (c-name "gtk_signal_compat_matched")
  (return-type "none")
  (parameters
    '("GtkObject*" "object")
    '("GtkSignalFunc" "func")
    '("gpointer" "data")
    '("GSignalMatchType" "match")
    '("guint" "action")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtksizegroup.h

(define-function gtk_size_group_get_type
  (c-name "gtk_size_group_get_type")
  (return-type "GType")
)

(define-function gtk_size_group_new
  (c-name "gtk_size_group_new")
  (is-constructor-of "GtkSizeGroup")
  (return-type "GtkSizeGroup*")
  (parameters
    '("GtkSizeGroupMode" "mode")
  )
)

(define-method set_mode
  (of-object "GtkSizeGroup")
  (c-name "gtk_size_group_set_mode")
  (return-type "none")
  (parameters
    '("GtkSizeGroupMode" "mode")
  )
)

(define-method get_mode
  (of-object "GtkSizeGroup")
  (c-name "gtk_size_group_get_mode")
  (return-type "GtkSizeGroupMode")
)

(define-method add_widget
  (of-object "GtkSizeGroup")
  (c-name "gtk_size_group_add_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method remove_widget
  (of-object "GtkSizeGroup")
  (c-name "gtk_size_group_remove_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-function _gtk_size_group_get_child_requisition
  (c-name "_gtk_size_group_get_child_requisition")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("GtkRequisition*" "requisition")
  )
)

(define-function _gtk_size_group_compute_requisition
  (c-name "_gtk_size_group_compute_requisition")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("GtkRequisition*" "requisition")
  )
)

(define-function _gtk_size_group_queue_resize
  (c-name "_gtk_size_group_queue_resize")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtksocket.h

(define-function gtk_socket_get_type
  (c-name "gtk_socket_get_type")
  (return-type "GType")
)

(define-function gtk_socket_new
  (c-name "gtk_socket_new")
  (is-constructor-of "GtkSocket")
  (return-type "GtkWidget*")
)

(define-method add_id
  (of-object "GtkSocket")
  (c-name "gtk_socket_add_id")
  (return-type "none")
  (parameters
    '("GdkNativeWindow" "window_id")
  )
)

(define-method get_id
  (of-object "GtkSocket")
  (c-name "gtk_socket_get_id")
  (return-type "GdkNativeWindow")
)

(define-method steal
  (of-object "GtkSocket")
  (c-name "gtk_socket_steal")
  (return-type "none")
  (parameters
    '("GdkNativeWindow" "wid")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkspinbutton.h

(define-function gtk_spin_button_get_type
  (c-name "gtk_spin_button_get_type")
  (return-type "GType")
)

(define-method configure
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_configure")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment")
    '("gdouble" "climb_rate")
    '("guint" "digits")
  )
)

(define-function gtk_spin_button_new
  (c-name "gtk_spin_button_new")
  (is-constructor-of "GtkSpinButton")
  (return-type "GtkWidget*")
  (parameters
    '("GtkAdjustment*" "adjustment")
    '("gdouble" "climb_rate")
    '("guint" "digits")
  )
)

(define-function gtk_spin_button_new_with_range
  (c-name "gtk_spin_button_new_with_range")
  (return-type "GtkWidget*")
  (parameters
    '("gdouble" "min")
    '("gdouble" "max")
    '("gdouble" "step")
  )
)

(define-method set_adjustment
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_set_adjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment")
  )
)

(define-method get_adjustment
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_get_adjustment")
  (return-type "GtkAdjustment*")
)

(define-method set_digits
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_set_digits")
  (return-type "none")
  (parameters
    '("guint" "digits")
  )
)

(define-method get_digits
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_get_digits")
  (return-type "guint")
)

(define-method set_increments
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_set_increments")
  (return-type "none")
  (parameters
    '("gdouble" "step")
    '("gdouble" "page")
  )
)

(define-method get_increments
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_get_increments")
  (return-type "none")
  (parameters
    '("gdouble*" "step")
    '("gdouble*" "page")
  )
)

(define-method set_range
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_set_range")
  (return-type "none")
  (parameters
    '("gdouble" "min")
    '("gdouble" "max")
  )
)

(define-method get_range
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_get_range")
  (return-type "none")
  (parameters
    '("gdouble*" "min")
    '("gdouble*" "max")
  )
)

(define-method get_value
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_get_value")
  (return-type "gdouble")
)

(define-method get_value_as_int
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_get_value_as_int")
  (return-type "gint")
)

(define-method set_value
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_set_value")
  (return-type "none")
  (parameters
    '("gdouble" "value")
  )
)

(define-method set_update_policy
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_set_update_policy")
  (return-type "none")
  (parameters
    '("GtkSpinButtonUpdatePolicy" "policy")
  )
)

(define-method get_update_policy
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_get_update_policy")
  (return-type "GtkSpinButtonUpdatePolicy")
)

(define-method set_numeric
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_set_numeric")
  (return-type "none")
  (parameters
    '("gboolean" "numeric")
  )
)

(define-method get_numeric
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_get_numeric")
  (return-type "gboolean")
)

(define-method spin
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_spin")
  (return-type "none")
  (parameters
    '("GtkSpinType" "direction")
    '("gdouble" "increment")
  )
)

(define-method set_wrap
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_set_wrap")
  (return-type "none")
  (parameters
    '("gboolean" "wrap")
  )
)

(define-method get_wrap
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_get_wrap")
  (return-type "gboolean")
)

(define-method set_snap_to_ticks
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_set_snap_to_ticks")
  (return-type "none")
  (parameters
    '("gboolean" "snap_to_ticks")
  )
)

(define-method get_snap_to_ticks
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_get_snap_to_ticks")
  (return-type "gboolean")
)

(define-method update
  (of-object "GtkSpinButton")
  (c-name "gtk_spin_button_update")
  (return-type "none")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkstatusbar.h

(define-function gtk_statusbar_get_type
  (c-name "gtk_statusbar_get_type")
  (return-type "GType")
)

(define-function gtk_statusbar_new
  (c-name "gtk_statusbar_new")
  (is-constructor-of "GtkStatusbar")
  (return-type "GtkWidget*")
)

(define-method get_context_id
  (of-object "GtkStatusbar")
  (c-name "gtk_statusbar_get_context_id")
  (return-type "guint")
  (parameters
    '("const-gchar*" "context_description")
  )
)

(define-method push
  (of-object "GtkStatusbar")
  (c-name "gtk_statusbar_push")
  (return-type "guint")
  (parameters
    '("guint" "context_id")
    '("const-gchar*" "text")
  )
)

(define-method pop
  (of-object "GtkStatusbar")
  (c-name "gtk_statusbar_pop")
  (return-type "none")
  (parameters
    '("guint" "context_id")
  )
)

(define-method remove
  (of-object "GtkStatusbar")
  (c-name "gtk_statusbar_remove")
  (return-type "none")
  (parameters
    '("guint" "context_id")
    '("guint" "message_id")
  )
)

(define-method set_has_resize_grip
  (of-object "GtkStatusbar")
  (c-name "gtk_statusbar_set_has_resize_grip")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_has_resize_grip
  (of-object "GtkStatusbar")
  (c-name "gtk_statusbar_get_has_resize_grip")
  (return-type "gboolean")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkstock.h

(define-function gtk_stock_add
  (c-name "gtk_stock_add")
  (return-type "none")
  (parameters
    '("const-GtkStockItem*" "items")
    '("guint" "n_items")
  )
)

(define-function gtk_stock_add_static
  (c-name "gtk_stock_add_static")
  (return-type "none")
  (parameters
    '("const-GtkStockItem*" "items")
    '("guint" "n_items")
  )
)

(define-function gtk_stock_lookup
  (c-name "gtk_stock_lookup")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "stock_id")
    '("GtkStockItem*" "item")
  )
)

(define-function gtk_stock_list_ids
  (c-name "gtk_stock_list_ids")
  (return-type "GSList*")
)

(define-method copy
  (of-object "GtkStockItem")
  (c-name "gtk_stock_item_copy")
  (return-type "GtkStockItem*")
)

(define-method free
  (of-object "GtkStockItem")
  (c-name "gtk_stock_item_free")
  (return-type "none")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkstyle.h

(define-function gtk_style_get_type
  (c-name "gtk_style_get_type")
  (return-type "GType")
)

(define-function gtk_style_new
  (c-name "gtk_style_new")
  (is-constructor-of "GtkStyle")
  (return-type "GtkStyle*")
)

(define-method copy
  (of-object "GtkStyle")
  (c-name "gtk_style_copy")
  (return-type "GtkStyle*")
)

(define-method attach
  (of-object "GtkStyle")
  (c-name "gtk_style_attach")
  (return-type "GtkStyle*")
  (parameters
    '("GdkWindow*" "window")
  )
)

(define-method detach
  (of-object "GtkStyle")
  (c-name "gtk_style_detach")
  (return-type "none")
)

(define-method ref
  (of-object "GtkStyle")
  (c-name "gtk_style_ref")
  (return-type "GtkStyle*")
)

(define-method unref
  (of-object "GtkStyle")
  (c-name "gtk_style_unref")
  (return-type "none")
)

(define-method get_font
  (of-object "GtkStyle")
  (c-name "gtk_style_get_font")
  (return-type "GdkFont*")
)

(define-method set_font
  (of-object "GtkStyle")
  (c-name "gtk_style_set_font")
  (return-type "none")
  (parameters
    '("GdkFont*" "font")
  )
)

(define-method set_background
  (of-object "GtkStyle")
  (c-name "gtk_style_set_background")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
  )
)

(define-method apply_default_background
  (of-object "GtkStyle")
  (c-name "gtk_style_apply_default_background")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window")
    '("gboolean" "set_bg")
    '("GtkStateType" "state_type")
    '("GdkRectangle*" "area")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method lookup_icon_set
  (of-object "GtkStyle")
  (c-name "gtk_style_lookup_icon_set")
  (return-type "GtkIconSet*")
  (parameters
    '("const-gchar*" "stock_id")
  )
)

(define-method render_icon
  (of-object "GtkStyle")
  (c-name "gtk_style_render_icon")
  (return-type "GdkPixbuf*")
  (parameters
    '("const-GtkIconSource*" "source")
    '("GtkTextDirection" "direction")
    '("GtkStateType" "state")
    '("GtkIconSize" "size")
    '("GtkWidget*" "widget")
    '("const-gchar*" "detail")
  )
)

(define-function gtk_draw_hline
  (c-name "gtk_draw_hline")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("gint" "x1")
    '("gint" "x2")
    '("gint" "y")
  )
)

(define-function gtk_draw_vline
  (c-name "gtk_draw_vline")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("gint" "y1_")
    '("gint" "y2_")
    '("gint" "x")
  )
)

(define-function gtk_draw_shadow
  (c-name "gtk_draw_shadow")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GtkShadowType" "shadow_type")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-function gtk_draw_polygon
  (c-name "gtk_draw_polygon")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GtkShadowType" "shadow_type")
    '("GdkPoint*" "points")
    '("gint" "npoints")
    '("gboolean" "fill")
  )
)

(define-function gtk_draw_arrow
  (c-name "gtk_draw_arrow")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GtkShadowType" "shadow_type")
    '("GtkArrowType" "arrow_type")
    '("gboolean" "fill")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-function gtk_draw_diamond
  (c-name "gtk_draw_diamond")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GtkShadowType" "shadow_type")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-function gtk_draw_box
  (c-name "gtk_draw_box")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GtkShadowType" "shadow_type")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-function gtk_draw_flat_box
  (c-name "gtk_draw_flat_box")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GtkShadowType" "shadow_type")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-function gtk_draw_check
  (c-name "gtk_draw_check")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GtkShadowType" "shadow_type")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-function gtk_draw_option
  (c-name "gtk_draw_option")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GtkShadowType" "shadow_type")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-function gtk_draw_tab
  (c-name "gtk_draw_tab")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GtkShadowType" "shadow_type")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-function gtk_draw_shadow_gap
  (c-name "gtk_draw_shadow_gap")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GtkShadowType" "shadow_type")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
    '("GtkPositionType" "gap_side")
    '("gint" "gap_x")
    '("gint" "gap_width")
  )
)

(define-function gtk_draw_box_gap
  (c-name "gtk_draw_box_gap")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GtkShadowType" "shadow_type")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
    '("GtkPositionType" "gap_side")
    '("gint" "gap_x")
    '("gint" "gap_width")
  )
)

(define-function gtk_draw_extension
  (c-name "gtk_draw_extension")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GtkShadowType" "shadow_type")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
    '("GtkPositionType" "gap_side")
  )
)

(define-function gtk_draw_focus
  (c-name "gtk_draw_focus")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-function gtk_draw_slider
  (c-name "gtk_draw_slider")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GtkShadowType" "shadow_type")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
    '("GtkOrientation" "orientation")
  )
)

(define-function gtk_draw_handle
  (c-name "gtk_draw_handle")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GtkShadowType" "shadow_type")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
    '("GtkOrientation" "orientation")
  )
)

(define-function gtk_draw_expander
  (c-name "gtk_draw_expander")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("gint" "x")
    '("gint" "y")
    '("GtkExpanderStyle" "expander_style")
  )
)

(define-function gtk_draw_layout
  (c-name "gtk_draw_layout")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("gboolean" "use_text")
    '("gint" "x")
    '("gint" "y")
    '("PangoLayout*" "layout")
  )
)

(define-function gtk_draw_resize_grip
  (c-name "gtk_draw_resize_grip")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GdkWindowEdge" "edge")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-function gtk_paint_hline
  (c-name "gtk_paint_hline")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GdkRectangle*" "area")
    '("GtkWidget*" "widget")
    '("const-gchar*" "detail")
    '("gint" "x1")
    '("gint" "x2")
    '("gint" "y")
  )
)

(define-function gtk_paint_vline
  (c-name "gtk_paint_vline")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GdkRectangle*" "area")
    '("GtkWidget*" "widget")
    '("const-gchar*" "detail")
    '("gint" "y1_")
    '("gint" "y2_")
    '("gint" "x")
  )
)

(define-function gtk_paint_shadow
  (c-name "gtk_paint_shadow")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GtkShadowType" "shadow_type")
    '("GdkRectangle*" "area")
    '("GtkWidget*" "widget")
    '("const-gchar*" "detail")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-function gtk_paint_polygon
  (c-name "gtk_paint_polygon")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GtkShadowType" "shadow_type")
    '("GdkRectangle*" "area")
    '("GtkWidget*" "widget")
    '("const-gchar*" "detail")
    '("GdkPoint*" "points")
    '("gint" "npoints")
    '("gboolean" "fill")
  )
)

(define-function gtk_paint_arrow
  (c-name "gtk_paint_arrow")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GtkShadowType" "shadow_type")
    '("GdkRectangle*" "area")
    '("GtkWidget*" "widget")
    '("const-gchar*" "detail")
    '("GtkArrowType" "arrow_type")
    '("gboolean" "fill")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-function gtk_paint_diamond
  (c-name "gtk_paint_diamond")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GtkShadowType" "shadow_type")
    '("GdkRectangle*" "area")
    '("GtkWidget*" "widget")
    '("const-gchar*" "detail")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-function gtk_paint_box
  (c-name "gtk_paint_box")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GtkShadowType" "shadow_type")
    '("GdkRectangle*" "area")
    '("GtkWidget*" "widget")
    '("const-gchar*" "detail")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-function gtk_paint_flat_box
  (c-name "gtk_paint_flat_box")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GtkShadowType" "shadow_type")
    '("GdkRectangle*" "area")
    '("GtkWidget*" "widget")
    '("const-gchar*" "detail")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-function gtk_paint_check
  (c-name "gtk_paint_check")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GtkShadowType" "shadow_type")
    '("GdkRectangle*" "area")
    '("GtkWidget*" "widget")
    '("const-gchar*" "detail")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-function gtk_paint_option
  (c-name "gtk_paint_option")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GtkShadowType" "shadow_type")
    '("GdkRectangle*" "area")
    '("GtkWidget*" "widget")
    '("const-gchar*" "detail")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-function gtk_paint_tab
  (c-name "gtk_paint_tab")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GtkShadowType" "shadow_type")
    '("GdkRectangle*" "area")
    '("GtkWidget*" "widget")
    '("const-gchar*" "detail")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-function gtk_paint_shadow_gap
  (c-name "gtk_paint_shadow_gap")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GtkShadowType" "shadow_type")
    '("GdkRectangle*" "area")
    '("GtkWidget*" "widget")
    '("gchar*" "detail")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
    '("GtkPositionType" "gap_side")
    '("gint" "gap_x")
    '("gint" "gap_width")
  )
)

(define-function gtk_paint_box_gap
  (c-name "gtk_paint_box_gap")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GtkShadowType" "shadow_type")
    '("GdkRectangle*" "area")
    '("GtkWidget*" "widget")
    '("gchar*" "detail")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
    '("GtkPositionType" "gap_side")
    '("gint" "gap_x")
    '("gint" "gap_width")
  )
)

(define-function gtk_paint_extension
  (c-name "gtk_paint_extension")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GtkShadowType" "shadow_type")
    '("GdkRectangle*" "area")
    '("GtkWidget*" "widget")
    '("gchar*" "detail")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
    '("GtkPositionType" "gap_side")
  )
)

(define-function gtk_paint_focus
  (c-name "gtk_paint_focus")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GdkRectangle*" "area")
    '("GtkWidget*" "widget")
    '("const-gchar*" "detail")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-function gtk_paint_slider
  (c-name "gtk_paint_slider")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GtkShadowType" "shadow_type")
    '("GdkRectangle*" "area")
    '("GtkWidget*" "widget")
    '("const-gchar*" "detail")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
    '("GtkOrientation" "orientation")
  )
)

(define-function gtk_paint_handle
  (c-name "gtk_paint_handle")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GtkShadowType" "shadow_type")
    '("GdkRectangle*" "area")
    '("GtkWidget*" "widget")
    '("const-gchar*" "detail")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
    '("GtkOrientation" "orientation")
  )
)

(define-function gtk_paint_expander
  (c-name "gtk_paint_expander")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GdkRectangle*" "area")
    '("GtkWidget*" "widget")
    '("const-gchar*" "detail")
    '("gint" "x")
    '("gint" "y")
    '("GtkExpanderStyle" "expander_style")
  )
)

(define-function gtk_paint_layout
  (c-name "gtk_paint_layout")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("gboolean" "use_text")
    '("GdkRectangle*" "area")
    '("GtkWidget*" "widget")
    '("const-gchar*" "detail")
    '("gint" "x")
    '("gint" "y")
    '("PangoLayout*" "layout")
  )
)

(define-function gtk_paint_resize_grip
  (c-name "gtk_paint_resize_grip")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GdkRectangle*" "area")
    '("GtkWidget*" "widget")
    '("const-gchar*" "detail")
    '("GdkWindowEdge" "edge")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-function gtk_border_get_type
  (c-name "gtk_border_get_type")
  (return-type "GType")
)

(define-method copy
  (of-object "GtkBorder")
  (c-name "gtk_border_copy")
  (return-type "GtkBorder*")
)

(define-function gtk_border_free
  (c-name "gtk_border_free")
  (return-type "none")
  (parameters
    '("-GtkBorder*" "border_")
  )
)

(define-method _peek_property_value
  (of-object "GtkStyle")
  (c-name "_gtk_style_peek_property_value")
  (return-type "const-GValue*")
  (parameters
    '("GType" "widget_type")
    '("GParamSpec*" "pspec")
    '("GtkRcPropertyParser" "parser")
  )
)

(define-method _init_for_settings
  (of-object "GtkStyle")
  (c-name "_gtk_style_init_for_settings")
  (return-type "none")
  (parameters
    '("GtkSettings*" "settings")
  )
)

(define-function gtk_draw_string
  (c-name "gtk_draw_string")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("gint" "x")
    '("gint" "y")
    '("const-gchar*" "string")
  )
)

(define-function gtk_paint_string
  (c-name "gtk_paint_string")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
    '("GdkWindow*" "window")
    '("GtkStateType" "state_type")
    '("GdkRectangle*" "area")
    '("GtkWidget*" "widget")
    '("const-gchar*" "detail")
    '("gint" "x")
    '("gint" "y")
    '("const-gchar*" "string")
  )
)

(define-function _gtk_get_insertion_cursor_gc
  (c-name "_gtk_get_insertion_cursor_gc")
  (return-type "GdkGC*")
  (parameters
    '("GtkWidget*" "widget")
    '("gboolean" "is_primary")
  )
)

(define-function _gtk_draw_insertion_cursor
  (c-name "_gtk_draw_insertion_cursor")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("GdkDrawable*" "drawable")
    '("GdkGC*" "gc")
    '("GdkRectangle*" "location")
    '("GtkTextDirection" "direction")
    '("gboolean" "draw_arrow")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktable.h

(define-function gtk_table_get_type
  (c-name "gtk_table_get_type")
  (return-type "GType")
)

(define-function gtk_table_new
  (c-name "gtk_table_new")
  (is-constructor-of "GtkTable")
  (return-type "GtkWidget*")
  (parameters
    '("guint" "rows")
    '("guint" "columns")
    '("gboolean" "homogeneous")
  )
)

(define-method resize
  (of-object "GtkTable")
  (c-name "gtk_table_resize")
  (return-type "none")
  (parameters
    '("guint" "rows")
    '("guint" "columns")
  )
)

(define-method attach
  (of-object "GtkTable")
  (c-name "gtk_table_attach")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("guint" "left_attach")
    '("guint" "right_attach")
    '("guint" "top_attach")
    '("guint" "bottom_attach")
    '("GtkAttachOptions" "xoptions")
    '("GtkAttachOptions" "yoptions")
    '("guint" "xpadding")
    '("guint" "ypadding")
  )
)

(define-method attach_defaults
  (of-object "GtkTable")
  (c-name "gtk_table_attach_defaults")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("guint" "left_attach")
    '("guint" "right_attach")
    '("guint" "top_attach")
    '("guint" "bottom_attach")
  )
)

(define-method set_row_spacing
  (of-object "GtkTable")
  (c-name "gtk_table_set_row_spacing")
  (return-type "none")
  (parameters
    '("guint" "row")
    '("guint" "spacing")
  )
)

(define-method get_row_spacing
  (of-object "GtkTable")
  (c-name "gtk_table_get_row_spacing")
  (return-type "guint")
  (parameters
    '("guint" "row")
  )
)

(define-method set_col_spacing
  (of-object "GtkTable")
  (c-name "gtk_table_set_col_spacing")
  (return-type "none")
  (parameters
    '("guint" "column")
    '("guint" "spacing")
  )
)

(define-method get_col_spacing
  (of-object "GtkTable")
  (c-name "gtk_table_get_col_spacing")
  (return-type "guint")
  (parameters
    '("guint" "column")
  )
)

(define-method set_row_spacings
  (of-object "GtkTable")
  (c-name "gtk_table_set_row_spacings")
  (return-type "none")
  (parameters
    '("guint" "spacing")
  )
)

(define-method get_default_row_spacing
  (of-object "GtkTable")
  (c-name "gtk_table_get_default_row_spacing")
  (return-type "guint")
)

(define-method set_col_spacings
  (of-object "GtkTable")
  (c-name "gtk_table_set_col_spacings")
  (return-type "none")
  (parameters
    '("guint" "spacing")
  )
)

(define-method get_default_col_spacing
  (of-object "GtkTable")
  (c-name "gtk_table_get_default_col_spacing")
  (return-type "guint")
)

(define-method set_homogeneous
  (of-object "GtkTable")
  (c-name "gtk_table_set_homogeneous")
  (return-type "none")
  (parameters
    '("gboolean" "homogeneous")
  )
)

(define-method get_homogeneous
  (of-object "GtkTable")
  (c-name "gtk_table_get_homogeneous")
  (return-type "gboolean")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktearoffmenuitem.h

(define-function gtk_tearoff_menu_item_get_type
  (c-name "gtk_tearoff_menu_item_get_type")
  (return-type "GType")
)

(define-function gtk_tearoff_menu_item_new
  (c-name "gtk_tearoff_menu_item_new")
  (is-constructor-of "GtkTearoffMenuItem")
  (return-type "GtkWidget*")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktextbtree.h

(define-method _ref
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_ref")
  (return-type "none")
)

(define-method _unref
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_unref")
  (return-type "none")
)

(define-method _get_buffer
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_get_buffer")
  (return-type "GtkTextBuffer*")
)

(define-method _get_chars_changed_stamp
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_get_chars_changed_stamp")
  (return-type "guint")
)

(define-method _get_segments_changed_stamp
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_get_segments_changed_stamp")
  (return-type "guint")
)

(define-method _segments_changed
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_segments_changed")
  (return-type "none")
)

(define-method _is_end
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_is_end")
  (return-type "gboolean")
  (parameters
    '("GtkTextLine*" "line")
    '("GtkTextLineSegment*" "seg")
    '("int" "byte_index")
    '("int" "char_offset")
  )
)

(define-function _gtk_text_btree_delete
  (c-name "_gtk_text_btree_delete")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "start")
    '("GtkTextIter*" "end")
  )
)

(define-function _gtk_text_btree_insert
  (c-name "_gtk_text_btree_insert")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("const-gchar*" "text")
    '("gint" "len")
  )
)

(define-function _gtk_text_btree_insert_pixbuf
  (c-name "_gtk_text_btree_insert_pixbuf")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("GdkPixbuf*" "pixbuf")
  )
)

(define-function _gtk_text_btree_insert_child_anchor
  (c-name "_gtk_text_btree_insert_child_anchor")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("GtkTextChildAnchor*" "anchor")
  )
)

(define-function _gtk_text_btree_unregister_child_anchor
  (c-name "_gtk_text_btree_unregister_child_anchor")
  (return-type "none")
  (parameters
    '("GtkTextChildAnchor*" "anchor")
  )
)

(define-method _find_line_by_y
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_find_line_by_y")
  (return-type "GtkTextLine*")
  (parameters
    '("gpointer" "view_id")
    '("gint" "ypixel")
    '("gint*" "line_top_y")
  )
)

(define-method _find_line_top
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_find_line_top")
  (return-type "gint")
  (parameters
    '("GtkTextLine*" "line")
    '("gpointer" "view_id")
  )
)

(define-method _add_view
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_add_view")
  (return-type "none")
  (parameters
    '("GtkTextLayout*" "layout")
  )
)

(define-method _remove_view
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_remove_view")
  (return-type "none")
  (parameters
    '("gpointer" "view_id")
  )
)

(define-method _invalidate_region
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_invalidate_region")
  (return-type "none")
  (parameters
    '("const-GtkTextIter*" "start")
    '("const-GtkTextIter*" "end")
  )
)

(define-method _get_view_size
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_get_view_size")
  (return-type "none")
  (parameters
    '("gpointer" "view_id")
    '("gint*" "width")
    '("gint*" "height")
  )
)

(define-method _is_valid
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_is_valid")
  (return-type "gboolean")
  (parameters
    '("gpointer" "view_id")
  )
)

(define-method _validate
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_validate")
  (return-type "gboolean")
  (parameters
    '("gpointer" "view_id")
    '("gint" "max_pixels")
    '("gint*" "y")
    '("gint*" "old_height")
    '("gint*" "new_height")
  )
)

(define-method _validate_line
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_validate_line")
  (return-type "none")
  (parameters
    '("GtkTextLine*" "line")
    '("gpointer" "view_id")
  )
)

(define-function _gtk_text_btree_tag
  (c-name "_gtk_text_btree_tag")
  (return-type "none")
  (parameters
    '("const-GtkTextIter*" "start")
    '("const-GtkTextIter*" "end")
    '("GtkTextTag*" "tag")
    '("gboolean" "apply")
  )
)

(define-method _get_line
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_get_line")
  (return-type "GtkTextLine*")
  (parameters
    '("gint" "line_number")
    '("gint*" "real_line_number")
  )
)

(define-method _get_line_no_last
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_get_line_no_last")
  (return-type "GtkTextLine*")
  (parameters
    '("gint" "line_number")
    '("gint*" "real_line_number")
  )
)

(define-method _get_end_iter_line
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_get_end_iter_line")
  (return-type "GtkTextLine*")
)

(define-method _get_line_at_char
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_get_line_at_char")
  (return-type "GtkTextLine*")
  (parameters
    '("gint" "char_index")
    '("gint*" "line_start_index")
    '("gint*" "real_char_index")
  )
)

(define-function _gtk_text_btree_get_tags
  (c-name "_gtk_text_btree_get_tags")
  (return-type "GtkTextTag**")
  (parameters
    '("const-GtkTextIter*" "iter")
    '("gint*" "num_tags")
  )
)

(define-function _gtk_text_btree_get_text
  (c-name "_gtk_text_btree_get_text")
  (return-type "gchar*")
  (parameters
    '("const-GtkTextIter*" "start")
    '("const-GtkTextIter*" "end")
    '("gboolean" "include_hidden")
    '("gboolean" "include_nonchars")
  )
)

(define-method _line_count
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_line_count")
  (return-type "gint")
)

(define-method _char_count
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_char_count")
  (return-type "gint")
)

(define-function _gtk_text_btree_char_is_invisible
  (c-name "_gtk_text_btree_char_is_invisible")
  (return-type "gboolean")
  (parameters
    '("const-GtkTextIter*" "iter")
  )
)

(define-method _get_iter_at_char
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_get_iter_at_char")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("gint" "char_index")
  )
)

(define-method _get_iter_at_line_char
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_get_iter_at_line_char")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("gint" "line_number")
    '("gint" "char_index")
  )
)

(define-method _get_iter_at_line_byte
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_get_iter_at_line_byte")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("gint" "line_number")
    '("gint" "byte_index")
  )
)

(define-method _get_iter_from_string
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_get_iter_from_string")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter")
    '("const-gchar*" "string")
  )
)

(define-method _get_iter_at_mark_name
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_get_iter_at_mark_name")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter")
    '("const-gchar*" "mark_name")
  )
)

(define-method _get_iter_at_mark
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_get_iter_at_mark")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("GtkTextMark*" "mark")
  )
)

(define-method _get_end_iter
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_get_end_iter")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
  )
)

(define-method _get_iter_at_line
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_get_iter_at_line")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("GtkTextLine*" "line")
    '("gint" "byte_offset")
  )
)

(define-method _get_iter_at_first_toggle
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_get_iter_at_first_toggle")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter")
    '("GtkTextTag*" "tag")
  )
)

(define-method _get_iter_at_last_toggle
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_get_iter_at_last_toggle")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter")
    '("GtkTextTag*" "tag")
  )
)

(define-method _get_iter_at_child_anchor
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_get_iter_at_child_anchor")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("GtkTextChildAnchor*" "anchor")
  )
)

(define-method _set_mark
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_set_mark")
  (return-type "GtkTextMark*")
  (parameters
    '("GtkTextMark*" "existing_mark")
    '("const-gchar*" "name")
    '("gboolean" "left_gravity")
    '("const-GtkTextIter*" "index")
    '("gboolean" "should_exist")
  )
)

(define-method _remove_mark_by_name
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_remove_mark_by_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method _remove_mark
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_remove_mark")
  (return-type "none")
  (parameters
    '("GtkTextMark*" "segment")
  )
)

(define-method _get_selection_bounds
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_get_selection_bounds")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "start")
    '("GtkTextIter*" "end")
  )
)

(define-method _place_cursor
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_place_cursor")
  (return-type "none")
  (parameters
    '("const-GtkTextIter*" "where")
  )
)

(define-method _select_range
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_select_range")
  (return-type "none")
  (parameters
    '("const-GtkTextIter*" "ins")
    '("const-GtkTextIter*" "bound")
  )
)

(define-method _mark_is_insert
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_mark_is_insert")
  (return-type "gboolean")
  (parameters
    '("GtkTextMark*" "segment")
  )
)

(define-method _mark_is_selection_bound
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_mark_is_selection_bound")
  (return-type "gboolean")
  (parameters
    '("GtkTextMark*" "segment")
  )
)

(define-method _get_mark_by_name
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_get_mark_by_name")
  (return-type "GtkTextMark*")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method _first_could_contain_tag
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_first_could_contain_tag")
  (return-type "GtkTextLine*")
  (parameters
    '("GtkTextTag*" "tag")
  )
)

(define-method _last_could_contain_tag
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_last_could_contain_tag")
  (return-type "GtkTextLine*")
  (parameters
    '("GtkTextTag*" "tag")
  )
)

(define-method _get_number
  (of-object "GtkTextLine")
  (c-name "_gtk_text_line_get_number")
  (return-type "gint")
)

(define-method _char_has_tag
  (of-object "GtkTextLine")
  (c-name "_gtk_text_line_char_has_tag")
  (return-type "gboolean")
  (parameters
    '("GtkTextBTree*" "tree")
    '("gint" "char_in_line")
    '("GtkTextTag*" "tag")
  )
)

(define-method _byte_has_tag
  (of-object "GtkTextLine")
  (c-name "_gtk_text_line_byte_has_tag")
  (return-type "gboolean")
  (parameters
    '("GtkTextBTree*" "tree")
    '("gint" "byte_in_line")
    '("GtkTextTag*" "tag")
  )
)

(define-method _is_last
  (of-object "GtkTextLine")
  (c-name "_gtk_text_line_is_last")
  (return-type "gboolean")
  (parameters
    '("GtkTextBTree*" "tree")
  )
)

(define-method _contains_end_iter
  (of-object "GtkTextLine")
  (c-name "_gtk_text_line_contains_end_iter")
  (return-type "gboolean")
  (parameters
    '("GtkTextBTree*" "tree")
  )
)

(define-method _next
  (of-object "GtkTextLine")
  (c-name "_gtk_text_line_next")
  (return-type "GtkTextLine*")
)

(define-method _next_excluding_last
  (of-object "GtkTextLine")
  (c-name "_gtk_text_line_next_excluding_last")
  (return-type "GtkTextLine*")
)

(define-method _previous
  (of-object "GtkTextLine")
  (c-name "_gtk_text_line_previous")
  (return-type "GtkTextLine*")
)

(define-method _add_data
  (of-object "GtkTextLine")
  (c-name "_gtk_text_line_add_data")
  (return-type "none")
  (parameters
    '("GtkTextLineData*" "data")
  )
)

(define-method _remove_data
  (of-object "GtkTextLine")
  (c-name "_gtk_text_line_remove_data")
  (return-type "gpointer")
  (parameters
    '("gpointer" "view_id")
  )
)

(define-method _get_data
  (of-object "GtkTextLine")
  (c-name "_gtk_text_line_get_data")
  (return-type "gpointer")
  (parameters
    '("gpointer" "view_id")
  )
)

(define-method _invalidate_wrap
  (of-object "GtkTextLine")
  (c-name "_gtk_text_line_invalidate_wrap")
  (return-type "none")
  (parameters
    '("GtkTextLineData*" "ld")
  )
)

(define-method _char_count
  (of-object "GtkTextLine")
  (c-name "_gtk_text_line_char_count")
  (return-type "gint")
)

(define-method _byte_count
  (of-object "GtkTextLine")
  (c-name "_gtk_text_line_byte_count")
  (return-type "gint")
)

(define-method _char_index
  (of-object "GtkTextLine")
  (c-name "_gtk_text_line_char_index")
  (return-type "gint")
)

(define-method _byte_to_segment
  (of-object "GtkTextLine")
  (c-name "_gtk_text_line_byte_to_segment")
  (return-type "GtkTextLineSegment*")
  (parameters
    '("gint" "byte_offset")
    '("gint*" "seg_offset")
  )
)

(define-method _char_to_segment
  (of-object "GtkTextLine")
  (c-name "_gtk_text_line_char_to_segment")
  (return-type "GtkTextLineSegment*")
  (parameters
    '("gint" "char_offset")
    '("gint*" "seg_offset")
  )
)

(define-method _byte_locate
  (of-object "GtkTextLine")
  (c-name "_gtk_text_line_byte_locate")
  (return-type "gboolean")
  (parameters
    '("gint" "byte_offset")
    '("GtkTextLineSegment**" "segment")
    '("GtkTextLineSegment**" "any_segment")
    '("gint*" "seg_byte_offset")
    '("gint*" "line_byte_offset")
  )
)

(define-method _char_locate
  (of-object "GtkTextLine")
  (c-name "_gtk_text_line_char_locate")
  (return-type "gboolean")
  (parameters
    '("gint" "char_offset")
    '("GtkTextLineSegment**" "segment")
    '("GtkTextLineSegment**" "any_segment")
    '("gint*" "seg_char_offset")
    '("gint*" "line_char_offset")
  )
)

(define-method _byte_to_char_offsets
  (of-object "GtkTextLine")
  (c-name "_gtk_text_line_byte_to_char_offsets")
  (return-type "none")
  (parameters
    '("gint" "byte_offset")
    '("gint*" "line_char_offset")
    '("gint*" "seg_char_offset")
  )
)

(define-method _char_to_byte_offsets
  (of-object "GtkTextLine")
  (c-name "_gtk_text_line_char_to_byte_offsets")
  (return-type "none")
  (parameters
    '("gint" "char_offset")
    '("gint*" "line_byte_offset")
    '("gint*" "seg_byte_offset")
  )
)

(define-method _byte_to_any_segment
  (of-object "GtkTextLine")
  (c-name "_gtk_text_line_byte_to_any_segment")
  (return-type "GtkTextLineSegment*")
  (parameters
    '("gint" "byte_offset")
    '("gint*" "seg_offset")
  )
)

(define-method _char_to_any_segment
  (of-object "GtkTextLine")
  (c-name "_gtk_text_line_char_to_any_segment")
  (return-type "GtkTextLineSegment*")
  (parameters
    '("gint" "char_offset")
    '("gint*" "seg_offset")
  )
)

(define-method _byte_to_char
  (of-object "GtkTextLine")
  (c-name "_gtk_text_line_byte_to_char")
  (return-type "gint")
  (parameters
    '("gint" "byte_offset")
  )
)

(define-method _char_to_byte
  (of-object "GtkTextLine")
  (c-name "_gtk_text_line_char_to_byte")
  (return-type "gint")
  (parameters
    '("gint" "char_offset")
  )
)

(define-method _next_could_contain_tag
  (of-object "GtkTextLine")
  (c-name "_gtk_text_line_next_could_contain_tag")
  (return-type "GtkTextLine*")
  (parameters
    '("GtkTextBTree*" "tree")
    '("GtkTextTag*" "tag")
  )
)

(define-method _previous_could_contain_tag
  (of-object "GtkTextLine")
  (c-name "_gtk_text_line_previous_could_contain_tag")
  (return-type "GtkTextLine*")
  (parameters
    '("GtkTextBTree*" "tree")
    '("GtkTextTag*" "tag")
  )
)

(define-function _gtk_text_line_data_new
  (c-name "_gtk_text_line_data_new")
  (is-constructor-of "GtkTextLineData")
  (return-type "GtkTextLineData*")
  (parameters
    '("GtkTextLayout*" "layout")
    '("GtkTextLine*" "line")
  )
)

(define-method _check
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_check")
  (return-type "none")
)

(define-method _spew
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_spew")
  (return-type "none")
)

(define-function _gtk_toggle_segment_check_func
  (c-name "_gtk_toggle_segment_check_func")
  (return-type "none")
  (parameters
    '("GtkTextLineSegment*" "segPtr")
    '("GtkTextLine*" "line")
  )
)

(define-function _gtk_change_node_toggle_count
  (c-name "_gtk_change_node_toggle_count")
  (return-type "none")
  (parameters
    '("GtkTextBTreeNode*" "node")
    '("GtkTextTagInfo*" "info")
    '("gint" "delta")
  )
)

(define-method _release_mark_segment
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_release_mark_segment")
  (return-type "none")
  (parameters
    '("GtkTextLineSegment*" "segment")
  )
)

(define-method _notify_will_remove_tag
  (of-object "GtkTextBTree")
  (c-name "_gtk_text_btree_notify_will_remove_tag")
  (return-type "none")
  (parameters
    '("GtkTextTag*" "tag")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktextbuffer.h

(define-function gtk_text_buffer_get_type
  (c-name "gtk_text_buffer_get_type")
  (return-type "GType")
)

(define-function gtk_text_buffer_new
  (c-name "gtk_text_buffer_new")
  (is-constructor-of "GtkTextBuffer")
  (return-type "GtkTextBuffer*")
  (parameters
    '("GtkTextTagTable*" "table")
  )
)

(define-method get_line_count
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_line_count")
  (return-type "gint")
)

(define-method get_char_count
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_char_count")
  (return-type "gint")
)

(define-method get_tag_table
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_tag_table")
  (return-type "GtkTextTagTable*")
)

(define-method set_text
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_set_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "text")
    '("gint" "len")
  )
)

(define-method insert
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_insert")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("const-gchar*" "text")
    '("gint" "len")
  )
)

(define-method insert_at_cursor
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_insert_at_cursor")
  (return-type "none")
  (parameters
    '("const-gchar*" "text")
    '("gint" "len")
  )
)

(define-method insert_interactive
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_insert_interactive")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter")
    '("const-gchar*" "text")
    '("gint" "len")
    '("gboolean" "default_editable")
  )
)

(define-method insert_interactive_at_cursor
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_insert_interactive_at_cursor")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "text")
    '("gint" "len")
    '("gboolean" "default_editable")
  )
)

(define-method insert_range
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_insert_range")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("const-GtkTextIter*" "start")
    '("const-GtkTextIter*" "end")
  )
)

(define-method insert_range_interactive
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_insert_range_interactive")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter")
    '("const-GtkTextIter*" "start")
    '("const-GtkTextIter*" "end")
    '("gboolean" "default_editable")
  )
)

(define-method insert_with_tags
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_insert_with_tags")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("const-gchar*" "text")
    '("gint" "len")
    '("GtkTextTag*" "first_tag")
  )
  (varargs #t)
)

(define-method insert_with_tags_by_name
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_insert_with_tags_by_name")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("const-gchar*" "text")
    '("gint" "len")
    '("const-gchar*" "first_tag_name")
  )
  (varargs #t)
)

(define-method delete
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_delete")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "start")
    '("GtkTextIter*" "end")
  )
)

(define-method delete_interactive
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_delete_interactive")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "start_iter")
    '("GtkTextIter*" "end_iter")
    '("gboolean" "default_editable")
  )
)

(define-method get_text
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_text")
  (return-type "gchar*")
  (parameters
    '("const-GtkTextIter*" "start")
    '("const-GtkTextIter*" "end")
    '("gboolean" "include_hidden_chars")
  )
)

(define-method get_slice
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_slice")
  (return-type "gchar*")
  (parameters
    '("const-GtkTextIter*" "start")
    '("const-GtkTextIter*" "end")
    '("gboolean" "include_hidden_chars")
  )
)

(define-method insert_pixbuf
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_insert_pixbuf")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("GdkPixbuf*" "pixbuf")
  )
)

(define-method insert_child_anchor
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_insert_child_anchor")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("GtkTextChildAnchor*" "anchor")
  )
)

(define-method create_child_anchor
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_create_child_anchor")
  (return-type "GtkTextChildAnchor*")
  (parameters
    '("GtkTextIter*" "iter")
  )
)

(define-method create_mark
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_create_mark")
  (return-type "GtkTextMark*")
  (parameters
    '("const-gchar*" "mark_name")
    '("const-GtkTextIter*" "where")
    '("gboolean" "left_gravity")
  )
)

(define-method move_mark
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_move_mark")
  (return-type "none")
  (parameters
    '("GtkTextMark*" "mark")
    '("const-GtkTextIter*" "where")
  )
)

(define-method delete_mark
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_delete_mark")
  (return-type "none")
  (parameters
    '("GtkTextMark*" "mark")
  )
)

(define-method get_mark
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_mark")
  (return-type "GtkTextMark*")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method move_mark_by_name
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_move_mark_by_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
    '("const-GtkTextIter*" "where")
  )
)

(define-method delete_mark_by_name
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_delete_mark_by_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method get_insert
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_insert")
  (return-type "GtkTextMark*")
)

(define-method get_selection_bound
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_selection_bound")
  (return-type "GtkTextMark*")
)

(define-method place_cursor
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_place_cursor")
  (return-type "none")
  (parameters
    '("const-GtkTextIter*" "where")
  )
)

(define-method select_range
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_select_range")
  (return-type "none")
  (parameters
    '("const-GtkTextIter*" "ins")
    '("const-GtkTextIter*" "bound")
  )
)

(define-method apply_tag
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_apply_tag")
  (return-type "none")
  (parameters
    '("GtkTextTag*" "tag")
    '("const-GtkTextIter*" "start")
    '("const-GtkTextIter*" "end")
  )
)

(define-method remove_tag
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_remove_tag")
  (return-type "none")
  (parameters
    '("GtkTextTag*" "tag")
    '("const-GtkTextIter*" "start")
    '("const-GtkTextIter*" "end")
  )
)

(define-method apply_tag_by_name
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_apply_tag_by_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
    '("const-GtkTextIter*" "start")
    '("const-GtkTextIter*" "end")
  )
)

(define-method remove_tag_by_name
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_remove_tag_by_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
    '("const-GtkTextIter*" "start")
    '("const-GtkTextIter*" "end")
  )
)

(define-method remove_all_tags
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_remove_all_tags")
  (return-type "none")
  (parameters
    '("const-GtkTextIter*" "start")
    '("const-GtkTextIter*" "end")
  )
)

(define-method create_tag
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_create_tag")
  (return-type "GtkTextTag*")
  (parameters
    '("const-gchar*" "tag_name")
    '("const-gchar*" "first_property_name")
  )
  (varargs #t)
)

(define-method get_iter_at_line_offset
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_iter_at_line_offset")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("gint" "line_number")
    '("gint" "char_offset")
  )
)

(define-method get_iter_at_line_index
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_iter_at_line_index")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("gint" "line_number")
    '("gint" "byte_index")
  )
)

(define-method get_iter_at_offset
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_iter_at_offset")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("gint" "char_offset")
  )
)

(define-method get_iter_at_line
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_iter_at_line")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("gint" "line_number")
  )
)

(define-method get_start_iter
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_start_iter")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
  )
)

(define-method get_end_iter
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_end_iter")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
  )
)

(define-method get_bounds
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_bounds")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "start")
    '("GtkTextIter*" "end")
  )
)

(define-method get_iter_at_mark
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_iter_at_mark")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("GtkTextMark*" "mark")
  )
)

(define-method get_iter_at_child_anchor
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_iter_at_child_anchor")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("GtkTextChildAnchor*" "anchor")
  )
)

(define-method get_modified
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_modified")
  (return-type "gboolean")
)

(define-method set_modified
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_set_modified")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method add_selection_clipboard
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_add_selection_clipboard")
  (return-type "none")
  (parameters
    '("GtkClipboard*" "clipboard")
  )
)

(define-method remove_selection_clipboard
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_remove_selection_clipboard")
  (return-type "none")
  (parameters
    '("GtkClipboard*" "clipboard")
  )
)

(define-method cut_clipboard
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_cut_clipboard")
  (return-type "none")
  (parameters
    '("GtkClipboard*" "clipboard")
    '("gboolean" "default_editable")
  )
)

(define-method copy_clipboard
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_copy_clipboard")
  (return-type "none")
  (parameters
    '("GtkClipboard*" "clipboard")
  )
)

(define-method paste_clipboard
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_paste_clipboard")
  (return-type "none")
  (parameters
    '("GtkClipboard*" "clipboard")
    '("GtkTextIter*" "override_location")
    '("gboolean" "default_editable")
  )
)

(define-method get_selection_bounds
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_get_selection_bounds")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "start")
    '("GtkTextIter*" "end")
  )
)

(define-method delete_selection
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_delete_selection")
  (return-type "gboolean")
  (parameters
    '("gboolean" "interactive")
    '("gboolean" "default_editable")
  )
)

(define-method begin_user_action
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_begin_user_action")
  (return-type "none")
)

(define-method end_user_action
  (of-object "GtkTextBuffer")
  (c-name "gtk_text_buffer_end_user_action")
  (return-type "none")
)

(define-method _spew
  (of-object "GtkTextBuffer")
  (c-name "_gtk_text_buffer_spew")
  (return-type "none")
)

(define-method _get_btree
  (of-object "GtkTextBuffer")
  (c-name "_gtk_text_buffer_get_btree")
  (return-type "GtkTextBTree*")
)

(define-method _get_line_log_attrs
  (of-object "GtkTextBuffer")
  (c-name "_gtk_text_buffer_get_line_log_attrs")
  (return-type "const-PangoLogAttr*")
  (parameters
    '("const-GtkTextIter*" "anywhere_in_line")
    '("gint*" "char_len")
  )
)

(define-method _notify_will_remove_tag
  (of-object "GtkTextBuffer")
  (c-name "_gtk_text_buffer_notify_will_remove_tag")
  (return-type "none")
  (parameters
    '("GtkTextTag*" "tag")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktextchild.h

(define-function gtk_text_child_anchor_get_type
  (c-name "gtk_text_child_anchor_get_type")
  (return-type "GType")
)

(define-function gtk_text_child_anchor_new
  (c-name "gtk_text_child_anchor_new")
  (is-constructor-of "GtkTextChildAnchor")
  (return-type "GtkTextChildAnchor*")
)

(define-method get_widgets
  (of-object "GtkTextChildAnchor")
  (c-name "gtk_text_child_anchor_get_widgets")
  (return-type "GList*")
)

(define-method get_deleted
  (of-object "GtkTextChildAnchor")
  (c-name "gtk_text_child_anchor_get_deleted")
  (return-type "gboolean")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktextchildprivate.h

(define-function _gtk_pixbuf_segment_new
  (c-name "_gtk_pixbuf_segment_new")
  (is-constructor-of "GtkPixbufSegment")
  (return-type "GtkTextLineSegment*")
  (parameters
    '("GdkPixbuf*" "pixbuf")
  )
)

(define-function _gtk_widget_segment_new
  (c-name "_gtk_widget_segment_new")
  (is-constructor-of "GtkWidgetSegment")
  (return-type "GtkTextLineSegment*")
  (parameters
    '("GtkTextChildAnchor*" "anchor")
  )
)

(define-function _gtk_widget_segment_add
  (c-name "_gtk_widget_segment_add")
  (return-type "none")
  (parameters
    '("GtkTextLineSegment*" "widget_segment")
    '("GtkWidget*" "child")
  )
)

(define-function _gtk_widget_segment_remove
  (c-name "_gtk_widget_segment_remove")
  (return-type "none")
  (parameters
    '("GtkTextLineSegment*" "widget_segment")
    '("GtkWidget*" "child")
  )
)

(define-function _gtk_widget_segment_ref
  (c-name "_gtk_widget_segment_ref")
  (return-type "none")
  (parameters
    '("GtkTextLineSegment*" "widget_segment")
  )
)

(define-function _gtk_widget_segment_unref
  (c-name "_gtk_widget_segment_unref")
  (return-type "none")
  (parameters
    '("GtkTextLineSegment*" "widget_segment")
  )
)

(define-function _gtk_anchored_child_get_layout
  (c-name "_gtk_anchored_child_get_layout")
  (return-type "GtkTextLayout*")
  (parameters
    '("GtkWidget*" "child")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktextdisplay.h



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktext.h

(define-function gtk_text_get_type
  (c-name "gtk_text_get_type")
  (return-type "GtkType")
)

(define-function gtk_text_new
  (c-name "gtk_text_new")
  (is-constructor-of "GtkText")
  (return-type "GtkWidget*")
  (parameters
    '("GtkAdjustment*" "hadj")
    '("GtkAdjustment*" "vadj")
  )
)

(define-method set_editable
  (of-object "GtkText")
  (c-name "gtk_text_set_editable")
  (return-type "none")
  (parameters
    '("gboolean" "editable")
  )
)

(define-method set_word_wrap
  (of-object "GtkText")
  (c-name "gtk_text_set_word_wrap")
  (return-type "none")
  (parameters
    '("gboolean" "word_wrap")
  )
)

(define-method set_line_wrap
  (of-object "GtkText")
  (c-name "gtk_text_set_line_wrap")
  (return-type "none")
  (parameters
    '("gboolean" "line_wrap")
  )
)

(define-method set_adjustments
  (of-object "GtkText")
  (c-name "gtk_text_set_adjustments")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "hadj")
    '("GtkAdjustment*" "vadj")
  )
)

(define-method set_point
  (of-object "GtkText")
  (c-name "gtk_text_set_point")
  (return-type "none")
  (parameters
    '("guint" "index")
  )
)

(define-method get_point
  (of-object "GtkText")
  (c-name "gtk_text_get_point")
  (return-type "guint")
)

(define-method get_length
  (of-object "GtkText")
  (c-name "gtk_text_get_length")
  (return-type "guint")
)

(define-method freeze
  (of-object "GtkText")
  (c-name "gtk_text_freeze")
  (return-type "none")
)

(define-method thaw
  (of-object "GtkText")
  (c-name "gtk_text_thaw")
  (return-type "none")
)

(define-method insert
  (of-object "GtkText")
  (c-name "gtk_text_insert")
  (return-type "none")
  (parameters
    '("GdkFont*" "font")
    '("GdkColor*" "fore")
    '("GdkColor*" "back")
    '("const-char*" "chars")
    '("gint" "length")
  )
)

(define-method backward_delete
  (of-object "GtkText")
  (c-name "gtk_text_backward_delete")
  (return-type "gboolean")
  (parameters
    '("guint" "nchars")
  )
)

(define-method forward_delete
  (of-object "GtkText")
  (c-name "gtk_text_forward_delete")
  (return-type "gboolean")
  (parameters
    '("guint" "nchars")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktextiter.h

(define-method get_buffer
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_buffer")
  (return-type "GtkTextBuffer*")
)

(define-method copy
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_copy")
  (return-type "GtkTextIter*")
)

(define-method free
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_free")
  (return-type "none")
)

(define-function gtk_text_iter_get_type
  (c-name "gtk_text_iter_get_type")
  (return-type "GType")
)

(define-method get_offset
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_offset")
  (return-type "gint")
)

(define-method get_line
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_line")
  (return-type "gint")
)

(define-method get_line_offset
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_line_offset")
  (return-type "gint")
)

(define-method get_line_index
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_line_index")
  (return-type "gint")
)

(define-method get_visible_line_offset
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_visible_line_offset")
  (return-type "gint")
)

(define-method get_visible_line_index
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_visible_line_index")
  (return-type "gint")
)

(define-method get_char
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_char")
  (return-type "gunichar")
)

(define-method get_slice
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_slice")
  (return-type "gchar*")
  (parameters
    '("const-GtkTextIter*" "end")
  )
)

(define-method get_text
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_text")
  (return-type "gchar*")
  (parameters
    '("const-GtkTextIter*" "end")
  )
)

(define-method get_visible_slice
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_visible_slice")
  (return-type "gchar*")
  (parameters
    '("const-GtkTextIter*" "end")
  )
)

(define-method get_visible_text
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_visible_text")
  (return-type "gchar*")
  (parameters
    '("const-GtkTextIter*" "end")
  )
)

(define-method get_pixbuf
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_pixbuf")
  (return-type "GdkPixbuf*")
)

(define-method get_marks
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_marks")
  (return-type "GSList*")
)

(define-method get_child_anchor
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_child_anchor")
  (return-type "GtkTextChildAnchor*")
)

(define-method get_toggled_tags
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_toggled_tags")
  (return-type "GSList*")
  (parameters
    '("gboolean" "toggled_on")
  )
)

(define-method begins_tag
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_begins_tag")
  (return-type "gboolean")
  (parameters
    '("GtkTextTag*" "tag")
  )
)

(define-method ends_tag
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_ends_tag")
  (return-type "gboolean")
  (parameters
    '("GtkTextTag*" "tag")
  )
)

(define-method toggles_tag
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_toggles_tag")
  (return-type "gboolean")
  (parameters
    '("GtkTextTag*" "tag")
  )
)

(define-method has_tag
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_has_tag")
  (return-type "gboolean")
  (parameters
    '("GtkTextTag*" "tag")
  )
)

(define-method get_tags
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_tags")
  (return-type "GSList*")
)

(define-method editable
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_editable")
  (return-type "gboolean")
  (parameters
    '("gboolean" "default_setting")
  )
)

(define-method can_insert
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_can_insert")
  (return-type "gboolean")
  (parameters
    '("gboolean" "default_editability")
  )
)

(define-method starts_word
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_starts_word")
  (return-type "gboolean")
)

(define-method ends_word
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_ends_word")
  (return-type "gboolean")
)

(define-method inside_word
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_inside_word")
  (return-type "gboolean")
)

(define-method starts_sentence
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_starts_sentence")
  (return-type "gboolean")
)

(define-method ends_sentence
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_ends_sentence")
  (return-type "gboolean")
)

(define-method inside_sentence
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_inside_sentence")
  (return-type "gboolean")
)

(define-method starts_line
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_starts_line")
  (return-type "gboolean")
)

(define-method ends_line
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_ends_line")
  (return-type "gboolean")
)

(define-method is_cursor_position
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_is_cursor_position")
  (return-type "gboolean")
)

(define-method get_chars_in_line
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_chars_in_line")
  (return-type "gint")
)

(define-method get_bytes_in_line
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_bytes_in_line")
  (return-type "gint")
)

(define-method get_attributes
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_attributes")
  (return-type "gboolean")
  (parameters
    '("GtkTextAttributes*" "values")
  )
)

(define-method get_language
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_get_language")
  (return-type "PangoLanguage*")
)

(define-method is_end
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_is_end")
  (return-type "gboolean")
)

(define-method is_start
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_is_start")
  (return-type "gboolean")
)

(define-method forward_char
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_char")
  (return-type "gboolean")
)

(define-method backward_char
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_char")
  (return-type "gboolean")
)

(define-method forward_chars
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_chars")
  (return-type "gboolean")
  (parameters
    '("gint" "count")
  )
)

(define-method backward_chars
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_chars")
  (return-type "gboolean")
  (parameters
    '("gint" "count")
  )
)

(define-method forward_line
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_line")
  (return-type "gboolean")
)

(define-method backward_line
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_line")
  (return-type "gboolean")
)

(define-method forward_lines
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_lines")
  (return-type "gboolean")
  (parameters
    '("gint" "count")
  )
)

(define-method backward_lines
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_lines")
  (return-type "gboolean")
  (parameters
    '("gint" "count")
  )
)

(define-method forward_word_end
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_word_end")
  (return-type "gboolean")
)

(define-method backward_word_start
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_word_start")
  (return-type "gboolean")
)

(define-method forward_word_ends
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_word_ends")
  (return-type "gboolean")
  (parameters
    '("gint" "count")
  )
)

(define-method backward_word_starts
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_word_starts")
  (return-type "gboolean")
  (parameters
    '("gint" "count")
  )
)

(define-method forward_visible_word_end
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_visible_word_end")
  (return-type "gboolean")
)

(define-method backward_visible_word_start
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_visible_word_start")
  (return-type "gboolean")
)

(define-method forward_visible_word_ends
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_visible_word_ends")
  (return-type "gboolean")
  (parameters
    '("gint" "count")
  )
)

(define-method backward_visible_word_starts
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_visible_word_starts")
  (return-type "gboolean")
  (parameters
    '("gint" "count")
  )
)

(define-method forward_sentence_end
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_sentence_end")
  (return-type "gboolean")
)

(define-method backward_sentence_start
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_sentence_start")
  (return-type "gboolean")
)

(define-method forward_sentence_ends
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_sentence_ends")
  (return-type "gboolean")
  (parameters
    '("gint" "count")
  )
)

(define-method backward_sentence_starts
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_sentence_starts")
  (return-type "gboolean")
  (parameters
    '("gint" "count")
  )
)

(define-method forward_cursor_position
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_cursor_position")
  (return-type "gboolean")
)

(define-method backward_cursor_position
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_cursor_position")
  (return-type "gboolean")
)

(define-method forward_cursor_positions
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_cursor_positions")
  (return-type "gboolean")
  (parameters
    '("gint" "count")
  )
)

(define-method backward_cursor_positions
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_cursor_positions")
  (return-type "gboolean")
  (parameters
    '("gint" "count")
  )
)

(define-method forward_visible_cursor_position
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_visible_cursor_position")
  (return-type "gboolean")
)

(define-method backward_visible_cursor_position
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_visible_cursor_position")
  (return-type "gboolean")
)

(define-method forward_visible_cursor_positions
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_visible_cursor_positions")
  (return-type "gboolean")
  (parameters
    '("gint" "count")
  )
)

(define-method backward_visible_cursor_positions
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_visible_cursor_positions")
  (return-type "gboolean")
  (parameters
    '("gint" "count")
  )
)

(define-method set_offset
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_set_offset")
  (return-type "none")
  (parameters
    '("gint" "char_offset")
  )
)

(define-method set_line
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_set_line")
  (return-type "none")
  (parameters
    '("gint" "line_number")
  )
)

(define-method set_line_offset
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_set_line_offset")
  (return-type "none")
  (parameters
    '("gint" "char_on_line")
  )
)

(define-method set_line_index
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_set_line_index")
  (return-type "none")
  (parameters
    '("gint" "byte_on_line")
  )
)

(define-method forward_to_end
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_to_end")
  (return-type "none")
)

(define-method forward_to_line_end
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_to_line_end")
  (return-type "gboolean")
)

(define-method set_visible_line_offset
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_set_visible_line_offset")
  (return-type "none")
  (parameters
    '("gint" "char_on_line")
  )
)

(define-method set_visible_line_index
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_set_visible_line_index")
  (return-type "none")
  (parameters
    '("gint" "byte_on_line")
  )
)

(define-method forward_to_tag_toggle
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_to_tag_toggle")
  (return-type "gboolean")
  (parameters
    '("GtkTextTag*" "tag")
  )
)

(define-method backward_to_tag_toggle
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_to_tag_toggle")
  (return-type "gboolean")
  (parameters
    '("GtkTextTag*" "tag")
  )
)

(define-method forward_find_char
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_find_char")
  (return-type "gboolean")
  (parameters
    '("GtkTextCharPredicate" "pred")
    '("gpointer" "user_data")
    '("const-GtkTextIter*" "limit")
  )
)

(define-method backward_find_char
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_find_char")
  (return-type "gboolean")
  (parameters
    '("GtkTextCharPredicate" "pred")
    '("gpointer" "user_data")
    '("const-GtkTextIter*" "limit")
  )
)

(define-method forward_search
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_forward_search")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "str")
    '("GtkTextSearchFlags" "flags")
    '("GtkTextIter*" "match_start")
    '("GtkTextIter*" "match_end")
    '("const-GtkTextIter*" "limit")
  )
)

(define-method backward_search
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_backward_search")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "str")
    '("GtkTextSearchFlags" "flags")
    '("GtkTextIter*" "match_start")
    '("GtkTextIter*" "match_end")
    '("const-GtkTextIter*" "limit")
  )
)

(define-method equal
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_equal")
  (return-type "gboolean")
  (parameters
    '("const-GtkTextIter*" "rhs")
  )
)

(define-method compare
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_compare")
  (return-type "gint")
  (parameters
    '("const-GtkTextIter*" "rhs")
  )
)

(define-method in_range
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_in_range")
  (return-type "gboolean")
  (parameters
    '("const-GtkTextIter*" "start")
    '("const-GtkTextIter*" "end")
  )
)

(define-method order
  (of-object "GtkTextIter")
  (c-name "gtk_text_iter_order")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "second")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktextiterprivate.h

(define-method _get_any_segment
  (of-object "GtkTextIter")
  (c-name "_gtk_text_iter_get_any_segment")
  (return-type "GtkTextLineSegment*")
)

(define-method _get_text_line
  (of-object "GtkTextIter")
  (c-name "_gtk_text_iter_get_text_line")
  (return-type "GtkTextLine*")
)

(define-method _get_btree
  (of-object "GtkTextIter")
  (c-name "_gtk_text_iter_get_btree")
  (return-type "GtkTextBTree*")
)

(define-method _forward_indexable_segment
  (of-object "GtkTextIter")
  (c-name "_gtk_text_iter_forward_indexable_segment")
  (return-type "gboolean")
)

(define-method _backward_indexable_segment
  (of-object "GtkTextIter")
  (c-name "_gtk_text_iter_backward_indexable_segment")
  (return-type "gboolean")
)

(define-method _get_segment_byte
  (of-object "GtkTextIter")
  (c-name "_gtk_text_iter_get_segment_byte")
  (return-type "gint")
)

(define-method _get_segment_char
  (of-object "GtkTextIter")
  (c-name "_gtk_text_iter_get_segment_char")
  (return-type "gint")
)

(define-method _check
  (of-object "GtkTextIter")
  (c-name "_gtk_text_iter_check")
  (return-type "none")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktextlayout.h

(define-function gtk_text_layout_get_type
  (c-name "gtk_text_layout_get_type")
  (return-type "GType")
)

(define-function gtk_text_layout_new
  (c-name "gtk_text_layout_new")
  (is-constructor-of "GtkTextLayout")
  (return-type "GtkTextLayout*")
)

(define-method set_buffer
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_set_buffer")
  (return-type "none")
  (parameters
    '("GtkTextBuffer*" "buffer")
  )
)

(define-method get_buffer
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_get_buffer")
  (return-type "GtkTextBuffer*")
)

(define-method set_default_style
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_set_default_style")
  (return-type "none")
  (parameters
    '("GtkTextAttributes*" "values")
  )
)

(define-method set_contexts
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_set_contexts")
  (return-type "none")
  (parameters
    '("PangoContext*" "ltr_context")
    '("PangoContext*" "rtl_context")
  )
)

(define-method set_cursor_direction
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_set_cursor_direction")
  (return-type "none")
  (parameters
    '("GtkTextDirection" "direction")
  )
)

(define-method default_style_changed
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_default_style_changed")
  (return-type "none")
)

(define-method set_screen_width
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_set_screen_width")
  (return-type "none")
  (parameters
    '("gint" "width")
  )
)

(define-method set_preedit_string
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_set_preedit_string")
  (return-type "none")
  (parameters
    '("const-gchar*" "preedit_string")
    '("PangoAttrList*" "preedit_attrs")
    '("gint" "cursor_pos")
  )
)

(define-method set_cursor_visible
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_set_cursor_visible")
  (return-type "none")
  (parameters
    '("gboolean" "cursor_visible")
  )
)

(define-method get_cursor_visible
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_get_cursor_visible")
  (return-type "gboolean")
)

(define-method get_size
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_get_size")
  (return-type "none")
  (parameters
    '("gint*" "width")
    '("gint*" "height")
  )
)

(define-method get_lines
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_get_lines")
  (return-type "GSList*")
  (parameters
    '("gint" "top_y")
    '("gint" "bottom_y")
    '("gint*" "first_line_y")
  )
)

(define-method wrap_loop_start
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_wrap_loop_start")
  (return-type "none")
)

(define-method wrap_loop_end
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_wrap_loop_end")
  (return-type "none")
)

(define-method get_line_display
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_get_line_display")
  (return-type "GtkTextLineDisplay*")
  (parameters
    '("GtkTextLine*" "line")
    '("gboolean" "size_only")
  )
)

(define-method free_line_display
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_free_line_display")
  (return-type "none")
  (parameters
    '("GtkTextLineDisplay*" "display")
  )
)

(define-method get_line_at_y
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_get_line_at_y")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "target_iter")
    '("gint" "y")
    '("gint*" "line_top")
  )
)

(define-method get_iter_at_pixel
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_get_iter_at_pixel")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("gint" "x")
    '("gint" "y")
  )
)

(define-method invalidate
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_invalidate")
  (return-type "none")
  (parameters
    '("const-GtkTextIter*" "start")
    '("const-GtkTextIter*" "end")
  )
)

(define-method free_line_data
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_free_line_data")
  (return-type "none")
  (parameters
    '("GtkTextLine*" "line")
    '("GtkTextLineData*" "line_data")
  )
)

(define-method is_valid
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_is_valid")
  (return-type "gboolean")
)

(define-method validate_yrange
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_validate_yrange")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "anchor_line")
    '("gint" "y0_")
    '("gint" "y1_")
  )
)

(define-method validate
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_validate")
  (return-type "none")
  (parameters
    '("gint" "max_pixels")
  )
)

(define-method wrap
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_wrap")
  (return-type "GtkTextLineData*")
  (parameters
    '("GtkTextLine*" "line")
    '("GtkTextLineData*" "line_data")
  )
)

(define-method changed
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_changed")
  (return-type "none")
  (parameters
    '("gint" "y")
    '("gint" "old_height")
    '("gint" "new_height")
  )
)

(define-method get_iter_location
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_get_iter_location")
  (return-type "none")
  (parameters
    '("const-GtkTextIter*" "iter")
    '("GdkRectangle*" "rect")
  )
)

(define-method get_line_yrange
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_get_line_yrange")
  (return-type "none")
  (parameters
    '("const-GtkTextIter*" "iter")
    '("gint*" "y")
    '("gint*" "height")
  )
)

(define-method _get_line_xrange
  (of-object "GtkTextLayout")
  (c-name "_gtk_text_layout_get_line_xrange")
  (return-type "none")
  (parameters
    '("const-GtkTextIter*" "iter")
    '("gint*" "x")
    '("gint*" "width")
  )
)

(define-method get_cursor_locations
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_get_cursor_locations")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("GdkRectangle*" "strong_pos")
    '("GdkRectangle*" "weak_pos")
  )
)

(define-method clamp_iter_to_vrange
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_clamp_iter_to_vrange")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter")
    '("gint" "top")
    '("gint" "bottom")
  )
)

(define-method move_iter_to_line_end
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_move_iter_to_line_end")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter")
    '("gint" "direction")
  )
)

(define-method move_iter_to_previous_line
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_move_iter_to_previous_line")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter")
  )
)

(define-method move_iter_to_next_line
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_move_iter_to_next_line")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter")
  )
)

(define-method move_iter_to_x
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_move_iter_to_x")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("gint" "x")
  )
)

(define-method move_iter_visually
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_move_iter_visually")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter")
    '("gint" "count")
  )
)

(define-method iter_starts_line
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_iter_starts_line")
  (return-type "gboolean")
  (parameters
    '("const-GtkTextIter*" "iter")
  )
)

(define-method get_iter_at_line
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_get_iter_at_line")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("GtkTextLine*" "line")
    '("gint" "byte_offset")
  )
)

(define-method register_child
  (of-object "GtkTextChildAnchor")
  (c-name "gtk_text_child_anchor_register_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("GtkTextLayout*" "layout")
  )
)

(define-method unregister_child
  (of-object "GtkTextChildAnchor")
  (c-name "gtk_text_child_anchor_unregister_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method queue_resize
  (of-object "GtkTextChildAnchor")
  (c-name "gtk_text_child_anchor_queue_resize")
  (return-type "none")
  (parameters
    '("GtkTextLayout*" "layout")
  )
)

(define-function gtk_text_anchored_child_set_layout
  (c-name "gtk_text_anchored_child_set_layout")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("GtkTextLayout*" "layout")
  )
)

(define-method spew
  (of-object "GtkTextLayout")
  (c-name "gtk_text_layout_spew")
  (return-type "none")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktextmark.h

(define-function gtk_text_mark_get_type
  (c-name "gtk_text_mark_get_type")
  (return-type "GType")
)

(define-method set_visible
  (of-object "GtkTextMark")
  (c-name "gtk_text_mark_set_visible")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_visible
  (of-object "GtkTextMark")
  (c-name "gtk_text_mark_get_visible")
  (return-type "gboolean")
)

(define-method get_name
  (of-object "GtkTextMark")
  (c-name "gtk_text_mark_get_name")
  (return-type "const-gchar*")
)

(define-method get_deleted
  (of-object "GtkTextMark")
  (c-name "gtk_text_mark_get_deleted")
  (return-type "gboolean")
)

(define-method get_buffer
  (of-object "GtkTextMark")
  (c-name "gtk_text_mark_get_buffer")
  (return-type "GtkTextBuffer*")
)

(define-method get_left_gravity
  (of-object "GtkTextMark")
  (c-name "gtk_text_mark_get_left_gravity")
  (return-type "gboolean")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktextmarkprivate.h

(define-function _gtk_mark_segment_new
  (c-name "_gtk_mark_segment_new")
  (is-constructor-of "GtkMarkSegment")
  (return-type "GtkTextLineSegment*")
  (parameters
    '("GtkTextBTree*" "tree")
    '("gboolean" "left_gravity")
    '("const-gchar*" "name")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktextsegment.h

(define-function gtk_text_line_segment_split
  (c-name "gtk_text_line_segment_split")
  (return-type "GtkTextLineSegment*")
  (parameters
    '("const-GtkTextIter*" "iter")
  )
)

(define-function _gtk_char_segment_new
  (c-name "_gtk_char_segment_new")
  (is-constructor-of "GtkCharSegment")
  (return-type "GtkTextLineSegment*")
  (parameters
    '("const-gchar*" "text")
    '("guint" "len")
  )
)

(define-function _gtk_char_segment_new_from_two_strings
  (c-name "_gtk_char_segment_new_from_two_strings")
  (return-type "GtkTextLineSegment*")
  (parameters
    '("const-gchar*" "text1")
    '("guint" "len1")
    '("const-gchar*" "text2")
    '("guint" "len2")
  )
)

(define-function _gtk_toggle_segment_new
  (c-name "_gtk_toggle_segment_new")
  (is-constructor-of "GtkToggleSegment")
  (return-type "GtkTextLineSegment*")
  (parameters
    '("GtkTextTagInfo*" "info")
    '("gboolean" "on")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktexttag.h

(define-function gtk_text_tag_get_type
  (c-name "gtk_text_tag_get_type")
  (return-type "GType")
)

(define-function gtk_text_tag_new
  (c-name "gtk_text_tag_new")
  (is-constructor-of "GtkTextTag")
  (return-type "GtkTextTag*")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method get_priority
  (of-object "GtkTextTag")
  (c-name "gtk_text_tag_get_priority")
  (return-type "gint")
)

(define-method set_priority
  (of-object "GtkTextTag")
  (c-name "gtk_text_tag_set_priority")
  (return-type "none")
  (parameters
    '("gint" "priority")
  )
)

(define-method event
  (of-object "GtkTextTag")
  (c-name "gtk_text_tag_event")
  (return-type "gboolean")
  (parameters
    '("GObject*" "event_object")
    '("GdkEvent*" "event")
    '("const-GtkTextIter*" "iter")
  )
)

(define-function gtk_text_attributes_new
  (c-name "gtk_text_attributes_new")
  (is-constructor-of "GtkTextAttributes")
  (return-type "GtkTextAttributes*")
)

(define-method copy
  (of-object "GtkTextAttributes")
  (c-name "gtk_text_attributes_copy")
  (return-type "GtkTextAttributes*")
)

(define-method copy_values
  (of-object "GtkTextAttributes")
  (c-name "gtk_text_attributes_copy_values")
  (return-type "none")
  (parameters
    '("GtkTextAttributes*" "dest")
  )
)

(define-method unref
  (of-object "GtkTextAttributes")
  (c-name "gtk_text_attributes_unref")
  (return-type "none")
)

(define-method ref
  (of-object "GtkTextAttributes")
  (c-name "gtk_text_attributes_ref")
  (return-type "none")
)

(define-function gtk_text_attributes_get_type
  (c-name "gtk_text_attributes_get_type")
  (return-type "GType")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktexttagprivate.h

(define-method _fill_from_tags
  (of-object "GtkTextAttributes")
  (c-name "_gtk_text_attributes_fill_from_tags")
  (return-type "none")
  (parameters
    '("GtkTextTag**" "tags")
    '("guint" "n_tags")
  )
)

(define-function _gtk_text_tag_array_sort
  (c-name "_gtk_text_tag_array_sort")
  (return-type "none")
  (parameters
    '("GtkTextTag**" "tag_array_p")
    '("guint" "len")
  )
)

(define-method _realize
  (of-object "GtkTextAttributes")
  (c-name "_gtk_text_attributes_realize")
  (return-type "none")
  (parameters
    '("GdkColormap*" "cmap")
    '("GdkVisual*" "visual")
  )
)

(define-method _unrealize
  (of-object "GtkTextAttributes")
  (c-name "_gtk_text_attributes_unrealize")
  (return-type "none")
  (parameters
    '("GdkColormap*" "cmap")
    '("GdkVisual*" "visual")
  )
)

(define-method _affects_size
  (of-object "GtkTextTag")
  (c-name "_gtk_text_tag_affects_size")
  (return-type "gboolean")
)

(define-method _affects_nonsize_appearance
  (of-object "GtkTextTag")
  (c-name "_gtk_text_tag_affects_nonsize_appearance")
  (return-type "gboolean")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktexttagtable.h

(define-function gtk_text_tag_table_get_type
  (c-name "gtk_text_tag_table_get_type")
  (return-type "GType")
)

(define-function gtk_text_tag_table_new
  (c-name "gtk_text_tag_table_new")
  (is-constructor-of "GtkTextTagTable")
  (return-type "GtkTextTagTable*")
)

(define-method add
  (of-object "GtkTextTagTable")
  (c-name "gtk_text_tag_table_add")
  (return-type "none")
  (parameters
    '("GtkTextTag*" "tag")
  )
)

(define-method remove
  (of-object "GtkTextTagTable")
  (c-name "gtk_text_tag_table_remove")
  (return-type "none")
  (parameters
    '("GtkTextTag*" "tag")
  )
)

(define-method lookup
  (of-object "GtkTextTagTable")
  (c-name "gtk_text_tag_table_lookup")
  (return-type "GtkTextTag*")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method foreach
  (of-object "GtkTextTagTable")
  (c-name "gtk_text_tag_table_foreach")
  (return-type "none")
  (parameters
    '("GtkTextTagTableForeach" "func")
    '("gpointer" "data")
  )
)

(define-method get_size
  (of-object "GtkTextTagTable")
  (c-name "gtk_text_tag_table_get_size")
  (return-type "gint")
)

(define-method _add_buffer
  (of-object "GtkTextTagTable")
  (c-name "_gtk_text_tag_table_add_buffer")
  (return-type "none")
  (parameters
    '("gpointer" "buffer")
  )
)

(define-method _remove_buffer
  (of-object "GtkTextTagTable")
  (c-name "_gtk_text_tag_table_remove_buffer")
  (return-type "none")
  (parameters
    '("gpointer" "buffer")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktexttypes.h

(define-function gtk_text_byte_begins_utf8_char
  (c-name "gtk_text_byte_begins_utf8_char")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "byte")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktextutil.h



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktextview.h

(define-function gtk_text_view_get_type
  (c-name "gtk_text_view_get_type")
  (return-type "GType")
)

(define-function gtk_text_view_new
  (c-name "gtk_text_view_new")
  (is-constructor-of "GtkTextView")
  (return-type "GtkWidget*")
)

(define-function gtk_text_view_new_with_buffer
  (c-name "gtk_text_view_new_with_buffer")
  (return-type "GtkWidget*")
  (parameters
    '("GtkTextBuffer*" "buffer")
  )
)

(define-method set_buffer
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_buffer")
  (return-type "none")
  (parameters
    '("GtkTextBuffer*" "buffer")
  )
)

(define-method get_buffer
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_buffer")
  (return-type "GtkTextBuffer*")
)

(define-method scroll_to_iter
  (of-object "GtkTextView")
  (c-name "gtk_text_view_scroll_to_iter")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter")
    '("gdouble" "within_margin")
    '("gboolean" "use_align")
    '("gdouble" "xalign")
    '("gdouble" "yalign")
  )
)

(define-method scroll_to_mark
  (of-object "GtkTextView")
  (c-name "gtk_text_view_scroll_to_mark")
  (return-type "none")
  (parameters
    '("GtkTextMark*" "mark")
    '("gdouble" "within_margin")
    '("gboolean" "use_align")
    '("gdouble" "xalign")
    '("gdouble" "yalign")
  )
)

(define-method scroll_mark_onscreen
  (of-object "GtkTextView")
  (c-name "gtk_text_view_scroll_mark_onscreen")
  (return-type "none")
  (parameters
    '("GtkTextMark*" "mark")
  )
)

(define-method move_mark_onscreen
  (of-object "GtkTextView")
  (c-name "gtk_text_view_move_mark_onscreen")
  (return-type "gboolean")
  (parameters
    '("GtkTextMark*" "mark")
  )
)

(define-method place_cursor_onscreen
  (of-object "GtkTextView")
  (c-name "gtk_text_view_place_cursor_onscreen")
  (return-type "gboolean")
)

(define-method get_visible_rect
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_visible_rect")
  (return-type "none")
  (parameters
    '("GdkRectangle*" "visible_rect")
  )
)

(define-method set_cursor_visible
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_cursor_visible")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_cursor_visible
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_cursor_visible")
  (return-type "gboolean")
)

(define-method get_iter_location
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_iter_location")
  (return-type "none")
  (parameters
    '("const-GtkTextIter*" "iter")
    '("GdkRectangle*" "location")
  )
)

(define-method get_iter_at_location
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_iter_at_location")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "iter")
    '("gint" "x")
    '("gint" "y")
  )
)

(define-method get_line_yrange
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_line_yrange")
  (return-type "none")
  (parameters
    '("const-GtkTextIter*" "iter")
    '("gint*" "y")
    '("gint*" "height")
  )
)

(define-method get_line_at_y
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_line_at_y")
  (return-type "none")
  (parameters
    '("GtkTextIter*" "target_iter")
    '("gint" "y")
    '("gint*" "line_top")
  )
)

(define-method buffer_to_window_coords
  (of-object "GtkTextView")
  (c-name "gtk_text_view_buffer_to_window_coords")
  (return-type "none")
  (parameters
    '("GtkTextWindowType" "win")
    '("gint" "buffer_x")
    '("gint" "buffer_y")
    '("gint*" "window_x")
    '("gint*" "window_y")
  )
)

(define-method window_to_buffer_coords
  (of-object "GtkTextView")
  (c-name "gtk_text_view_window_to_buffer_coords")
  (return-type "none")
  (parameters
    '("GtkTextWindowType" "win")
    '("gint" "window_x")
    '("gint" "window_y")
    '("gint*" "buffer_x")
    '("gint*" "buffer_y")
  )
)

(define-method get_window
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_window")
  (return-type "GdkWindow*")
  (parameters
    '("GtkTextWindowType" "win")
  )
)

(define-method get_window_type
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_window_type")
  (return-type "GtkTextWindowType")
  (parameters
    '("GdkWindow*" "window")
  )
)

(define-method set_border_window_size
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_border_window_size")
  (return-type "none")
  (parameters
    '("GtkTextWindowType" "type")
    '("gint" "size")
  )
)

(define-method get_border_window_size
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_border_window_size")
  (return-type "gint")
  (parameters
    '("GtkTextWindowType" "type")
  )
)

(define-method forward_display_line
  (of-object "GtkTextView")
  (c-name "gtk_text_view_forward_display_line")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter")
  )
)

(define-method backward_display_line
  (of-object "GtkTextView")
  (c-name "gtk_text_view_backward_display_line")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter")
  )
)

(define-method forward_display_line_end
  (of-object "GtkTextView")
  (c-name "gtk_text_view_forward_display_line_end")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter")
  )
)

(define-method backward_display_line_start
  (of-object "GtkTextView")
  (c-name "gtk_text_view_backward_display_line_start")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter")
  )
)

(define-method starts_display_line
  (of-object "GtkTextView")
  (c-name "gtk_text_view_starts_display_line")
  (return-type "gboolean")
  (parameters
    '("const-GtkTextIter*" "iter")
  )
)

(define-method move_visually
  (of-object "GtkTextView")
  (c-name "gtk_text_view_move_visually")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter")
    '("gint" "count")
  )
)

(define-method add_child_at_anchor
  (of-object "GtkTextView")
  (c-name "gtk_text_view_add_child_at_anchor")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("GtkTextChildAnchor*" "anchor")
  )
)

(define-method add_child_in_window
  (of-object "GtkTextView")
  (c-name "gtk_text_view_add_child_in_window")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("GtkTextWindowType" "which_window")
    '("gint" "xpos")
    '("gint" "ypos")
  )
)

(define-method move_child
  (of-object "GtkTextView")
  (c-name "gtk_text_view_move_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
    '("gint" "xpos")
    '("gint" "ypos")
  )
)

(define-method set_wrap_mode
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_wrap_mode")
  (return-type "none")
  (parameters
    '("GtkWrapMode" "wrap_mode")
  )
)

(define-method get_wrap_mode
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_wrap_mode")
  (return-type "GtkWrapMode")
)

(define-method set_editable
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_editable")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_editable
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_editable")
  (return-type "gboolean")
)

(define-method set_overwrite
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_overwrite")
  (return-type "none")
  (parameters
    '("gboolean" "overwrite")
  )
)

(define-method get_overwrite
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_overwrite")
  (return-type "gboolean")
)

(define-method set_accepts_tab
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_accepts_tab")
  (return-type "none")
  (parameters
    '("gboolean" "accepts_tab")
  )
)

(define-method get_accepts_tab
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_accepts_tab")
  (return-type "gboolean")
)

(define-method set_pixels_above_lines
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_pixels_above_lines")
  (return-type "none")
  (parameters
    '("gint" "pixels_above_lines")
  )
)

(define-method get_pixels_above_lines
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_pixels_above_lines")
  (return-type "gint")
)

(define-method set_pixels_below_lines
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_pixels_below_lines")
  (return-type "none")
  (parameters
    '("gint" "pixels_below_lines")
  )
)

(define-method get_pixels_below_lines
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_pixels_below_lines")
  (return-type "gint")
)

(define-method set_pixels_inside_wrap
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_pixels_inside_wrap")
  (return-type "none")
  (parameters
    '("gint" "pixels_inside_wrap")
  )
)

(define-method get_pixels_inside_wrap
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_pixels_inside_wrap")
  (return-type "gint")
)

(define-method set_justification
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_justification")
  (return-type "none")
  (parameters
    '("GtkJustification" "justification")
  )
)

(define-method get_justification
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_justification")
  (return-type "GtkJustification")
)

(define-method set_left_margin
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_left_margin")
  (return-type "none")
  (parameters
    '("gint" "left_margin")
  )
)

(define-method get_left_margin
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_left_margin")
  (return-type "gint")
)

(define-method set_right_margin
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_right_margin")
  (return-type "none")
  (parameters
    '("gint" "right_margin")
  )
)

(define-method get_right_margin
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_right_margin")
  (return-type "gint")
)

(define-method set_indent
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_indent")
  (return-type "none")
  (parameters
    '("gint" "indent")
  )
)

(define-method get_indent
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_indent")
  (return-type "gint")
)

(define-method set_tabs
  (of-object "GtkTextView")
  (c-name "gtk_text_view_set_tabs")
  (return-type "none")
  (parameters
    '("PangoTabArray*" "tabs")
  )
)

(define-method get_tabs
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_tabs")
  (return-type "PangoTabArray*")
)

(define-method get_default_attributes
  (of-object "GtkTextView")
  (c-name "gtk_text_view_get_default_attributes")
  (return-type "GtkTextAttributes*")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkthemes.h

(define-function gtk_theme_engine_get
  (c-name "gtk_theme_engine_get")
  (return-type "GtkThemeEngine*")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method create_rc_style
  (of-object "GtkThemeEngine")
  (c-name "gtk_theme_engine_create_rc_style")
  (return-type "GtkRcStyle*")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktipsquery.h

(define-function gtk_tips_query_get_type
  (c-name "gtk_tips_query_get_type")
  (return-type "GtkType")
)

(define-function gtk_tips_query_new
  (c-name "gtk_tips_query_new")
  (is-constructor-of "GtkTipsQuery")
  (return-type "GtkWidget*")
)

(define-method start_query
  (of-object "GtkTipsQuery")
  (c-name "gtk_tips_query_start_query")
  (return-type "none")
)

(define-method stop_query
  (of-object "GtkTipsQuery")
  (c-name "gtk_tips_query_stop_query")
  (return-type "none")
)

(define-method set_caller
  (of-object "GtkTipsQuery")
  (c-name "gtk_tips_query_set_caller")
  (return-type "none")
  (parameters
    '("GtkWidget*" "caller")
  )
)

(define-method set_labels
  (of-object "GtkTipsQuery")
  (c-name "gtk_tips_query_set_labels")
  (return-type "none")
  (parameters
    '("const-gchar*" "label_inactive")
    '("const-gchar*" "label_no_tip")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktoggleaction.h

(define-function gtk_toggle_action_get_type
  (c-name "gtk_toggle_action_get_type")
  (return-type "GType")
)

(define-method toggled
  (of-object "GtkToggleAction")
  (c-name "gtk_toggle_action_toggled")
  (return-type "none")
)

(define-method set_active
  (of-object "GtkToggleAction")
  (c-name "gtk_toggle_action_set_active")
  (return-type "none")
  (parameters
    '("gboolean" "is_active")
  )
)

(define-method get_active
  (of-object "GtkToggleAction")
  (c-name "gtk_toggle_action_get_active")
  (return-type "gboolean")
)

(define-method set_draw_as_radio
  (of-object "GtkToggleAction")
  (c-name "gtk_toggle_action_set_draw_as_radio")
  (return-type "none")
  (parameters
    '("gboolean" "draw_as_radio")
  )
)

(define-method get_draw_as_radio
  (of-object "GtkToggleAction")
  (c-name "gtk_toggle_action_get_draw_as_radio")
  (return-type "gboolean")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktoggleactionprivate.h



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktogglebutton.h

(define-function gtk_toggle_button_get_type
  (c-name "gtk_toggle_button_get_type")
  (return-type "GType")
)

(define-function gtk_toggle_button_new
  (c-name "gtk_toggle_button_new")
  (is-constructor-of "GtkToggleButton")
  (return-type "GtkWidget*")
)

(define-function gtk_toggle_button_new_with_label
  (c-name "gtk_toggle_button_new_with_label")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "label")
  )
)

(define-function gtk_toggle_button_new_with_mnemonic
  (c-name "gtk_toggle_button_new_with_mnemonic")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "label")
  )
)

(define-method set_mode
  (of-object "GtkToggleButton")
  (c-name "gtk_toggle_button_set_mode")
  (return-type "none")
  (parameters
    '("gboolean" "draw_indicator")
  )
)

(define-method get_mode
  (of-object "GtkToggleButton")
  (c-name "gtk_toggle_button_get_mode")
  (return-type "gboolean")
)

(define-method set_active
  (of-object "GtkToggleButton")
  (c-name "gtk_toggle_button_set_active")
  (return-type "none")
  (parameters
    '("gboolean" "is_active")
  )
)

(define-method get_active
  (of-object "GtkToggleButton")
  (c-name "gtk_toggle_button_get_active")
  (return-type "gboolean")
)

(define-method toggled
  (of-object "GtkToggleButton")
  (c-name "gtk_toggle_button_toggled")
  (return-type "none")
)

(define-method set_inconsistent
  (of-object "GtkToggleButton")
  (c-name "gtk_toggle_button_set_inconsistent")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_inconsistent
  (of-object "GtkToggleButton")
  (c-name "gtk_toggle_button_get_inconsistent")
  (return-type "gboolean")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktoggletoolbutton.h

(define-function gtk_toggle_tool_button_get_type
  (c-name "gtk_toggle_tool_button_get_type")
  (return-type "GType")
)

(define-function gtk_toggle_tool_button_new
  (c-name "gtk_toggle_tool_button_new")
  (is-constructor-of "GtkToggleToolButton")
  (return-type "GtkToolItem*")
)

(define-function gtk_toggle_tool_button_new_from_stock
  (c-name "gtk_toggle_tool_button_new_from_stock")
  (return-type "GtkToolItem*")
  (parameters
    '("const-gchar*" "stock_id")
  )
)

(define-method set_active
  (of-object "GtkToggleToolButton")
  (c-name "gtk_toggle_tool_button_set_active")
  (return-type "none")
  (parameters
    '("gboolean" "is_active")
  )
)

(define-method get_active
  (of-object "GtkToggleToolButton")
  (c-name "gtk_toggle_tool_button_get_active")
  (return-type "gboolean")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktoolbar.h

(define-function gtk_toolbar_get_type
  (c-name "gtk_toolbar_get_type")
  (return-type "GType")
)

(define-function gtk_toolbar_new
  (c-name "gtk_toolbar_new")
  (is-constructor-of "GtkToolbar")
  (return-type "GtkWidget*")
)

(define-method insert
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_insert")
  (return-type "none")
  (parameters
    '("GtkToolItem*" "item")
    '("gint" "pos")
  )
)

(define-method get_item_index
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_get_item_index")
  (return-type "gint")
  (parameters
    '("GtkToolItem*" "item")
  )
)

(define-method get_n_items
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_get_n_items")
  (return-type "gint")
)

(define-method get_nth_item
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_get_nth_item")
  (return-type "GtkToolItem*")
  (parameters
    '("gint" "n")
  )
)

(define-method get_show_arrow
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_get_show_arrow")
  (return-type "gboolean")
)

(define-method set_show_arrow
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_set_show_arrow")
  (return-type "none")
  (parameters
    '("gboolean" "show_arrow")
  )
)

(define-method get_orientation
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_get_orientation")
  (return-type "GtkOrientation")
)

(define-method set_orientation
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_set_orientation")
  (return-type "none")
  (parameters
    '("GtkOrientation" "orientation")
  )
)

(define-method get_tooltips
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_get_tooltips")
  (return-type "gboolean")
)

(define-method set_tooltips
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_set_tooltips")
  (return-type "none")
  (parameters
    '("gboolean" "enable")
  )
)

(define-method get_style
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_get_style")
  (return-type "GtkToolbarStyle")
)

(define-method set_style
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_set_style")
  (return-type "none")
  (parameters
    '("GtkToolbarStyle" "style")
  )
)

(define-method unset_style
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_unset_style")
  (return-type "none")
)

(define-method get_icon_size
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_get_icon_size")
  (return-type "GtkIconSize")
)

(define-method get_relief_style
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_get_relief_style")
  (return-type "GtkReliefStyle")
)

(define-method get_drop_index
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_get_drop_index")
  (return-type "gint")
  (parameters
    '("gint" "x")
    '("gint" "y")
  )
)

(define-method set_drop_highlight_item
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_set_drop_highlight_item")
  (return-type "none")
  (parameters
    '("GtkToolItem*" "tool_item")
    '("gint" "index")
  )
)

(define-function _gtk_toolbar_elide_underscores
  (c-name "_gtk_toolbar_elide_underscores")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "original")
  )
)

(define-method set_icon_size
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_set_icon_size")
  (return-type "none")
  (parameters
    '("GtkIconSize" "icon_size")
  )
)

(define-method unset_icon_size
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_unset_icon_size")
  (return-type "none")
)

(define-method append_item
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_append_item")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "text")
    '("const-char*" "tooltip_text")
    '("const-char*" "tooltip_private_text")
    '("GtkWidget*" "icon")
    '("GtkSignalFunc" "callback")
    '("gpointer" "user_data")
  )
)

(define-method prepend_item
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_prepend_item")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "text")
    '("const-char*" "tooltip_text")
    '("const-char*" "tooltip_private_text")
    '("GtkWidget*" "icon")
    '("GtkSignalFunc" "callback")
    '("gpointer" "user_data")
  )
)

(define-method insert_item
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_insert_item")
  (return-type "GtkWidget*")
  (parameters
    '("const-char*" "text")
    '("const-char*" "tooltip_text")
    '("const-char*" "tooltip_private_text")
    '("GtkWidget*" "icon")
    '("GtkSignalFunc" "callback")
    '("gpointer" "user_data")
    '("gint" "position")
  )
)

(define-method insert_stock
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_insert_stock")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "stock_id")
    '("const-char*" "tooltip_text")
    '("const-char*" "tooltip_private_text")
    '("GtkSignalFunc" "callback")
    '("gpointer" "user_data")
    '("gint" "position")
  )
)

(define-method append_space
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_append_space")
  (return-type "none")
)

(define-method prepend_space
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_prepend_space")
  (return-type "none")
)

(define-method insert_space
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_insert_space")
  (return-type "none")
  (parameters
    '("gint" "position")
  )
)

(define-method remove_space
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_remove_space")
  (return-type "none")
  (parameters
    '("gint" "position")
  )
)

(define-method append_element
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_append_element")
  (return-type "GtkWidget*")
  (parameters
    '("GtkToolbarChildType" "type")
    '("GtkWidget*" "widget")
    '("const-char*" "text")
    '("const-char*" "tooltip_text")
    '("const-char*" "tooltip_private_text")
    '("GtkWidget*" "icon")
    '("GtkSignalFunc" "callback")
    '("gpointer" "user_data")
  )
)

(define-method prepend_element
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_prepend_element")
  (return-type "GtkWidget*")
  (parameters
    '("GtkToolbarChildType" "type")
    '("GtkWidget*" "widget")
    '("const-char*" "text")
    '("const-char*" "tooltip_text")
    '("const-char*" "tooltip_private_text")
    '("GtkWidget*" "icon")
    '("GtkSignalFunc" "callback")
    '("gpointer" "user_data")
  )
)

(define-method insert_element
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_insert_element")
  (return-type "GtkWidget*")
  (parameters
    '("GtkToolbarChildType" "type")
    '("GtkWidget*" "widget")
    '("const-char*" "text")
    '("const-char*" "tooltip_text")
    '("const-char*" "tooltip_private_text")
    '("GtkWidget*" "icon")
    '("GtkSignalFunc" "callback")
    '("gpointer" "user_data")
    '("gint" "position")
  )
)

(define-method append_widget
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_append_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("const-char*" "tooltip_text")
    '("const-char*" "tooltip_private_text")
  )
)

(define-method prepend_widget
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_prepend_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("const-char*" "tooltip_text")
    '("const-char*" "tooltip_private_text")
  )
)

(define-method insert_widget
  (of-object "GtkToolbar")
  (c-name "gtk_toolbar_insert_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("const-char*" "tooltip_text")
    '("const-char*" "tooltip_private_text")
    '("gint" "position")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktoolbutton.h

(define-function gtk_tool_button_get_type
  (c-name "gtk_tool_button_get_type")
  (return-type "GType")
)

(define-function gtk_tool_button_new
  (c-name "gtk_tool_button_new")
  (is-constructor-of "GtkToolButton")
  (return-type "GtkToolItem*")
  (parameters
    '("GtkWidget*" "icon_widget")
    '("const-gchar*" "label")
  )
)

(define-function gtk_tool_button_new_from_stock
  (c-name "gtk_tool_button_new_from_stock")
  (return-type "GtkToolItem*")
  (parameters
    '("const-gchar*" "stock_id")
  )
)

(define-method set_label
  (of-object "GtkToolButton")
  (c-name "gtk_tool_button_set_label")
  (return-type "none")
  (parameters
    '("const-gchar*" "label")
  )
)

(define-method get_label
  (of-object "GtkToolButton")
  (c-name "gtk_tool_button_get_label")
  (return-type "const-gchar*")
)

(define-method set_use_underline
  (of-object "GtkToolButton")
  (c-name "gtk_tool_button_set_use_underline")
  (return-type "none")
  (parameters
    '("gboolean" "use_underline")
  )
)

(define-method get_use_underline
  (of-object "GtkToolButton")
  (c-name "gtk_tool_button_get_use_underline")
  (return-type "gboolean")
)

(define-method set_stock_id
  (of-object "GtkToolButton")
  (c-name "gtk_tool_button_set_stock_id")
  (return-type "none")
  (parameters
    '("const-gchar*" "stock_id")
  )
)

(define-method get_stock_id
  (of-object "GtkToolButton")
  (c-name "gtk_tool_button_get_stock_id")
  (return-type "const-gchar*")
)

(define-method set_icon_widget
  (of-object "GtkToolButton")
  (c-name "gtk_tool_button_set_icon_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "icon_widget")
  )
)

(define-method get_icon_widget
  (of-object "GtkToolButton")
  (c-name "gtk_tool_button_get_icon_widget")
  (return-type "GtkWidget*")
)

(define-method set_label_widget
  (of-object "GtkToolButton")
  (c-name "gtk_tool_button_set_label_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "label_widget")
  )
)

(define-method get_label_widget
  (of-object "GtkToolButton")
  (c-name "gtk_tool_button_get_label_widget")
  (return-type "GtkWidget*")
)

(define-method _get_button
  (of-object "GtkToolButton")
  (c-name "_gtk_tool_button_get_button")
  (return-type "GtkWidget*")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktoolitem.h

(define-function gtk_tool_item_get_type
  (c-name "gtk_tool_item_get_type")
  (return-type "GType")
)

(define-function gtk_tool_item_new
  (c-name "gtk_tool_item_new")
  (is-constructor-of "GtkToolItem")
  (return-type "GtkToolItem*")
)

(define-method set_homogeneous
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_set_homogeneous")
  (return-type "none")
  (parameters
    '("gboolean" "homogeneous")
  )
)

(define-method get_homogeneous
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_get_homogeneous")
  (return-type "gboolean")
)

(define-method set_expand
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_set_expand")
  (return-type "none")
  (parameters
    '("gboolean" "expand")
  )
)

(define-method get_expand
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_get_expand")
  (return-type "gboolean")
)

(define-method set_tooltip
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_set_tooltip")
  (return-type "none")
  (parameters
    '("GtkTooltips*" "tooltips")
    '("const-gchar*" "tip_text")
    '("const-gchar*" "tip_private")
  )
)

(define-method set_use_drag_window
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_set_use_drag_window")
  (return-type "none")
  (parameters
    '("gboolean" "use_drag_window")
  )
)

(define-method get_use_drag_window
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_get_use_drag_window")
  (return-type "gboolean")
)

(define-method set_visible_horizontal
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_set_visible_horizontal")
  (return-type "none")
  (parameters
    '("gboolean" "visible_horizontal")
  )
)

(define-method get_visible_horizontal
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_get_visible_horizontal")
  (return-type "gboolean")
)

(define-method set_visible_vertical
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_set_visible_vertical")
  (return-type "none")
  (parameters
    '("gboolean" "visible_vertical")
  )
)

(define-method get_visible_vertical
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_get_visible_vertical")
  (return-type "gboolean")
)

(define-method get_is_important
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_get_is_important")
  (return-type "gboolean")
)

(define-method set_is_important
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_set_is_important")
  (return-type "none")
  (parameters
    '("gboolean" "is_important")
  )
)

(define-method get_icon_size
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_get_icon_size")
  (return-type "GtkIconSize")
)

(define-method get_orientation
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_get_orientation")
  (return-type "GtkOrientation")
)

(define-method get_toolbar_style
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_get_toolbar_style")
  (return-type "GtkToolbarStyle")
)

(define-method get_relief_style
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_get_relief_style")
  (return-type "GtkReliefStyle")
)

(define-method retrieve_proxy_menu_item
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_retrieve_proxy_menu_item")
  (return-type "GtkWidget*")
)

(define-method get_proxy_menu_item
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_get_proxy_menu_item")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "menu_item_id")
  )
)

(define-method set_proxy_menu_item
  (of-object "GtkToolItem")
  (c-name "gtk_tool_item_set_proxy_menu_item")
  (return-type "none")
  (parameters
    '("const-gchar*" "menu_item_id")
    '("GtkWidget*" "menu_item")
  )
)

(define-method _toolbar_reconfigured
  (of-object "GtkToolItem")
  (c-name "_gtk_tool_item_toolbar_reconfigured")
  (return-type "none")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktooltips.h

(define-function gtk_tooltips_get_type
  (c-name "gtk_tooltips_get_type")
  (return-type "GType")
)

(define-function gtk_tooltips_new
  (c-name "gtk_tooltips_new")
  (is-constructor-of "GtkTooltips")
  (return-type "GtkTooltips*")
)

(define-method enable
  (of-object "GtkTooltips")
  (c-name "gtk_tooltips_enable")
  (return-type "none")
)

(define-method disable
  (of-object "GtkTooltips")
  (c-name "gtk_tooltips_disable")
  (return-type "none")
)

(define-method set_delay
  (of-object "GtkTooltips")
  (c-name "gtk_tooltips_set_delay")
  (return-type "none")
  (parameters
    '("guint" "delay")
  )
)

(define-method set_tip
  (of-object "GtkTooltips")
  (c-name "gtk_tooltips_set_tip")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("const-gchar*" "tip_text")
    '("const-gchar*" "tip_private")
  )
)

(define-function gtk_tooltips_data_get
  (c-name "gtk_tooltips_data_get")
  (return-type "GtkTooltipsData*")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method force_window
  (of-object "GtkTooltips")
  (c-name "gtk_tooltips_force_window")
  (return-type "none")
)

(define-function _gtk_tooltips_toggle_keyboard_mode
  (c-name "_gtk_tooltips_toggle_keyboard_mode")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktreedatalist.h

(define-function _gtk_tree_data_list_alloc
  (c-name "_gtk_tree_data_list_alloc")
  (return-type "GtkTreeDataList*")
)

(define-method _free
  (of-object "GtkTreeDataList")
  (c-name "_gtk_tree_data_list_free")
  (return-type "none")
  (parameters
    '("GType*" "column_headers")
  )
)

(define-function _gtk_tree_data_list_check_type
  (c-name "_gtk_tree_data_list_check_type")
  (return-type "gboolean")
  (parameters
    '("GType" "type")
  )
)

(define-method _node_to_value
  (of-object "GtkTreeDataList")
  (c-name "_gtk_tree_data_list_node_to_value")
  (return-type "none")
  (parameters
    '("GType" "type")
    '("GValue*" "value")
  )
)

(define-method _value_to_node
  (of-object "GtkTreeDataList")
  (c-name "_gtk_tree_data_list_value_to_node")
  (return-type "none")
  (parameters
    '("GValue*" "value")
  )
)

(define-method _node_copy
  (of-object "GtkTreeDataList")
  (c-name "_gtk_tree_data_list_node_copy")
  (return-type "GtkTreeDataList*")
  (parameters
    '("GType" "type")
  )
)

(define-function gtk_tree_data_list_compare_func
  (c-name "gtk_tree_data_list_compare_func")
  (return-type "gint")
  (parameters
    '("GtkTreeModel*" "model")
    '("GtkTreeIter*" "a")
    '("GtkTreeIter*" "b")
    '("gpointer" "user_data")
  )
)

(define-function _gtk_tree_data_list_header_new
  (c-name "_gtk_tree_data_list_header_new")
  (is-constructor-of "GtkTreeDataListHeader")
  (return-type "GList*")
  (parameters
    '("gint" "n_columns")
    '("GType*" "types")
  )
)

(define-function _gtk_tree_data_list_header_free
  (c-name "_gtk_tree_data_list_header_free")
  (return-type "none")
  (parameters
    '("GList*" "header_list")
  )
)

(define-function _gtk_tree_data_list_get_header
  (c-name "_gtk_tree_data_list_get_header")
  (return-type "GtkTreeDataSortHeader*")
  (parameters
    '("GList*" "header_list")
    '("gint" "sort_column_id")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktreednd.h

(define-function gtk_tree_drag_source_get_type
  (c-name "gtk_tree_drag_source_get_type")
  (return-type "GType")
)

(define-method row_draggable
  (of-object "GtkTreeDragSource")
  (c-name "gtk_tree_drag_source_row_draggable")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "path")
  )
)

(define-method drag_data_delete
  (of-object "GtkTreeDragSource")
  (c-name "gtk_tree_drag_source_drag_data_delete")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "path")
  )
)

(define-method drag_data_get
  (of-object "GtkTreeDragSource")
  (c-name "gtk_tree_drag_source_drag_data_get")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "path")
    '("GtkSelectionData*" "selection_data")
  )
)

(define-function gtk_tree_drag_dest_get_type
  (c-name "gtk_tree_drag_dest_get_type")
  (return-type "GType")
)

(define-method drag_data_received
  (of-object "GtkTreeDragDest")
  (c-name "gtk_tree_drag_dest_drag_data_received")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "dest")
    '("GtkSelectionData*" "selection_data")
  )
)

(define-method row_drop_possible
  (of-object "GtkTreeDragDest")
  (c-name "gtk_tree_drag_dest_row_drop_possible")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "dest_path")
    '("GtkSelectionData*" "selection_data")
  )
)

(define-function gtk_tree_set_row_drag_data
  (c-name "gtk_tree_set_row_drag_data")
  (return-type "gboolean")
  (parameters
    '("GtkSelectionData*" "selection_data")
    '("GtkTreeModel*" "tree_model")
    '("GtkTreePath*" "path")
  )
)

(define-function gtk_tree_get_row_drag_data
  (c-name "gtk_tree_get_row_drag_data")
  (return-type "gboolean")
  (parameters
    '("GtkSelectionData*" "selection_data")
    '("GtkTreeModel**" "tree_model")
    '("GtkTreePath**" "path")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktree.h

(define-function gtk_tree_get_type
  (c-name "gtk_tree_get_type")
  (return-type "GtkType")
)

(define-function gtk_tree_new
  (c-name "gtk_tree_new")
  (is-constructor-of "GtkTree")
  (return-type "GtkWidget*")
)

(define-method append
  (of-object "GtkTree")
  (c-name "gtk_tree_append")
  (return-type "none")
  (parameters
    '("GtkWidget*" "tree_item")
  )
)

(define-method prepend
  (of-object "GtkTree")
  (c-name "gtk_tree_prepend")
  (return-type "none")
  (parameters
    '("GtkWidget*" "tree_item")
  )
)

(define-method insert
  (of-object "GtkTree")
  (c-name "gtk_tree_insert")
  (return-type "none")
  (parameters
    '("GtkWidget*" "tree_item")
    '("gint" "position")
  )
)

(define-method remove_items
  (of-object "GtkTree")
  (c-name "gtk_tree_remove_items")
  (return-type "none")
  (parameters
    '("GList*" "items")
  )
)

(define-method clear_items
  (of-object "GtkTree")
  (c-name "gtk_tree_clear_items")
  (return-type "none")
  (parameters
    '("gint" "start")
    '("gint" "end")
  )
)

(define-method select_item
  (of-object "GtkTree")
  (c-name "gtk_tree_select_item")
  (return-type "none")
  (parameters
    '("gint" "item")
  )
)

(define-method unselect_item
  (of-object "GtkTree")
  (c-name "gtk_tree_unselect_item")
  (return-type "none")
  (parameters
    '("gint" "item")
  )
)

(define-method select_child
  (of-object "GtkTree")
  (c-name "gtk_tree_select_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "tree_item")
  )
)

(define-method unselect_child
  (of-object "GtkTree")
  (c-name "gtk_tree_unselect_child")
  (return-type "none")
  (parameters
    '("GtkWidget*" "tree_item")
  )
)

(define-method child_position
  (of-object "GtkTree")
  (c-name "gtk_tree_child_position")
  (return-type "gint")
  (parameters
    '("GtkWidget*" "child")
  )
)

(define-method set_selection_mode
  (of-object "GtkTree")
  (c-name "gtk_tree_set_selection_mode")
  (return-type "none")
  (parameters
    '("GtkSelectionMode" "mode")
  )
)

(define-method set_view_mode
  (of-object "GtkTree")
  (c-name "gtk_tree_set_view_mode")
  (return-type "none")
  (parameters
    '("GtkTreeViewMode" "mode")
  )
)

(define-method set_view_lines
  (of-object "GtkTree")
  (c-name "gtk_tree_set_view_lines")
  (return-type "none")
  (parameters
    '("gboolean" "flag")
  )
)

(define-method remove_item
  (of-object "GtkTree")
  (c-name "gtk_tree_remove_item")
  (return-type "none")
  (parameters
    '("GtkWidget*" "child")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktreeitem.h

(define-function gtk_tree_item_get_type
  (c-name "gtk_tree_item_get_type")
  (return-type "GtkType")
)

(define-function gtk_tree_item_new
  (c-name "gtk_tree_item_new")
  (is-constructor-of "GtkTreeItem")
  (return-type "GtkWidget*")
)

(define-function gtk_tree_item_new_with_label
  (c-name "gtk_tree_item_new_with_label")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "label")
  )
)

(define-method set_subtree
  (of-object "GtkTreeItem")
  (c-name "gtk_tree_item_set_subtree")
  (return-type "none")
  (parameters
    '("GtkWidget*" "subtree")
  )
)

(define-method remove_subtree
  (of-object "GtkTreeItem")
  (c-name "gtk_tree_item_remove_subtree")
  (return-type "none")
)

(define-method select
  (of-object "GtkTreeItem")
  (c-name "gtk_tree_item_select")
  (return-type "none")
)

(define-method deselect
  (of-object "GtkTreeItem")
  (c-name "gtk_tree_item_deselect")
  (return-type "none")
)

(define-method expand
  (of-object "GtkTreeItem")
  (c-name "gtk_tree_item_expand")
  (return-type "none")
)

(define-method collapse
  (of-object "GtkTreeItem")
  (c-name "gtk_tree_item_collapse")
  (return-type "none")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktreemodelfilter.h

(define-function gtk_tree_model_filter_get_type
  (c-name "gtk_tree_model_filter_get_type")
  (return-type "GType")
)

(define-method filter_new
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_filter_new")
  (return-type "GtkTreeModel*")
  (parameters
    '("GtkTreePath*" "root")
  )
)

(define-method set_visible_func
  (of-object "GtkTreeModelFilter")
  (c-name "gtk_tree_model_filter_set_visible_func")
  (return-type "none")
  (parameters
    '("GtkTreeModelFilterVisibleFunc" "func")
    '("gpointer" "data")
    '("GtkDestroyNotify" "destroy")
  )
)

(define-method set_modify_func
  (of-object "GtkTreeModelFilter")
  (c-name "gtk_tree_model_filter_set_modify_func")
  (return-type "none")
  (parameters
    '("gint" "n_columns")
    '("GType*" "types")
    '("GtkTreeModelFilterModifyFunc" "func")
    '("gpointer" "data")
    '("GtkDestroyNotify" "destroy")
  )
)

(define-method set_visible_column
  (of-object "GtkTreeModelFilter")
  (c-name "gtk_tree_model_filter_set_visible_column")
  (return-type "none")
  (parameters
    '("gint" "column")
  )
)

(define-method get_model
  (of-object "GtkTreeModelFilter")
  (c-name "gtk_tree_model_filter_get_model")
  (return-type "GtkTreeModel*")
)

(define-method convert_child_iter_to_iter
  (of-object "GtkTreeModelFilter")
  (c-name "gtk_tree_model_filter_convert_child_iter_to_iter")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "filter_iter")
    '("GtkTreeIter*" "child_iter")
  )
)

(define-method convert_iter_to_child_iter
  (of-object "GtkTreeModelFilter")
  (c-name "gtk_tree_model_filter_convert_iter_to_child_iter")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "child_iter")
    '("GtkTreeIter*" "filter_iter")
  )
)

(define-method convert_child_path_to_path
  (of-object "GtkTreeModelFilter")
  (c-name "gtk_tree_model_filter_convert_child_path_to_path")
  (return-type "GtkTreePath*")
  (parameters
    '("GtkTreePath*" "child_path")
  )
)

(define-method convert_path_to_child_path
  (of-object "GtkTreeModelFilter")
  (c-name "gtk_tree_model_filter_convert_path_to_child_path")
  (return-type "GtkTreePath*")
  (parameters
    '("GtkTreePath*" "filter_path")
  )
)

(define-method refilter
  (of-object "GtkTreeModelFilter")
  (c-name "gtk_tree_model_filter_refilter")
  (return-type "none")
)

(define-method clear_cache
  (of-object "GtkTreeModelFilter")
  (c-name "gtk_tree_model_filter_clear_cache")
  (return-type "none")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktreemodel.h

(define-function gtk_tree_path_new
  (c-name "gtk_tree_path_new")
  (is-constructor-of "GtkTreePath")
  (return-type "GtkTreePath*")
)

(define-function gtk_tree_path_new_from_string
  (c-name "gtk_tree_path_new_from_string")
  (return-type "GtkTreePath*")
  (parameters
    '("const-gchar*" "path")
  )
)

(define-function gtk_tree_path_new_from_indices
  (c-name "gtk_tree_path_new_from_indices")
  (return-type "GtkTreePath*")
  (parameters
    '("gint" "first_index")
  )
  (varargs #t)
)

(define-method to_string
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_to_string")
  (return-type "gchar*")
)

(define-function gtk_tree_path_new_first
  (c-name "gtk_tree_path_new_first")
  (return-type "GtkTreePath*")
)

(define-method append_index
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_append_index")
  (return-type "none")
  (parameters
    '("gint" "index_")
  )
)

(define-method prepend_index
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_prepend_index")
  (return-type "none")
  (parameters
    '("gint" "index_")
  )
)

(define-method get_depth
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_get_depth")
  (return-type "gint")
)

(define-method get_indices
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_get_indices")
  (return-type "gint*")
)

(define-method free
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_free")
  (return-type "none")
)

(define-method copy
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_copy")
  (return-type "GtkTreePath*")
)

(define-function gtk_tree_path_get_type
  (c-name "gtk_tree_path_get_type")
  (return-type "GType")
)

(define-method compare
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_compare")
  (return-type "gint")
  (parameters
    '("const-GtkTreePath*" "b")
  )
)

(define-method next
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_next")
  (return-type "none")
)

(define-method prev
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_prev")
  (return-type "gboolean")
)

(define-method up
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_up")
  (return-type "gboolean")
)

(define-method down
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_down")
  (return-type "none")
)

(define-method is_ancestor
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_is_ancestor")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "descendant")
  )
)

(define-method is_descendant
  (of-object "GtkTreePath")
  (c-name "gtk_tree_path_is_descendant")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "ancestor")
  )
)

(define-function gtk_tree_row_reference_get_type
  (c-name "gtk_tree_row_reference_get_type")
  (return-type "GType")
)

(define-function gtk_tree_row_reference_new
  (c-name "gtk_tree_row_reference_new")
  (is-constructor-of "GtkTreeRowReference")
  (return-type "GtkTreeRowReference*")
  (parameters
    '("GtkTreeModel*" "model")
    '("GtkTreePath*" "path")
  )
)

(define-function gtk_tree_row_reference_new_proxy
  (c-name "gtk_tree_row_reference_new_proxy")
  (return-type "GtkTreeRowReference*")
  (parameters
    '("GObject*" "proxy")
    '("GtkTreeModel*" "model")
    '("GtkTreePath*" "path")
  )
)

(define-method get_path
  (of-object "GtkTreeRowReference")
  (c-name "gtk_tree_row_reference_get_path")
  (return-type "GtkTreePath*")
)

(define-method valid
  (of-object "GtkTreeRowReference")
  (c-name "gtk_tree_row_reference_valid")
  (return-type "gboolean")
)

(define-method copy
  (of-object "GtkTreeRowReference")
  (c-name "gtk_tree_row_reference_copy")
  (return-type "GtkTreeRowReference*")
)

(define-method free
  (of-object "GtkTreeRowReference")
  (c-name "gtk_tree_row_reference_free")
  (return-type "none")
)

(define-function gtk_tree_row_reference_inserted
  (c-name "gtk_tree_row_reference_inserted")
  (return-type "none")
  (parameters
    '("GObject*" "proxy")
    '("GtkTreePath*" "path")
  )
)

(define-function gtk_tree_row_reference_deleted
  (c-name "gtk_tree_row_reference_deleted")
  (return-type "none")
  (parameters
    '("GObject*" "proxy")
    '("GtkTreePath*" "path")
  )
)

(define-function gtk_tree_row_reference_reordered
  (c-name "gtk_tree_row_reference_reordered")
  (return-type "none")
  (parameters
    '("GObject*" "proxy")
    '("GtkTreePath*" "path")
    '("GtkTreeIter*" "iter")
    '("gint*" "new_order")
  )
)

(define-method copy
  (of-object "GtkTreeIter")
  (c-name "gtk_tree_iter_copy")
  (return-type "GtkTreeIter*")
)

(define-method free
  (of-object "GtkTreeIter")
  (c-name "gtk_tree_iter_free")
  (return-type "none")
)

(define-function gtk_tree_iter_get_type
  (c-name "gtk_tree_iter_get_type")
  (return-type "GType")
)

(define-function gtk_tree_model_get_type
  (c-name "gtk_tree_model_get_type")
  (return-type "GType")
)

(define-method get_flags
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_get_flags")
  (return-type "GtkTreeModelFlags")
)

(define-method get_n_columns
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_get_n_columns")
  (return-type "gint")
)

(define-method get_column_type
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_get_column_type")
  (return-type "GType")
  (parameters
    '("gint" "index_")
  )
)

(define-method get_iter
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_get_iter")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreePath*" "path")
  )
)

(define-method get_iter_from_string
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_get_iter_from_string")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
    '("const-gchar*" "path_string")
  )
)

(define-method get_string_from_iter
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_get_string_from_iter")
  (return-type "gchar*")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method get_iter_first
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_get_iter_first")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method get_path
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_get_path")
  (return-type "GtkTreePath*")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method get_value
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_get_value")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("gint" "column")
    '("GValue*" "value")
  )
)

(define-method iter_next
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_iter_next")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method iter_children
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_iter_children")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreeIter*" "parent")
  )
)

(define-method iter_has_child
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_iter_has_child")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method iter_n_children
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_iter_n_children")
  (return-type "gint")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method iter_nth_child
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_iter_nth_child")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreeIter*" "parent")
    '("gint" "n")
  )
)

(define-method iter_parent
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_iter_parent")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreeIter*" "child")
  )
)

(define-method ref_node
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_ref_node")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method unref_node
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_unref_node")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method get
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_get")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
  )
  (varargs #t)
)

(define-method get_valist
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_get_valist")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("va_list" "var_args")
  )
)

(define-method foreach
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_foreach")
  (return-type "none")
  (parameters
    '("GtkTreeModelForeachFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-method row_changed
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_row_changed")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
    '("GtkTreeIter*" "iter")
  )
)

(define-method row_inserted
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_row_inserted")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
    '("GtkTreeIter*" "iter")
  )
)

(define-method row_has_child_toggled
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_row_has_child_toggled")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
    '("GtkTreeIter*" "iter")
  )
)

(define-method row_deleted
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_row_deleted")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
  )
)

(define-method rows_reordered
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_rows_reordered")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
    '("GtkTreeIter*" "iter")
    '("gint*" "new_order")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktreemodelsort.h

(define-function gtk_tree_model_sort_get_type
  (c-name "gtk_tree_model_sort_get_type")
  (return-type "GType")
)

(define-method sort_new_with_model
  (of-object "GtkTreeModel")
  (c-name "gtk_tree_model_sort_new_with_model")
  (return-type "GtkTreeModel*")
)

(define-method get_model
  (of-object "GtkTreeModelSort")
  (c-name "gtk_tree_model_sort_get_model")
  (return-type "GtkTreeModel*")
)

(define-method convert_child_path_to_path
  (of-object "GtkTreeModelSort")
  (c-name "gtk_tree_model_sort_convert_child_path_to_path")
  (return-type "GtkTreePath*")
  (parameters
    '("GtkTreePath*" "child_path")
  )
)

(define-method convert_child_iter_to_iter
  (of-object "GtkTreeModelSort")
  (c-name "gtk_tree_model_sort_convert_child_iter_to_iter")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "sort_iter")
    '("GtkTreeIter*" "child_iter")
  )
)

(define-method convert_path_to_child_path
  (of-object "GtkTreeModelSort")
  (c-name "gtk_tree_model_sort_convert_path_to_child_path")
  (return-type "GtkTreePath*")
  (parameters
    '("GtkTreePath*" "sorted_path")
  )
)

(define-method convert_iter_to_child_iter
  (of-object "GtkTreeModelSort")
  (c-name "gtk_tree_model_sort_convert_iter_to_child_iter")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "child_iter")
    '("GtkTreeIter*" "sorted_iter")
  )
)

(define-method reset_default_sort_func
  (of-object "GtkTreeModelSort")
  (c-name "gtk_tree_model_sort_reset_default_sort_func")
  (return-type "none")
)

(define-method clear_cache
  (of-object "GtkTreeModelSort")
  (c-name "gtk_tree_model_sort_clear_cache")
  (return-type "none")
)

(define-method iter_is_valid
  (of-object "GtkTreeModelSort")
  (c-name "gtk_tree_model_sort_iter_is_valid")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktreeprivate.h

(define-method _internal_select_node
  (of-object "GtkTreeSelection")
  (c-name "_gtk_tree_selection_internal_select_node")
  (return-type "none")
  (parameters
    '("GtkRBNode*" "node")
    '("GtkRBTree*" "tree")
    '("GtkTreePath*" "path")
    '("GtkTreeSelectMode" "mode")
    '("gboolean" "override_browse_mode")
  )
)

(define-method _find_node
  (of-object "GtkTreeView")
  (c-name "_gtk_tree_view_find_node")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "path")
    '("GtkRBTree**" "tree")
    '("GtkRBNode**" "node")
  )
)

(define-method _find_path
  (of-object "GtkTreeView")
  (c-name "_gtk_tree_view_find_path")
  (return-type "GtkTreePath*")
  (parameters
    '("GtkRBTree*" "tree")
    '("GtkRBNode*" "node")
  )
)

(define-method _child_move_resize
  (of-object "GtkTreeView")
  (c-name "_gtk_tree_view_child_move_resize")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method _queue_draw_node
  (of-object "GtkTreeView")
  (c-name "_gtk_tree_view_queue_draw_node")
  (return-type "none")
  (parameters
    '("GtkRBTree*" "tree")
    '("GtkRBNode*" "node")
    '("GdkRectangle*" "clip_rect")
  )
)

(define-method _realize_button
  (of-object "GtkTreeViewColumn")
  (c-name "_gtk_tree_view_column_realize_button")
  (return-type "none")
)

(define-method _unrealize_button
  (of-object "GtkTreeViewColumn")
  (c-name "_gtk_tree_view_column_unrealize_button")
  (return-type "none")
)

(define-method _set_tree_view
  (of-object "GtkTreeViewColumn")
  (c-name "_gtk_tree_view_column_set_tree_view")
  (return-type "none")
  (parameters
    '("GtkTreeView*" "tree_view")
  )
)

(define-method _unset_model
  (of-object "GtkTreeViewColumn")
  (c-name "_gtk_tree_view_column_unset_model")
  (return-type "none")
  (parameters
    '("GtkTreeModel*" "old_model")
  )
)

(define-method _unset_tree_view
  (of-object "GtkTreeViewColumn")
  (c-name "_gtk_tree_view_column_unset_tree_view")
  (return-type "none")
)

(define-method _set_width
  (of-object "GtkTreeViewColumn")
  (c-name "_gtk_tree_view_column_set_width")
  (return-type "none")
  (parameters
    '("gint" "width")
  )
)

(define-method _column_start_drag
  (of-object "GtkTreeView")
  (c-name "_gtk_tree_view_column_start_drag")
  (return-type "none")
  (parameters
    '("GtkTreeViewColumn*" "column")
  )
)

(define-method _cell_event
  (of-object "GtkTreeViewColumn")
  (c-name "_gtk_tree_view_column_cell_event")
  (return-type "gboolean")
  (parameters
    '("GtkCellEditable**" "editable_widget")
    '("GdkEvent*" "event")
    '("gchar*" "path_string")
    '("GdkRectangle*" "background_area")
    '("GdkRectangle*" "cell_area")
    '("guint" "flags")
  )
)

(define-method _start_editing
  (of-object "GtkTreeViewColumn")
  (c-name "_gtk_tree_view_column_start_editing")
  (return-type "none")
  (parameters
    '("GtkCellEditable*" "editable_widget")
  )
)

(define-method _stop_editing
  (of-object "GtkTreeViewColumn")
  (c-name "_gtk_tree_view_column_stop_editing")
  (return-type "none")
)

(define-method _install_mark_rows_col_dirty
  (of-object "GtkTreeView")
  (c-name "_gtk_tree_view_install_mark_rows_col_dirty")
  (return-type "none")
)

(define-method _column_autosize
  (of-object "GtkTreeView")
  (c-name "_gtk_tree_view_column_autosize")
  (return-type "none")
  (parameters
    '("GtkTreeViewColumn*" "column")
  )
)

(define-method _has_editable_cell
  (of-object "GtkTreeViewColumn")
  (c-name "_gtk_tree_view_column_has_editable_cell")
  (return-type "gboolean")
)

(define-method _get_edited_cell
  (of-object "GtkTreeViewColumn")
  (c-name "_gtk_tree_view_column_get_edited_cell")
  (return-type "GtkCellRenderer*")
)

(define-method _count_special_cells
  (of-object "GtkTreeViewColumn")
  (c-name "_gtk_tree_view_column_count_special_cells")
  (return-type "gint")
)

(define-method _get_cell_at_pos
  (of-object "GtkTreeViewColumn")
  (c-name "_gtk_tree_view_column_get_cell_at_pos")
  (return-type "GtkCellRenderer*")
  (parameters
    '("gint" "x")
  )
)

(define-function _gtk_tree_selection_new
  (c-name "_gtk_tree_selection_new")
  (is-constructor-of "GtkTreeSelection")
  (return-type "GtkTreeSelection*")
)

(define-function _gtk_tree_selection_new_with_tree_view
  (c-name "_gtk_tree_selection_new_with_tree_view")
  (return-type "GtkTreeSelection*")
  (parameters
    '("GtkTreeView*" "tree_view")
  )
)

(define-method _set_tree_view
  (of-object "GtkTreeSelection")
  (c-name "_gtk_tree_selection_set_tree_view")
  (return-type "none")
  (parameters
    '("GtkTreeView*" "tree_view")
  )
)

(define-method _cell_render
  (of-object "GtkTreeViewColumn")
  (c-name "_gtk_tree_view_column_cell_render")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window")
    '("GdkRectangle*" "background_area")
    '("GdkRectangle*" "cell_area")
    '("GdkRectangle*" "expose_area")
    '("guint" "flags")
  )
)

(define-method _cell_focus
  (of-object "GtkTreeViewColumn")
  (c-name "_gtk_tree_view_column_cell_focus")
  (return-type "gboolean")
  (parameters
    '("gint" "direction")
    '("gboolean" "left")
    '("gboolean" "right")
  )
)

(define-method _cell_draw_focus
  (of-object "GtkTreeViewColumn")
  (c-name "_gtk_tree_view_column_cell_draw_focus")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window")
    '("GdkRectangle*" "background_area")
    '("GdkRectangle*" "cell_area")
    '("GdkRectangle*" "expose_area")
    '("guint" "flags")
  )
)

(define-method _cell_set_dirty
  (of-object "GtkTreeViewColumn")
  (c-name "_gtk_tree_view_column_cell_set_dirty")
  (return-type "none")
  (parameters
    '("gboolean" "install_handler")
  )
)

(define-method _get_neighbor_sizes
  (of-object "GtkTreeViewColumn")
  (c-name "_gtk_tree_view_column_get_neighbor_sizes")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell")
    '("gint*" "left")
    '("gint*" "right")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktreeselection.h

(define-function gtk_tree_selection_get_type
  (c-name "gtk_tree_selection_get_type")
  (return-type "GType")
)

(define-method set_mode
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_set_mode")
  (return-type "none")
  (parameters
    '("GtkSelectionMode" "type")
  )
)

(define-method get_mode
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_get_mode")
  (return-type "GtkSelectionMode")
)

(define-method set_select_function
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_set_select_function")
  (return-type "none")
  (parameters
    '("GtkTreeSelectionFunc" "func")
    '("gpointer" "data")
    '("GtkDestroyNotify" "destroy")
  )
)

(define-method get_user_data
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_get_user_data")
  (return-type "gpointer")
)

(define-method get_tree_view
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_get_tree_view")
  (return-type "GtkTreeView*")
)

(define-method get_selected
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_get_selected")
  (return-type "gboolean")
  (parameters
    '("GtkTreeModel**" "model")
    '("GtkTreeIter*" "iter")
  )
)

(define-method get_selected_rows
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_get_selected_rows")
  (return-type "GList*")
  (parameters
    '("GtkTreeModel**" "model")
  )
)

(define-method count_selected_rows
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_count_selected_rows")
  (return-type "gint")
)

(define-method selected_foreach
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_selected_foreach")
  (return-type "none")
  (parameters
    '("GtkTreeSelectionForeachFunc" "func")
    '("gpointer" "data")
  )
)

(define-method select_path
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_select_path")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
  )
)

(define-method unselect_path
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_unselect_path")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
  )
)

(define-method select_iter
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_select_iter")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method unselect_iter
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_unselect_iter")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method path_is_selected
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_path_is_selected")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "path")
  )
)

(define-method iter_is_selected
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_iter_is_selected")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method select_all
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_select_all")
  (return-type "none")
)

(define-method unselect_all
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_unselect_all")
  (return-type "none")
)

(define-method select_range
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_select_range")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "start_path")
    '("GtkTreePath*" "end_path")
  )
)

(define-method unselect_range
  (of-object "GtkTreeSelection")
  (c-name "gtk_tree_selection_unselect_range")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "start_path")
    '("GtkTreePath*" "end_path")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktreesortable.h

(define-function void
  (c-name "void")
  (return-type "G_BEGIN_DECLS")
  (parameters
    '("*" "sort_column_changed")
  )
)

(define-function gtk_tree_sortable_get_type
  (c-name "gtk_tree_sortable_get_type")
  (return-type "GType")
)

(define-method sort_column_changed
  (of-object "GtkTreeSortable")
  (c-name "gtk_tree_sortable_sort_column_changed")
  (return-type "none")
)

(define-method get_sort_column_id
  (of-object "GtkTreeSortable")
  (c-name "gtk_tree_sortable_get_sort_column_id")
  (return-type "gboolean")
  (parameters
    '("gint*" "sort_column_id")
    '("GtkSortType*" "order")
  )
)

(define-method set_sort_column_id
  (of-object "GtkTreeSortable")
  (c-name "gtk_tree_sortable_set_sort_column_id")
  (return-type "none")
  (parameters
    '("gint" "sort_column_id")
    '("GtkSortType" "order")
  )
)

(define-method set_sort_func
  (of-object "GtkTreeSortable")
  (c-name "gtk_tree_sortable_set_sort_func")
  (return-type "none")
  (parameters
    '("gint" "sort_column_id")
    '("GtkTreeIterCompareFunc" "sort_func")
    '("gpointer" "user_data")
    '("GtkDestroyNotify" "destroy")
  )
)

(define-method set_default_sort_func
  (of-object "GtkTreeSortable")
  (c-name "gtk_tree_sortable_set_default_sort_func")
  (return-type "none")
  (parameters
    '("GtkTreeIterCompareFunc" "sort_func")
    '("gpointer" "user_data")
    '("GtkDestroyNotify" "destroy")
  )
)

(define-method has_default_sort_func
  (of-object "GtkTreeSortable")
  (c-name "gtk_tree_sortable_has_default_sort_func")
  (return-type "gboolean")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktreestore.h

(define-function gtk_tree_store_get_type
  (c-name "gtk_tree_store_get_type")
  (return-type "GType")
)

(define-function gtk_tree_store_new
  (c-name "gtk_tree_store_new")
  (is-constructor-of "GtkTreeStore")
  (return-type "GtkTreeStore*")
  (parameters
    '("gint" "n_columns")
  )
  (varargs #t)
)

(define-function gtk_tree_store_newv
  (c-name "gtk_tree_store_newv")
  (return-type "GtkTreeStore*")
  (parameters
    '("gint" "n_columns")
    '("GType*" "types")
  )
)

(define-method set_column_types
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_set_column_types")
  (return-type "none")
  (parameters
    '("gint" "n_columns")
    '("GType*" "types")
  )
)

(define-method set_value
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_set_value")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("gint" "column")
    '("GValue*" "value")
  )
)

(define-method set
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_set")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
  )
  (varargs #t)
)

(define-method set_valist
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_set_valist")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("va_list" "var_args")
  )
)

(define-method remove
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_remove")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method insert
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_insert")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreeIter*" "parent")
    '("gint" "position")
  )
)

(define-method insert_before
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_insert_before")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreeIter*" "parent")
    '("GtkTreeIter*" "sibling")
  )
)

(define-method insert_after
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_insert_after")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreeIter*" "parent")
    '("GtkTreeIter*" "sibling")
  )
)

(define-method prepend
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_prepend")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreeIter*" "parent")
  )
)

(define-method append
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_append")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreeIter*" "parent")
  )
)

(define-method is_ancestor
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_is_ancestor")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreeIter*" "descendant")
  )
)

(define-method iter_depth
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_iter_depth")
  (return-type "gint")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method clear
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_clear")
  (return-type "none")
)

(define-method iter_is_valid
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_iter_is_valid")
  (return-type "gboolean")
  (parameters
    '("GtkTreeIter*" "iter")
  )
)

(define-method reorder
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_reorder")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "parent")
    '("gint*" "new_order")
  )
)

(define-method swap
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_swap")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "a")
    '("GtkTreeIter*" "b")
  )
)

(define-method move_before
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_move_before")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreeIter*" "position")
  )
)

(define-method move_after
  (of-object "GtkTreeStore")
  (c-name "gtk_tree_store_move_after")
  (return-type "none")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreeIter*" "position")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktreeviewcolumn.h

(define-function gtk_tree_view_column_get_type
  (c-name "gtk_tree_view_column_get_type")
  (return-type "GType")
)

(define-function gtk_tree_view_column_new
  (c-name "gtk_tree_view_column_new")
  (is-constructor-of "GtkTreeViewColumn")
  (return-type "GtkTreeViewColumn*")
)

(define-function gtk_tree_view_column_new_with_attributes
  (c-name "gtk_tree_view_column_new_with_attributes")
  (return-type "GtkTreeViewColumn*")
  (parameters
    '("const-gchar*" "title")
    '("GtkCellRenderer*" "cell")
  )
  (varargs #t)
)

(define-method pack_start
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_pack_start")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell")
    '("gboolean" "expand")
  )
)

(define-method pack_end
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_pack_end")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell")
    '("gboolean" "expand")
  )
)

(define-method clear
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_clear")
  (return-type "none")
)

(define-method get_cell_renderers
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_cell_renderers")
  (return-type "GList*")
)

(define-method add_attribute
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_add_attribute")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell_renderer")
    '("const-gchar*" "attribute")
    '("gint" "column")
  )
)

(define-method set_attributes
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_attributes")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell_renderer")
  )
  (varargs #t)
)

(define-method set_cell_data_func
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_cell_data_func")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell_renderer")
    '("GtkTreeCellDataFunc" "func")
    '("gpointer" "func_data")
    '("GtkDestroyNotify" "destroy")
  )
)

(define-method clear_attributes
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_clear_attributes")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell_renderer")
  )
)

(define-method set_spacing
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_spacing")
  (return-type "none")
  (parameters
    '("gint" "spacing")
  )
)

(define-method get_spacing
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_spacing")
  (return-type "gint")
)

(define-method set_visible
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_visible")
  (return-type "none")
  (parameters
    '("gboolean" "visible")
  )
)

(define-method get_visible
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_visible")
  (return-type "gboolean")
)

(define-method set_resizable
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_resizable")
  (return-type "none")
  (parameters
    '("gboolean" "resizable")
  )
)

(define-method get_resizable
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_resizable")
  (return-type "gboolean")
)

(define-method set_sizing
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_sizing")
  (return-type "none")
  (parameters
    '("GtkTreeViewColumnSizing" "type")
  )
)

(define-method get_sizing
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_sizing")
  (return-type "GtkTreeViewColumnSizing")
)

(define-method get_width
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_width")
  (return-type "gint")
)

(define-method get_fixed_width
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_fixed_width")
  (return-type "gint")
)

(define-method set_fixed_width
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_fixed_width")
  (return-type "none")
  (parameters
    '("gint" "fixed_width")
  )
)

(define-method set_min_width
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_min_width")
  (return-type "none")
  (parameters
    '("gint" "min_width")
  )
)

(define-method get_min_width
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_min_width")
  (return-type "gint")
)

(define-method set_max_width
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_max_width")
  (return-type "none")
  (parameters
    '("gint" "max_width")
  )
)

(define-method get_max_width
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_max_width")
  (return-type "gint")
)

(define-method clicked
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_clicked")
  (return-type "none")
)

(define-method set_title
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_title")
  (return-type "none")
  (parameters
    '("const-gchar*" "title")
  )
)

(define-method get_title
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_title")
  (return-type "const-gchar*")
)

(define-method set_expand
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_expand")
  (return-type "none")
  (parameters
    '("gboolean" "expand")
  )
)

(define-method get_expand
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_expand")
  (return-type "gboolean")
)

(define-method set_clickable
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_clickable")
  (return-type "none")
  (parameters
    '("gboolean" "clickable")
  )
)

(define-method get_clickable
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_clickable")
  (return-type "gboolean")
)

(define-method set_widget
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method get_widget
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_widget")
  (return-type "GtkWidget*")
)

(define-method set_alignment
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_alignment")
  (return-type "none")
  (parameters
    '("gfloat" "xalign")
  )
)

(define-method get_alignment
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_alignment")
  (return-type "gfloat")
)

(define-method set_reorderable
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_reorderable")
  (return-type "none")
  (parameters
    '("gboolean" "reorderable")
  )
)

(define-method get_reorderable
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_reorderable")
  (return-type "gboolean")
)

(define-method set_sort_column_id
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_sort_column_id")
  (return-type "none")
  (parameters
    '("gint" "sort_column_id")
  )
)

(define-method get_sort_column_id
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_sort_column_id")
  (return-type "gint")
)

(define-method set_sort_indicator
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_sort_indicator")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_sort_indicator
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_sort_indicator")
  (return-type "gboolean")
)

(define-method set_sort_order
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_set_sort_order")
  (return-type "none")
  (parameters
    '("GtkSortType" "order")
  )
)

(define-method get_sort_order
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_get_sort_order")
  (return-type "GtkSortType")
)

(define-method cell_set_cell_data
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_cell_set_cell_data")
  (return-type "none")
  (parameters
    '("GtkTreeModel*" "tree_model")
    '("GtkTreeIter*" "iter")
    '("gboolean" "is_expander")
    '("gboolean" "is_expanded")
  )
)

(define-method cell_get_size
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_cell_get_size")
  (return-type "none")
  (parameters
    '("GdkRectangle*" "cell_area")
    '("gint*" "x_offset")
    '("gint*" "y_offset")
    '("gint*" "width")
    '("gint*" "height")
  )
)

(define-method cell_is_visible
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_cell_is_visible")
  (return-type "gboolean")
)

(define-method focus_cell
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_focus_cell")
  (return-type "none")
  (parameters
    '("GtkCellRenderer*" "cell")
  )
)

(define-method cell_get_position
  (of-object "GtkTreeViewColumn")
  (c-name "gtk_tree_view_column_cell_get_position")
  (return-type "gboolean")
  (parameters
    '("GtkCellRenderer*" "cell_renderer")
    '("gint*" "start_pos")
    '("gint*" "width")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktreeview.h

(define-function gtk_tree_view_get_type
  (c-name "gtk_tree_view_get_type")
  (return-type "GType")
)

(define-function gtk_tree_view_new
  (c-name "gtk_tree_view_new")
  (is-constructor-of "GtkTreeView")
  (return-type "GtkWidget*")
)

(define-function gtk_tree_view_new_with_model
  (c-name "gtk_tree_view_new_with_model")
  (return-type "GtkWidget*")
  (parameters
    '("GtkTreeModel*" "model")
  )
)

(define-method get_model
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_model")
  (return-type "GtkTreeModel*")
)

(define-method set_model
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_model")
  (return-type "none")
  (parameters
    '("GtkTreeModel*" "model")
  )
)

(define-method get_selection
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_selection")
  (return-type "GtkTreeSelection*")
)

(define-method get_hadjustment
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_hadjustment")
  (return-type "GtkAdjustment*")
)

(define-method set_hadjustment
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_hadjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment")
  )
)

(define-method get_vadjustment
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_vadjustment")
  (return-type "GtkAdjustment*")
)

(define-method set_vadjustment
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_vadjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment")
  )
)

(define-method get_headers_visible
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_headers_visible")
  (return-type "gboolean")
)

(define-method set_headers_visible
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_headers_visible")
  (return-type "none")
  (parameters
    '("gboolean" "headers_visible")
  )
)

(define-method columns_autosize
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_columns_autosize")
  (return-type "none")
)

(define-method set_headers_clickable
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_headers_clickable")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method set_rules_hint
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_rules_hint")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_rules_hint
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_rules_hint")
  (return-type "gboolean")
)

(define-method append_column
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_append_column")
  (return-type "gint")
  (parameters
    '("GtkTreeViewColumn*" "column")
  )
)

(define-method remove_column
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_remove_column")
  (return-type "gint")
  (parameters
    '("GtkTreeViewColumn*" "column")
  )
)

(define-method insert_column
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_insert_column")
  (return-type "gint")
  (parameters
    '("GtkTreeViewColumn*" "column")
    '("gint" "position")
  )
)

(define-method insert_column_with_attributes
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_insert_column_with_attributes")
  (return-type "gint")
  (parameters
    '("gint" "position")
    '("const-gchar*" "title")
    '("GtkCellRenderer*" "cell")
  )
  (varargs #t)
)

(define-method insert_column_with_data_func
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_insert_column_with_data_func")
  (return-type "gint")
  (parameters
    '("gint" "position")
    '("const-gchar*" "title")
    '("GtkCellRenderer*" "cell")
    '("GtkTreeCellDataFunc" "func")
    '("gpointer" "data")
    '("GDestroyNotify" "dnotify")
  )
)

(define-method get_column
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_column")
  (return-type "GtkTreeViewColumn*")
  (parameters
    '("gint" "n")
  )
)

(define-method get_columns
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_columns")
  (return-type "GList*")
)

(define-method move_column_after
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_move_column_after")
  (return-type "none")
  (parameters
    '("GtkTreeViewColumn*" "column")
    '("GtkTreeViewColumn*" "base_column")
  )
)

(define-method set_expander_column
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_expander_column")
  (return-type "none")
  (parameters
    '("GtkTreeViewColumn*" "column")
  )
)

(define-method get_expander_column
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_expander_column")
  (return-type "GtkTreeViewColumn*")
)

(define-method set_column_drag_function
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_column_drag_function")
  (return-type "none")
  (parameters
    '("GtkTreeViewColumnDropFunc" "func")
    '("gpointer" "user_data")
    '("GtkDestroyNotify" "destroy")
  )
)

(define-method scroll_to_point
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_scroll_to_point")
  (return-type "none")
  (parameters
    '("gint" "tree_x")
    '("gint" "tree_y")
  )
)

(define-method scroll_to_cell
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_scroll_to_cell")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
    '("GtkTreeViewColumn*" "column")
    '("gboolean" "use_align")
    '("gfloat" "row_align")
    '("gfloat" "col_align")
  )
)

(define-method row_activated
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_row_activated")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
    '("GtkTreeViewColumn*" "column")
  )
)

(define-method expand_all
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_expand_all")
  (return-type "none")
)

(define-method collapse_all
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_collapse_all")
  (return-type "none")
)

(define-method expand_to_path
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_expand_to_path")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
  )
)

(define-method expand_row
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_expand_row")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "path")
    '("gboolean" "open_all")
  )
)

(define-method collapse_row
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_collapse_row")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "path")
  )
)

(define-method map_expanded_rows
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_map_expanded_rows")
  (return-type "none")
  (parameters
    '("GtkTreeViewMappingFunc" "func")
    '("gpointer" "data")
  )
)

(define-method row_expanded
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_row_expanded")
  (return-type "gboolean")
  (parameters
    '("GtkTreePath*" "path")
  )
)

(define-method set_reorderable
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_reorderable")
  (return-type "none")
  (parameters
    '("gboolean" "reorderable")
  )
)

(define-method get_reorderable
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_reorderable")
  (return-type "gboolean")
)

(define-method set_cursor
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_cursor")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
    '("GtkTreeViewColumn*" "focus_column")
    '("gboolean" "start_editing")
  )
)

(define-method set_cursor_on_cell
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_cursor_on_cell")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
    '("GtkTreeViewColumn*" "focus_column")
    '("GtkCellRenderer*" "focus_cell")
    '("gboolean" "start_editing")
  )
)

(define-method get_cursor
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_cursor")
  (return-type "none")
  (parameters
    '("GtkTreePath**" "path")
    '("GtkTreeViewColumn**" "focus_column")
  )
)

(define-method get_bin_window
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_bin_window")
  (return-type "GdkWindow*")
)

(define-method get_path_at_pos
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_path_at_pos")
  (return-type "gboolean")
  (parameters
    '("gint" "x")
    '("gint" "y")
    '("GtkTreePath**" "path")
    '("GtkTreeViewColumn**" "column")
    '("gint*" "cell_x")
    '("gint*" "cell_y")
  )
)

(define-method get_cell_area
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_cell_area")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
    '("GtkTreeViewColumn*" "column")
    '("GdkRectangle*" "rect")
  )
)

(define-method get_background_area
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_background_area")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
    '("GtkTreeViewColumn*" "column")
    '("GdkRectangle*" "rect")
  )
)

(define-method get_visible_rect
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_visible_rect")
  (return-type "none")
  (parameters
    '("GdkRectangle*" "visible_rect")
  )
)

(define-method widget_to_tree_coords
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_widget_to_tree_coords")
  (return-type "none")
  (parameters
    '("gint" "wx")
    '("gint" "wy")
    '("gint*" "tx")
    '("gint*" "ty")
  )
)

(define-method tree_to_widget_coords
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_tree_to_widget_coords")
  (return-type "none")
  (parameters
    '("gint" "tx")
    '("gint" "ty")
    '("gint*" "wx")
    '("gint*" "wy")
  )
)

(define-method enable_model_drag_source
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_enable_model_drag_source")
  (return-type "none")
  (parameters
    '("GdkModifierType" "start_button_mask")
    '("const-GtkTargetEntry*" "targets")
    '("gint" "n_targets")
    '("GdkDragAction" "actions")
  )
)

(define-method enable_model_drag_dest
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_enable_model_drag_dest")
  (return-type "none")
  (parameters
    '("const-GtkTargetEntry*" "targets")
    '("gint" "n_targets")
    '("GdkDragAction" "actions")
  )
)

(define-method unset_rows_drag_source
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_unset_rows_drag_source")
  (return-type "none")
)

(define-method unset_rows_drag_dest
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_unset_rows_drag_dest")
  (return-type "none")
)

(define-method set_drag_dest_row
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_drag_dest_row")
  (return-type "none")
  (parameters
    '("GtkTreePath*" "path")
    '("GtkTreeViewDropPosition" "pos")
  )
)

(define-method get_drag_dest_row
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_drag_dest_row")
  (return-type "none")
  (parameters
    '("GtkTreePath**" "path")
    '("GtkTreeViewDropPosition*" "pos")
  )
)

(define-method get_dest_row_at_pos
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_dest_row_at_pos")
  (return-type "gboolean")
  (parameters
    '("gint" "drag_x")
    '("gint" "drag_y")
    '("GtkTreePath**" "path")
    '("GtkTreeViewDropPosition*" "pos")
  )
)

(define-method create_row_drag_icon
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_create_row_drag_icon")
  (return-type "GdkPixmap*")
  (parameters
    '("GtkTreePath*" "path")
  )
)

(define-method set_enable_search
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_enable_search")
  (return-type "none")
  (parameters
    '("gboolean" "enable_search")
  )
)

(define-method get_enable_search
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_enable_search")
  (return-type "gboolean")
)

(define-method get_search_column
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_search_column")
  (return-type "gint")
)

(define-method set_search_column
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_search_column")
  (return-type "none")
  (parameters
    '("gint" "column")
  )
)

(define-method get_search_equal_func
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_get_search_equal_func")
  (return-type "GtkTreeViewSearchEqualFunc")
)

(define-method set_search_equal_func
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_search_equal_func")
  (return-type "none")
  (parameters
    '("GtkTreeViewSearchEqualFunc" "search_equal_func")
    '("gpointer" "search_user_data")
    '("GtkDestroyNotify" "search_destroy")
  )
)

(define-method set_destroy_count_func
  (of-object "GtkTreeView")
  (c-name "gtk_tree_view_set_destroy_count_func")
  (return-type "none")
  (parameters
    '("GtkTreeDestroyCountFunc" "func")
    '("gpointer" "data")
    '("GtkDestroyNotify" "destroy")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktypebuiltins.h

(define-function gtk_calendar_display_options_get_type
  (c-name "gtk_calendar_display_options_get_type")
  (return-type "GType")
)

(define-function gtk_cell_renderer_state_get_type
  (c-name "gtk_cell_renderer_state_get_type")
  (return-type "GType")
)

(define-function gtk_cell_renderer_mode_get_type
  (c-name "gtk_cell_renderer_mode_get_type")
  (return-type "GType")
)

(define-function gtk_cell_type_get_type
  (c-name "gtk_cell_type_get_type")
  (return-type "GType")
)

(define-function gtk_clist_drag_pos_get_type
  (c-name "gtk_clist_drag_pos_get_type")
  (return-type "GType")
)

(define-function gtk_button_action_get_type
  (c-name "gtk_button_action_get_type")
  (return-type "GType")
)

(define-function gtk_ctree_pos_get_type
  (c-name "gtk_ctree_pos_get_type")
  (return-type "GType")
)

(define-function gtk_ctree_line_style_get_type
  (c-name "gtk_ctree_line_style_get_type")
  (return-type "GType")
)

(define-function gtk_ctree_expander_style_get_type
  (c-name "gtk_ctree_expander_style_get_type")
  (return-type "GType")
)

(define-function gtk_ctree_expansion_type_get_type
  (c-name "gtk_ctree_expansion_type_get_type")
  (return-type "GType")
)

(define-function gtk_debug_flag_get_type
  (c-name "gtk_debug_flag_get_type")
  (return-type "GType")
)

(define-function gtk_dialog_flags_get_type
  (c-name "gtk_dialog_flags_get_type")
  (return-type "GType")
)

(define-function gtk_response_type_get_type
  (c-name "gtk_response_type_get_type")
  (return-type "GType")
)

(define-function gtk_dest_defaults_get_type
  (c-name "gtk_dest_defaults_get_type")
  (return-type "GType")
)

(define-function gtk_target_flags_get_type
  (c-name "gtk_target_flags_get_type")
  (return-type "GType")
)

(define-function gtk_anchor_type_get_type
  (c-name "gtk_anchor_type_get_type")
  (return-type "GType")
)

(define-function gtk_arrow_type_get_type
  (c-name "gtk_arrow_type_get_type")
  (return-type "GType")
)

(define-function gtk_attach_options_get_type
  (c-name "gtk_attach_options_get_type")
  (return-type "GType")
)

(define-function gtk_button_box_style_get_type
  (c-name "gtk_button_box_style_get_type")
  (return-type "GType")
)

(define-function gtk_curve_type_get_type
  (c-name "gtk_curve_type_get_type")
  (return-type "GType")
)

(define-function gtk_delete_type_get_type
  (c-name "gtk_delete_type_get_type")
  (return-type "GType")
)

(define-function gtk_direction_type_get_type
  (c-name "gtk_direction_type_get_type")
  (return-type "GType")
)

(define-function gtk_expander_style_get_type
  (c-name "gtk_expander_style_get_type")
  (return-type "GType")
)

(define-function gtk_icon_size_get_type
  (c-name "gtk_icon_size_get_type")
  (return-type "GType")
)

(define-function gtk_side_type_get_type
  (c-name "gtk_side_type_get_type")
  (return-type "GType")
)

(define-function gtk_text_direction_get_type
  (c-name "gtk_text_direction_get_type")
  (return-type "GType")
)

(define-function gtk_justification_get_type
  (c-name "gtk_justification_get_type")
  (return-type "GType")
)

(define-function gtk_match_type_get_type
  (c-name "gtk_match_type_get_type")
  (return-type "GType")
)

(define-function gtk_menu_direction_type_get_type
  (c-name "gtk_menu_direction_type_get_type")
  (return-type "GType")
)

(define-function gtk_metric_type_get_type
  (c-name "gtk_metric_type_get_type")
  (return-type "GType")
)

(define-function gtk_movement_step_get_type
  (c-name "gtk_movement_step_get_type")
  (return-type "GType")
)

(define-function gtk_scroll_step_get_type
  (c-name "gtk_scroll_step_get_type")
  (return-type "GType")
)

(define-function gtk_orientation_get_type
  (c-name "gtk_orientation_get_type")
  (return-type "GType")
)

(define-function gtk_corner_type_get_type
  (c-name "gtk_corner_type_get_type")
  (return-type "GType")
)

(define-function gtk_pack_type_get_type
  (c-name "gtk_pack_type_get_type")
  (return-type "GType")
)

(define-function gtk_path_priority_type_get_type
  (c-name "gtk_path_priority_type_get_type")
  (return-type "GType")
)

(define-function gtk_path_type_get_type
  (c-name "gtk_path_type_get_type")
  (return-type "GType")
)

(define-function gtk_policy_type_get_type
  (c-name "gtk_policy_type_get_type")
  (return-type "GType")
)

(define-function gtk_position_type_get_type
  (c-name "gtk_position_type_get_type")
  (return-type "GType")
)

(define-function gtk_preview_type_get_type
  (c-name "gtk_preview_type_get_type")
  (return-type "GType")
)

(define-function gtk_relief_style_get_type
  (c-name "gtk_relief_style_get_type")
  (return-type "GType")
)

(define-function gtk_resize_mode_get_type
  (c-name "gtk_resize_mode_get_type")
  (return-type "GType")
)

(define-function gtk_signal_run_type_get_type
  (c-name "gtk_signal_run_type_get_type")
  (return-type "GType")
)

(define-function gtk_scroll_type_get_type
  (c-name "gtk_scroll_type_get_type")
  (return-type "GType")
)

(define-function gtk_selection_mode_get_type
  (c-name "gtk_selection_mode_get_type")
  (return-type "GType")
)

(define-function gtk_shadow_type_get_type
  (c-name "gtk_shadow_type_get_type")
  (return-type "GType")
)

(define-function gtk_state_type_get_type
  (c-name "gtk_state_type_get_type")
  (return-type "GType")
)

(define-function gtk_submenu_direction_get_type
  (c-name "gtk_submenu_direction_get_type")
  (return-type "GType")
)

(define-function gtk_submenu_placement_get_type
  (c-name "gtk_submenu_placement_get_type")
  (return-type "GType")
)

(define-function gtk_toolbar_style_get_type
  (c-name "gtk_toolbar_style_get_type")
  (return-type "GType")
)

(define-function gtk_update_type_get_type
  (c-name "gtk_update_type_get_type")
  (return-type "GType")
)

(define-function gtk_visibility_get_type
  (c-name "gtk_visibility_get_type")
  (return-type "GType")
)

(define-function gtk_window_position_get_type
  (c-name "gtk_window_position_get_type")
  (return-type "GType")
)

(define-function gtk_window_type_get_type
  (c-name "gtk_window_type_get_type")
  (return-type "GType")
)

(define-function gtk_wrap_mode_get_type
  (c-name "gtk_wrap_mode_get_type")
  (return-type "GType")
)

(define-function gtk_sort_type_get_type
  (c-name "gtk_sort_type_get_type")
  (return-type "GType")
)

(define-function gtk_im_preedit_style_get_type
  (c-name "gtk_im_preedit_style_get_type")
  (return-type "GType")
)

(define-function gtk_im_status_style_get_type
  (c-name "gtk_im_status_style_get_type")
  (return-type "GType")
)

(define-function gtk_file_chooser_action_get_type
  (c-name "gtk_file_chooser_action_get_type")
  (return-type "GType")
)

(define-function gtk_file_chooser_error_get_type
  (c-name "gtk_file_chooser_error_get_type")
  (return-type "GType")
)

(define-function gtk_file_filter_flags_get_type
  (c-name "gtk_file_filter_flags_get_type")
  (return-type "GType")
)

(define-function gtk_icon_lookup_flags_get_type
  (c-name "gtk_icon_lookup_flags_get_type")
  (return-type "GType")
)

(define-function gtk_icon_theme_error_get_type
  (c-name "gtk_icon_theme_error_get_type")
  (return-type "GType")
)

(define-function gtk_image_type_get_type
  (c-name "gtk_image_type_get_type")
  (return-type "GType")
)

(define-function gtk_message_type_get_type
  (c-name "gtk_message_type_get_type")
  (return-type "GType")
)

(define-function gtk_buttons_type_get_type
  (c-name "gtk_buttons_type_get_type")
  (return-type "GType")
)

(define-function gtk_notebook_tab_get_type
  (c-name "gtk_notebook_tab_get_type")
  (return-type "GType")
)

(define-function gtk_object_flags_get_type
  (c-name "gtk_object_flags_get_type")
  (return-type "GType")
)

(define-function gtk_arg_flags_get_type
  (c-name "gtk_arg_flags_get_type")
  (return-type "GType")
)

(define-function gtk_private_flags_get_type
  (c-name "gtk_private_flags_get_type")
  (return-type "GType")
)

(define-function gtk_progress_bar_style_get_type
  (c-name "gtk_progress_bar_style_get_type")
  (return-type "GType")
)

(define-function gtk_progress_bar_orientation_get_type
  (c-name "gtk_progress_bar_orientation_get_type")
  (return-type "GType")
)

(define-function gtk_rc_flags_get_type
  (c-name "gtk_rc_flags_get_type")
  (return-type "GType")
)

(define-function gtk_rc_token_type_get_type
  (c-name "gtk_rc_token_type_get_type")
  (return-type "GType")
)

(define-function gtk_size_group_mode_get_type
  (c-name "gtk_size_group_mode_get_type")
  (return-type "GType")
)

(define-function gtk_spin_button_update_policy_get_type
  (c-name "gtk_spin_button_update_policy_get_type")
  (return-type "GType")
)

(define-function gtk_spin_type_get_type
  (c-name "gtk_spin_type_get_type")
  (return-type "GType")
)

(define-function gtk_text_search_flags_get_type
  (c-name "gtk_text_search_flags_get_type")
  (return-type "GType")
)

(define-function gtk_text_window_type_get_type
  (c-name "gtk_text_window_type_get_type")
  (return-type "GType")
)

(define-function gtk_toolbar_child_type_get_type
  (c-name "gtk_toolbar_child_type_get_type")
  (return-type "GType")
)

(define-function gtk_toolbar_space_style_get_type
  (c-name "gtk_toolbar_space_style_get_type")
  (return-type "GType")
)

(define-function gtk_tree_view_mode_get_type
  (c-name "gtk_tree_view_mode_get_type")
  (return-type "GType")
)

(define-function gtk_tree_model_flags_get_type
  (c-name "gtk_tree_model_flags_get_type")
  (return-type "GType")
)

(define-function gtk_tree_view_drop_position_get_type
  (c-name "gtk_tree_view_drop_position_get_type")
  (return-type "GType")
)

(define-function gtk_tree_view_column_sizing_get_type
  (c-name "gtk_tree_view_column_sizing_get_type")
  (return-type "GType")
)

(define-function gtk_ui_manager_item_type_get_type
  (c-name "gtk_ui_manager_item_type_get_type")
  (return-type "GType")
)

(define-function gtk_widget_flags_get_type
  (c-name "gtk_widget_flags_get_type")
  (return-type "GType")
)

(define-function gtk_widget_help_type_get_type
  (c-name "gtk_widget_help_type_get_type")
  (return-type "GType")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtktypeutils.h

(define-method class
  (of-object "GtkType")
  (c-name "gtk_type_class")
  (return-type "gpointer")
)

(define-method unique
  (of-object "GtkType")
  (c-name "gtk_type_unique")
  (return-type "GtkType")
  (parameters
    '("const-GtkTypeInfo*" "gtkinfo")
  )
)

(define-method new
  (of-object "GtkType")
  (c-name "gtk_type_new")
  (return-type "gpointer")
)

(define-method enum_get_values
  (of-object "GtkType")
  (c-name "gtk_type_enum_get_values")
  (return-type "GtkEnumValue*")
)

(define-method flags_get_values
  (of-object "GtkType")
  (c-name "gtk_type_flags_get_values")
  (return-type "GtkFlagValue*")
)

(define-method enum_find_value
  (of-object "GtkType")
  (c-name "gtk_type_enum_find_value")
  (return-type "GtkEnumValue*")
  (parameters
    '("const-gchar*" "value_name")
  )
)

(define-method flags_find_value
  (of-object "GtkType")
  (c-name "gtk_type_flags_find_value")
  (return-type "GtkFlagValue*")
  (parameters
    '("const-gchar*" "value_name")
  )
)

(define-function gtk_type_init
  (c-name "gtk_type_init")
  (return-type "none")
  (parameters
    '("GTypeDebugFlags" "debug_flags")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkuimanager.h

(define-function gtk_ui_manager_get_type
  (c-name "gtk_ui_manager_get_type")
  (return-type "GType")
)

(define-function gtk_ui_manager_new
  (c-name "gtk_ui_manager_new")
  (is-constructor-of "GtkUiManager")
  (return-type "GtkUIManager*")
)

(define-method set_add_tearoffs
  (of-object "GtkUIManager")
  (c-name "gtk_ui_manager_set_add_tearoffs")
  (return-type "none")
  (parameters
    '("gboolean" "add_tearoffs")
  )
)

(define-method get_add_tearoffs
  (of-object "GtkUIManager")
  (c-name "gtk_ui_manager_get_add_tearoffs")
  (return-type "gboolean")
)

(define-method insert_action_group
  (of-object "GtkUIManager")
  (c-name "gtk_ui_manager_insert_action_group")
  (return-type "none")
  (parameters
    '("GtkActionGroup*" "action_group")
    '("gint" "pos")
  )
)

(define-method remove_action_group
  (of-object "GtkUIManager")
  (c-name "gtk_ui_manager_remove_action_group")
  (return-type "none")
  (parameters
    '("GtkActionGroup*" "action_group")
  )
)

(define-method get_action_groups
  (of-object "GtkUIManager")
  (c-name "gtk_ui_manager_get_action_groups")
  (return-type "GList*")
)

(define-method get_accel_group
  (of-object "GtkUIManager")
  (c-name "gtk_ui_manager_get_accel_group")
  (return-type "GtkAccelGroup*")
)

(define-method get_widget
  (of-object "GtkUIManager")
  (c-name "gtk_ui_manager_get_widget")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "path")
  )
)

(define-method get_action
  (of-object "GtkUIManager")
  (c-name "gtk_ui_manager_get_action")
  (return-type "GtkAction*")
  (parameters
    '("const-gchar*" "path")
  )
)

(define-method add_ui_from_string
  (of-object "GtkUIManager")
  (c-name "gtk_ui_manager_add_ui_from_string")
  (return-type "guint")
  (parameters
    '("const-gchar*" "buffer")
    '("gssize" "length")
    '("GError**" "error")
  )
)

(define-method add_ui_from_file
  (of-object "GtkUIManager")
  (c-name "gtk_ui_manager_add_ui_from_file")
  (return-type "guint")
  (parameters
    '("const-gchar*" "filename")
    '("GError**" "error")
  )
)

(define-method add_ui
  (of-object "GtkUIManager")
  (c-name "gtk_ui_manager_add_ui")
  (return-type "none")
  (parameters
    '("guint" "merge_id")
    '("const-gchar*" "path")
    '("const-gchar*" "name")
    '("const-gchar*" "action")
    '("GtkUIManagerItemType" "type")
    '("gboolean" "top")
  )
)

(define-method remove_ui
  (of-object "GtkUIManager")
  (c-name "gtk_ui_manager_remove_ui")
  (return-type "none")
  (parameters
    '("guint" "merge_id")
  )
)

(define-method get_ui
  (of-object "GtkUIManager")
  (c-name "gtk_ui_manager_get_ui")
  (return-type "gchar*")
)

(define-method ensure_update
  (of-object "GtkUIManager")
  (c-name "gtk_ui_manager_ensure_update")
  (return-type "none")
)

(define-method new_merge_id
  (of-object "GtkUIManager")
  (c-name "gtk_ui_manager_new_merge_id")
  (return-type "guint")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkvbbox.h

(define-function gtk_vbutton_box_get_type
  (c-name "gtk_vbutton_box_get_type")
  (return-type "GType")
)

(define-function gtk_vbutton_box_new
  (c-name "gtk_vbutton_box_new")
  (is-constructor-of "GtkVbuttonBox")
  (return-type "GtkWidget*")
)

(define-function gtk_vbutton_box_get_spacing_default
  (c-name "gtk_vbutton_box_get_spacing_default")
  (return-type "gint")
)

(define-function gtk_vbutton_box_set_spacing_default
  (c-name "gtk_vbutton_box_set_spacing_default")
  (return-type "none")
  (parameters
    '("gint" "spacing")
  )
)

(define-function gtk_vbutton_box_get_layout_default
  (c-name "gtk_vbutton_box_get_layout_default")
  (return-type "GtkButtonBoxStyle")
)

(define-function gtk_vbutton_box_set_layout_default
  (c-name "gtk_vbutton_box_set_layout_default")
  (return-type "none")
  (parameters
    '("GtkButtonBoxStyle" "layout")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkvbox.h

(define-function gtk_vbox_get_type
  (c-name "gtk_vbox_get_type")
  (return-type "GType")
)

(define-function gtk_vbox_new
  (c-name "gtk_vbox_new")
  (is-constructor-of "GtkVbox")
  (return-type "GtkWidget*")
  (parameters
    '("gboolean" "homogeneous")
    '("gint" "spacing")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkversion.h



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkviewport.h

(define-function gtk_viewport_get_type
  (c-name "gtk_viewport_get_type")
  (return-type "GType")
)

(define-function gtk_viewport_new
  (c-name "gtk_viewport_new")
  (is-constructor-of "GtkViewport")
  (return-type "GtkWidget*")
  (parameters
    '("GtkAdjustment*" "hadjustment")
    '("GtkAdjustment*" "vadjustment")
  )
)

(define-method get_hadjustment
  (of-object "GtkViewport")
  (c-name "gtk_viewport_get_hadjustment")
  (return-type "GtkAdjustment*")
)

(define-method get_vadjustment
  (of-object "GtkViewport")
  (c-name "gtk_viewport_get_vadjustment")
  (return-type "GtkAdjustment*")
)

(define-method set_hadjustment
  (of-object "GtkViewport")
  (c-name "gtk_viewport_set_hadjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment")
  )
)

(define-method set_vadjustment
  (of-object "GtkViewport")
  (c-name "gtk_viewport_set_vadjustment")
  (return-type "none")
  (parameters
    '("GtkAdjustment*" "adjustment")
  )
)

(define-method set_shadow_type
  (of-object "GtkViewport")
  (c-name "gtk_viewport_set_shadow_type")
  (return-type "none")
  (parameters
    '("GtkShadowType" "type")
  )
)

(define-method get_shadow_type
  (of-object "GtkViewport")
  (c-name "gtk_viewport_get_shadow_type")
  (return-type "GtkShadowType")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkvpaned.h

(define-function gtk_vpaned_get_type
  (c-name "gtk_vpaned_get_type")
  (return-type "GType")
)

(define-function gtk_vpaned_new
  (c-name "gtk_vpaned_new")
  (is-constructor-of "GtkVpaned")
  (return-type "GtkWidget*")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkvruler.h

(define-function gtk_vruler_get_type
  (c-name "gtk_vruler_get_type")
  (return-type "GType")
)

(define-function gtk_vruler_new
  (c-name "gtk_vruler_new")
  (is-constructor-of "GtkVruler")
  (return-type "GtkWidget*")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkvscale.h

(define-function gtk_vscale_get_type
  (c-name "gtk_vscale_get_type")
  (return-type "GType")
)

(define-function gtk_vscale_new
  (c-name "gtk_vscale_new")
  (is-constructor-of "GtkVscale")
  (return-type "GtkWidget*")
  (parameters
    '("GtkAdjustment*" "adjustment")
  )
)

(define-function gtk_vscale_new_with_range
  (c-name "gtk_vscale_new_with_range")
  (return-type "GtkWidget*")
  (parameters
    '("gdouble" "min")
    '("gdouble" "max")
    '("gdouble" "step")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkvscrollbar.h

(define-function gtk_vscrollbar_new
  (c-name "gtk_vscrollbar_new")
  (is-constructor-of "GtkVscrollbar")
  (return-type "GtkWidget*")
  (parameters
    '("GtkAdjustment*" "adjustment")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkvseparator.h

(define-function gtk_vseparator_get_type
  (c-name "gtk_vseparator_get_type")
  (return-type "GType")
)

(define-function gtk_vseparator_new
  (c-name "gtk_vseparator_new")
  (is-constructor-of "GtkVseparator")
  (return-type "GtkWidget*")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkwidget.h

(define-function gtk_widget_get_type
  (c-name "gtk_widget_get_type")
  (return-type "GType")
)

(define-function gtk_widget_new
  (c-name "gtk_widget_new")
  (is-constructor-of "GtkWidget")
  (return-type "GtkWidget*")
  (parameters
    '("GType" "type")
    '("const-gchar*" "first_property_name")
  )
  (varargs #t)
)

(define-method ref
  (of-object "GtkWidget")
  (c-name "gtk_widget_ref")
  (return-type "GtkWidget*")
)

(define-method unref
  (of-object "GtkWidget")
  (c-name "gtk_widget_unref")
  (return-type "none")
)

(define-method destroy
  (of-object "GtkWidget")
  (c-name "gtk_widget_destroy")
  (return-type "none")
)

(define-method destroyed
  (of-object "GtkWidget")
  (c-name "gtk_widget_destroyed")
  (return-type "none")
  (parameters
    '("GtkWidget**" "widget_pointer")
  )
)

(define-method set
  (of-object "GtkWidget")
  (c-name "gtk_widget_set")
  (return-type "none")
  (parameters
    '("const-gchar*" "first_property_name")
  )
  (varargs #t)
)

(define-method unparent
  (of-object "GtkWidget")
  (c-name "gtk_widget_unparent")
  (return-type "none")
)

(define-method show
  (of-object "GtkWidget")
  (c-name "gtk_widget_show")
  (return-type "none")
)

(define-method show_now
  (of-object "GtkWidget")
  (c-name "gtk_widget_show_now")
  (return-type "none")
)

(define-method hide
  (of-object "GtkWidget")
  (c-name "gtk_widget_hide")
  (return-type "none")
)

(define-method show_all
  (of-object "GtkWidget")
  (c-name "gtk_widget_show_all")
  (return-type "none")
)

(define-method hide_all
  (of-object "GtkWidget")
  (c-name "gtk_widget_hide_all")
  (return-type "none")
)

(define-method set_no_show_all
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_no_show_all")
  (return-type "none")
  (parameters
    '("gboolean" "no_show_all")
  )
)

(define-method get_no_show_all
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_no_show_all")
  (return-type "gboolean")
)

(define-method map
  (of-object "GtkWidget")
  (c-name "gtk_widget_map")
  (return-type "none")
)

(define-method unmap
  (of-object "GtkWidget")
  (c-name "gtk_widget_unmap")
  (return-type "none")
)

(define-method realize
  (of-object "GtkWidget")
  (c-name "gtk_widget_realize")
  (return-type "none")
)

(define-method unrealize
  (of-object "GtkWidget")
  (c-name "gtk_widget_unrealize")
  (return-type "none")
)

(define-method queue_draw
  (of-object "GtkWidget")
  (c-name "gtk_widget_queue_draw")
  (return-type "none")
)

(define-method queue_draw_area
  (of-object "GtkWidget")
  (c-name "gtk_widget_queue_draw_area")
  (return-type "none")
  (parameters
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method queue_clear
  (of-object "GtkWidget")
  (c-name "gtk_widget_queue_clear")
  (return-type "none")
)

(define-method queue_clear_area
  (of-object "GtkWidget")
  (c-name "gtk_widget_queue_clear_area")
  (return-type "none")
  (parameters
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method queue_resize
  (of-object "GtkWidget")
  (c-name "gtk_widget_queue_resize")
  (return-type "none")
)

(define-method queue_resize_no_redraw
  (of-object "GtkWidget")
  (c-name "gtk_widget_queue_resize_no_redraw")
  (return-type "none")
)

(define-method draw
  (of-object "GtkWidget")
  (c-name "gtk_widget_draw")
  (return-type "none")
  (parameters
    '("GdkRectangle*" "area")
  )
)

(define-method size_request
  (of-object "GtkWidget")
  (c-name "gtk_widget_size_request")
  (return-type "none")
  (parameters
    '("GtkRequisition*" "requisition")
  )
)

(define-method size_allocate
  (of-object "GtkWidget")
  (c-name "gtk_widget_size_allocate")
  (return-type "none")
  (parameters
    '("GtkAllocation*" "allocation")
  )
)

(define-method get_child_requisition
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_child_requisition")
  (return-type "none")
  (parameters
    '("GtkRequisition*" "requisition")
  )
)

(define-method add_accelerator
  (of-object "GtkWidget")
  (c-name "gtk_widget_add_accelerator")
  (return-type "none")
  (parameters
    '("const-gchar*" "accel_signal")
    '("GtkAccelGroup*" "accel_group")
    '("guint" "accel_key")
    '("GdkModifierType" "accel_mods")
    '("GtkAccelFlags" "accel_flags")
  )
)

(define-method remove_accelerator
  (of-object "GtkWidget")
  (c-name "gtk_widget_remove_accelerator")
  (return-type "gboolean")
  (parameters
    '("GtkAccelGroup*" "accel_group")
    '("guint" "accel_key")
    '("GdkModifierType" "accel_mods")
  )
)

(define-method set_accel_path
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_accel_path")
  (return-type "none")
  (parameters
    '("const-gchar*" "accel_path")
    '("GtkAccelGroup*" "accel_group")
  )
)

(define-method _get_accel_path
  (of-object "GtkWidget")
  (c-name "_gtk_widget_get_accel_path")
  (return-type "const-gchar*")
  (parameters
    '("gboolean*" "locked")
  )
)

(define-method list_accel_closures
  (of-object "GtkWidget")
  (c-name "gtk_widget_list_accel_closures")
  (return-type "GList*")
)

(define-method mnemonic_activate
  (of-object "GtkWidget")
  (c-name "gtk_widget_mnemonic_activate")
  (return-type "gboolean")
  (parameters
    '("gboolean" "group_cycling")
  )
)

(define-method event
  (of-object "GtkWidget")
  (c-name "gtk_widget_event")
  (return-type "gboolean")
  (parameters
    '("GdkEvent*" "event")
  )
)

(define-method send_expose
  (of-object "GtkWidget")
  (c-name "gtk_widget_send_expose")
  (return-type "gint")
  (parameters
    '("GdkEvent*" "event")
  )
)

(define-method activate
  (of-object "GtkWidget")
  (c-name "gtk_widget_activate")
  (return-type "gboolean")
)

(define-method set_scroll_adjustments
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_scroll_adjustments")
  (return-type "gboolean")
  (parameters
    '("GtkAdjustment*" "hadjustment")
    '("GtkAdjustment*" "vadjustment")
  )
)

(define-method reparent
  (of-object "GtkWidget")
  (c-name "gtk_widget_reparent")
  (return-type "none")
  (parameters
    '("GtkWidget*" "new_parent")
  )
)

(define-method intersect
  (of-object "GtkWidget")
  (c-name "gtk_widget_intersect")
  (return-type "gboolean")
  (parameters
    '("GdkRectangle*" "area")
    '("GdkRectangle*" "intersection")
  )
)

(define-method region_intersect
  (of-object "GtkWidget")
  (c-name "gtk_widget_region_intersect")
  (return-type "GdkRegion*")
  (parameters
    '("GdkRegion*" "region")
  )
)

(define-method freeze_child_notify
  (of-object "GtkWidget")
  (c-name "gtk_widget_freeze_child_notify")
  (return-type "none")
)

(define-method child_notify
  (of-object "GtkWidget")
  (c-name "gtk_widget_child_notify")
  (return-type "none")
  (parameters
    '("const-gchar*" "child_property")
  )
)

(define-method thaw_child_notify
  (of-object "GtkWidget")
  (c-name "gtk_widget_thaw_child_notify")
  (return-type "none")
)

(define-method is_focus
  (of-object "GtkWidget")
  (c-name "gtk_widget_is_focus")
  (return-type "gboolean")
)

(define-method grab_focus
  (of-object "GtkWidget")
  (c-name "gtk_widget_grab_focus")
  (return-type "none")
)

(define-method grab_default
  (of-object "GtkWidget")
  (c-name "gtk_widget_grab_default")
  (return-type "none")
)

(define-method set_name
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method get_name
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_name")
  (return-type "const-gchar*")
)

(define-method set_state
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_state")
  (return-type "none")
  (parameters
    '("GtkStateType" "state")
  )
)

(define-method set_sensitive
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_sensitive")
  (return-type "none")
  (parameters
    '("gboolean" "sensitive")
  )
)

(define-method set_app_paintable
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_app_paintable")
  (return-type "none")
  (parameters
    '("gboolean" "app_paintable")
  )
)

(define-method set_double_buffered
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_double_buffered")
  (return-type "none")
  (parameters
    '("gboolean" "double_buffered")
  )
)

(define-method set_redraw_on_allocate
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_redraw_on_allocate")
  (return-type "none")
  (parameters
    '("gboolean" "redraw_on_allocate")
  )
)

(define-method set_parent
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_parent")
  (return-type "none")
  (parameters
    '("GtkWidget*" "parent")
  )
)

(define-method set_parent_window
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_parent_window")
  (return-type "none")
  (parameters
    '("GdkWindow*" "parent_window")
  )
)

(define-method set_child_visible
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_child_visible")
  (return-type "none")
  (parameters
    '("gboolean" "is_visible")
  )
)

(define-method get_child_visible
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_child_visible")
  (return-type "gboolean")
)

(define-method get_parent
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_parent")
  (return-type "GtkWidget*")
)

(define-method get_parent_window
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_parent_window")
  (return-type "GdkWindow*")
)

(define-method child_focus
  (of-object "GtkWidget")
  (c-name "gtk_widget_child_focus")
  (return-type "gboolean")
  (parameters
    '("GtkDirectionType" "direction")
  )
)

(define-method set_size_request
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_size_request")
  (return-type "none")
  (parameters
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method get_size_request
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_size_request")
  (return-type "none")
  (parameters
    '("gint*" "width")
    '("gint*" "height")
  )
)

(define-method set_uposition
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_uposition")
  (return-type "none")
  (parameters
    '("gint" "x")
    '("gint" "y")
  )
)

(define-method set_usize
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_usize")
  (return-type "none")
  (parameters
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method set_events
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_events")
  (return-type "none")
  (parameters
    '("gint" "events")
  )
)

(define-method add_events
  (of-object "GtkWidget")
  (c-name "gtk_widget_add_events")
  (return-type "none")
  (parameters
    '("gint" "events")
  )
)

(define-method set_extension_events
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_extension_events")
  (return-type "none")
  (parameters
    '("GdkExtensionMode" "mode")
  )
)

(define-method get_extension_events
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_extension_events")
  (return-type "GdkExtensionMode")
)

(define-method get_toplevel
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_toplevel")
  (return-type "GtkWidget*")
)

(define-method get_ancestor
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_ancestor")
  (return-type "GtkWidget*")
  (parameters
    '("GType" "widget_type")
  )
)

(define-method get_colormap
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_colormap")
  (return-type "GdkColormap*")
)

(define-method get_visual
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_visual")
  (return-type "GdkVisual*")
)

(define-method get_screen
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_screen")
  (return-type "GdkScreen*")
)

(define-method has_screen
  (of-object "GtkWidget")
  (c-name "gtk_widget_has_screen")
  (return-type "gboolean")
)

(define-method get_display
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_display")
  (return-type "GdkDisplay*")
)

(define-method get_root_window
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_root_window")
  (return-type "GdkWindow*")
)

(define-method get_settings
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_settings")
  (return-type "GtkSettings*")
)

(define-method get_clipboard
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_clipboard")
  (return-type "GtkClipboard*")
  (parameters
    '("GdkAtom" "selection")
  )
)

(define-method get_accessible
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_accessible")
  (return-type "AtkObject*")
)

(define-method set_colormap
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_colormap")
  (return-type "none")
  (parameters
    '("GdkColormap*" "colormap")
  )
)

(define-method get_events
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_events")
  (return-type "gint")
)

(define-method get_pointer
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_pointer")
  (return-type "none")
  (parameters
    '("gint*" "x")
    '("gint*" "y")
  )
)

(define-method is_ancestor
  (of-object "GtkWidget")
  (c-name "gtk_widget_is_ancestor")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "ancestor")
  )
)

(define-method translate_coordinates
  (of-object "GtkWidget")
  (c-name "gtk_widget_translate_coordinates")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "dest_widget")
    '("gint" "src_x")
    '("gint" "src_y")
    '("gint*" "dest_x")
    '("gint*" "dest_y")
  )
)

(define-method hide_on_delete
  (of-object "GtkWidget")
  (c-name "gtk_widget_hide_on_delete")
  (return-type "gboolean")
)

(define-method set_style
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_style")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style")
  )
)

(define-method ensure_style
  (of-object "GtkWidget")
  (c-name "gtk_widget_ensure_style")
  (return-type "none")
)

(define-method get_style
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_style")
  (return-type "GtkStyle*")
)

(define-method modify_style
  (of-object "GtkWidget")
  (c-name "gtk_widget_modify_style")
  (return-type "none")
  (parameters
    '("GtkRcStyle*" "style")
  )
)

(define-method get_modifier_style
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_modifier_style")
  (return-type "GtkRcStyle*")
)

(define-method modify_fg
  (of-object "GtkWidget")
  (c-name "gtk_widget_modify_fg")
  (return-type "none")
  (parameters
    '("GtkStateType" "state")
    '("GdkColor*" "color")
  )
)

(define-method modify_bg
  (of-object "GtkWidget")
  (c-name "gtk_widget_modify_bg")
  (return-type "none")
  (parameters
    '("GtkStateType" "state")
    '("GdkColor*" "color")
  )
)

(define-method modify_text
  (of-object "GtkWidget")
  (c-name "gtk_widget_modify_text")
  (return-type "none")
  (parameters
    '("GtkStateType" "state")
    '("GdkColor*" "color")
  )
)

(define-method modify_base
  (of-object "GtkWidget")
  (c-name "gtk_widget_modify_base")
  (return-type "none")
  (parameters
    '("GtkStateType" "state")
    '("GdkColor*" "color")
  )
)

(define-method modify_font
  (of-object "GtkWidget")
  (c-name "gtk_widget_modify_font")
  (return-type "none")
  (parameters
    '("PangoFontDescription*" "font_desc")
  )
)

(define-method create_pango_context
  (of-object "GtkWidget")
  (c-name "gtk_widget_create_pango_context")
  (return-type "PangoContext*")
)

(define-method get_pango_context
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_pango_context")
  (return-type "PangoContext*")
)

(define-method create_pango_layout
  (of-object "GtkWidget")
  (c-name "gtk_widget_create_pango_layout")
  (return-type "PangoLayout*")
  (parameters
    '("const-gchar*" "text")
  )
)

(define-method render_icon
  (of-object "GtkWidget")
  (c-name "gtk_widget_render_icon")
  (return-type "GdkPixbuf*")
  (parameters
    '("const-gchar*" "stock_id")
    '("GtkIconSize" "size")
    '("const-gchar*" "detail")
  )
)

(define-method set_composite_name
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_composite_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method get_composite_name
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_composite_name")
  (return-type "gchar*")
)

(define-method reset_rc_styles
  (of-object "GtkWidget")
  (c-name "gtk_widget_reset_rc_styles")
  (return-type "none")
)

(define-function gtk_widget_push_colormap
  (c-name "gtk_widget_push_colormap")
  (return-type "none")
  (parameters
    '("GdkColormap*" "cmap")
  )
)

(define-function gtk_widget_push_composite_child
  (c-name "gtk_widget_push_composite_child")
  (return-type "none")
)

(define-function gtk_widget_pop_composite_child
  (c-name "gtk_widget_pop_composite_child")
  (return-type "none")
)

(define-function gtk_widget_pop_colormap
  (c-name "gtk_widget_pop_colormap")
  (return-type "none")
)

(define-method install_style_property
  (of-object "GtkWidgetClass")
  (c-name "gtk_widget_class_install_style_property")
  (return-type "none")
  (parameters
    '("GParamSpec*" "pspec")
  )
)

(define-method install_style_property_parser
  (of-object "GtkWidgetClass")
  (c-name "gtk_widget_class_install_style_property_parser")
  (return-type "none")
  (parameters
    '("GParamSpec*" "pspec")
    '("GtkRcPropertyParser" "parser")
  )
)

(define-method find_style_property
  (of-object "GtkWidgetClass")
  (c-name "gtk_widget_class_find_style_property")
  (return-type "GParamSpec*")
  (parameters
    '("const-gchar*" "property_name")
  )
)

(define-method list_style_properties
  (of-object "GtkWidgetClass")
  (c-name "gtk_widget_class_list_style_properties")
  (return-type "GParamSpec**")
  (parameters
    '("guint*" "n_properties")
  )
)

(define-method style_get_property
  (of-object "GtkWidget")
  (c-name "gtk_widget_style_get_property")
  (return-type "none")
  (parameters
    '("const-gchar*" "property_name")
    '("GValue*" "value")
  )
)

(define-method style_get_valist
  (of-object "GtkWidget")
  (c-name "gtk_widget_style_get_valist")
  (return-type "none")
  (parameters
    '("const-gchar*" "first_property_name")
    '("va_list" "var_args")
  )
)

(define-method style_get
  (of-object "GtkWidget")
  (c-name "gtk_widget_style_get")
  (return-type "none")
  (parameters
    '("const-gchar*" "first_property_name")
  )
  (varargs #t)
)

(define-function gtk_widget_set_default_colormap
  (c-name "gtk_widget_set_default_colormap")
  (return-type "none")
  (parameters
    '("GdkColormap*" "colormap")
  )
)

(define-function gtk_widget_get_default_style
  (c-name "gtk_widget_get_default_style")
  (return-type "GtkStyle*")
)

(define-function gtk_widget_get_default_colormap
  (c-name "gtk_widget_get_default_colormap")
  (return-type "GdkColormap*")
)

(define-function gtk_widget_get_default_visual
  (c-name "gtk_widget_get_default_visual")
  (return-type "GdkVisual*")
)

(define-method set_direction
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_direction")
  (return-type "none")
  (parameters
    '("GtkTextDirection" "dir")
  )
)

(define-method get_direction
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_direction")
  (return-type "GtkTextDirection")
)

(define-function gtk_widget_set_default_direction
  (c-name "gtk_widget_set_default_direction")
  (return-type "none")
  (parameters
    '("GtkTextDirection" "dir")
  )
)

(define-function gtk_widget_get_default_direction
  (c-name "gtk_widget_get_default_direction")
  (return-type "GtkTextDirection")
)

(define-method shape_combine_mask
  (of-object "GtkWidget")
  (c-name "gtk_widget_shape_combine_mask")
  (return-type "none")
  (parameters
    '("GdkBitmap*" "shape_mask")
    '("gint" "offset_x")
    '("gint" "offset_y")
  )
)

(define-method reset_shapes
  (of-object "GtkWidget")
  (c-name "gtk_widget_reset_shapes")
  (return-type "none")
)

(define-method path
  (of-object "GtkWidget")
  (c-name "gtk_widget_path")
  (return-type "none")
  (parameters
    '("guint*" "path_length")
    '("gchar**" "path")
    '("gchar**" "path_reversed")
  )
)

(define-method class_path
  (of-object "GtkWidget")
  (c-name "gtk_widget_class_path")
  (return-type "none")
  (parameters
    '("guint*" "path_length")
    '("gchar**" "path")
    '("gchar**" "path_reversed")
  )
)

(define-function gtk_requisition_get_type
  (c-name "gtk_requisition_get_type")
  (return-type "GType")
)

(define-method copy
  (of-object "GtkRequisition")
  (c-name "gtk_requisition_copy")
  (return-type "GtkRequisition*")
)

(define-method free
  (of-object "GtkRequisition")
  (c-name "gtk_requisition_free")
  (return-type "none")
)

(define-method _get_aux_info
  (of-object "GtkWidget")
  (c-name "_gtk_widget_get_aux_info")
  (return-type "GtkWidgetAuxInfo*")
  (parameters
    '("gboolean" "create")
  )
)

(define-method _propagate_hierarchy_changed
  (of-object "GtkWidget")
  (c-name "_gtk_widget_propagate_hierarchy_changed")
  (return-type "none")
  (parameters
    '("GtkWidget*" "previous_toplevel")
  )
)

(define-method _propagate_screen_changed
  (of-object "GtkWidget")
  (c-name "_gtk_widget_propagate_screen_changed")
  (return-type "none")
  (parameters
    '("GdkScreen*" "previous_screen")
  )
)

(define-function _gtk_widget_peek_colormap
  (c-name "_gtk_widget_peek_colormap")
  (return-type "GdkColormap*")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkwindow-decorate.h

(define-function gtk_decorated_window_init
  (c-name "gtk_decorated_window_init")
  (return-type "none")
  (parameters
    '("GtkWindow*" "window")
  )
)

(define-function gtk_decorated_window_calculate_frame_size
  (c-name "gtk_decorated_window_calculate_frame_size")
  (return-type "none")
  (parameters
    '("GtkWindow*" "window")
  )
)

(define-function gtk_decorated_window_set_title
  (c-name "gtk_decorated_window_set_title")
  (return-type "none")
  (parameters
    '("GtkWindow*" "window")
    '("const-gchar*" "title")
  )
)

(define-function gtk_decorated_window_move_resize_window
  (c-name "gtk_decorated_window_move_resize_window")
  (return-type "none")
  (parameters
    '("GtkWindow*" "window")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkwindow.h

(define-function gtk_window_get_type
  (c-name "gtk_window_get_type")
  (return-type "GType")
)

(define-function gtk_window_new
  (c-name "gtk_window_new")
  (is-constructor-of "GtkWindow")
  (return-type "GtkWidget*")
  (parameters
    '("GtkWindowType" "type")
  )
)

(define-method set_title
  (of-object "GtkWindow")
  (c-name "gtk_window_set_title")
  (return-type "none")
  (parameters
    '("const-gchar*" "title")
  )
)

(define-method get_title
  (of-object "GtkWindow")
  (c-name "gtk_window_get_title")
  (return-type "const-gchar*")
)

(define-method set_wmclass
  (of-object "GtkWindow")
  (c-name "gtk_window_set_wmclass")
  (return-type "none")
  (parameters
    '("const-gchar*" "wmclass_name")
    '("const-gchar*" "wmclass_class")
  )
)

(define-method set_role
  (of-object "GtkWindow")
  (c-name "gtk_window_set_role")
  (return-type "none")
  (parameters
    '("const-gchar*" "role")
  )
)

(define-method get_role
  (of-object "GtkWindow")
  (c-name "gtk_window_get_role")
  (return-type "const-gchar*")
)

(define-method add_accel_group
  (of-object "GtkWindow")
  (c-name "gtk_window_add_accel_group")
  (return-type "none")
  (parameters
    '("GtkAccelGroup*" "accel_group")
  )
)

(define-method remove_accel_group
  (of-object "GtkWindow")
  (c-name "gtk_window_remove_accel_group")
  (return-type "none")
  (parameters
    '("GtkAccelGroup*" "accel_group")
  )
)

(define-method set_position
  (of-object "GtkWindow")
  (c-name "gtk_window_set_position")
  (return-type "none")
  (parameters
    '("GtkWindowPosition" "position")
  )
)

(define-method activate_focus
  (of-object "GtkWindow")
  (c-name "gtk_window_activate_focus")
  (return-type "gboolean")
)

(define-method set_focus
  (of-object "GtkWindow")
  (c-name "gtk_window_set_focus")
  (return-type "none")
  (parameters
    '("GtkWidget*" "focus")
  )
)

(define-method get_focus
  (of-object "GtkWindow")
  (c-name "gtk_window_get_focus")
  (return-type "GtkWidget*")
)

(define-method set_default
  (of-object "GtkWindow")
  (c-name "gtk_window_set_default")
  (return-type "none")
  (parameters
    '("GtkWidget*" "default_widget")
  )
)

(define-method activate_default
  (of-object "GtkWindow")
  (c-name "gtk_window_activate_default")
  (return-type "gboolean")
)

(define-method set_transient_for
  (of-object "GtkWindow")
  (c-name "gtk_window_set_transient_for")
  (return-type "none")
  (parameters
    '("GtkWindow*" "parent")
  )
)

(define-method get_transient_for
  (of-object "GtkWindow")
  (c-name "gtk_window_get_transient_for")
  (return-type "GtkWindow*")
)

(define-method set_type_hint
  (of-object "GtkWindow")
  (c-name "gtk_window_set_type_hint")
  (return-type "none")
  (parameters
    '("GdkWindowTypeHint" "hint")
  )
)

(define-method get_type_hint
  (of-object "GtkWindow")
  (c-name "gtk_window_get_type_hint")
  (return-type "GdkWindowTypeHint")
)

(define-method set_skip_taskbar_hint
  (of-object "GtkWindow")
  (c-name "gtk_window_set_skip_taskbar_hint")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_skip_taskbar_hint
  (of-object "GtkWindow")
  (c-name "gtk_window_get_skip_taskbar_hint")
  (return-type "gboolean")
)

(define-method set_skip_pager_hint
  (of-object "GtkWindow")
  (c-name "gtk_window_set_skip_pager_hint")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_skip_pager_hint
  (of-object "GtkWindow")
  (c-name "gtk_window_get_skip_pager_hint")
  (return-type "gboolean")
)

(define-method set_destroy_with_parent
  (of-object "GtkWindow")
  (c-name "gtk_window_set_destroy_with_parent")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_destroy_with_parent
  (of-object "GtkWindow")
  (c-name "gtk_window_get_destroy_with_parent")
  (return-type "gboolean")
)

(define-method set_resizable
  (of-object "GtkWindow")
  (c-name "gtk_window_set_resizable")
  (return-type "none")
  (parameters
    '("gboolean" "resizable")
  )
)

(define-method get_resizable
  (of-object "GtkWindow")
  (c-name "gtk_window_get_resizable")
  (return-type "gboolean")
)

(define-method set_gravity
  (of-object "GtkWindow")
  (c-name "gtk_window_set_gravity")
  (return-type "none")
  (parameters
    '("GdkGravity" "gravity")
  )
)

(define-method get_gravity
  (of-object "GtkWindow")
  (c-name "gtk_window_get_gravity")
  (return-type "GdkGravity")
)

(define-method set_geometry_hints
  (of-object "GtkWindow")
  (c-name "gtk_window_set_geometry_hints")
  (return-type "none")
  (parameters
    '("GtkWidget*" "geometry_widget")
    '("GdkGeometry*" "geometry")
    '("GdkWindowHints" "geom_mask")
  )
)

(define-method set_screen
  (of-object "GtkWindow")
  (c-name "gtk_window_set_screen")
  (return-type "none")
  (parameters
    '("GdkScreen*" "screen")
  )
)

(define-method get_screen
  (of-object "GtkWindow")
  (c-name "gtk_window_get_screen")
  (return-type "GdkScreen*")
)

(define-method is_active
  (of-object "GtkWindow")
  (c-name "gtk_window_is_active")
  (return-type "gboolean")
)

(define-method has_toplevel_focus
  (of-object "GtkWindow")
  (c-name "gtk_window_has_toplevel_focus")
  (return-type "gboolean")
)

(define-method set_has_frame
  (of-object "GtkWindow")
  (c-name "gtk_window_set_has_frame")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_has_frame
  (of-object "GtkWindow")
  (c-name "gtk_window_get_has_frame")
  (return-type "gboolean")
)

(define-method set_frame_dimensions
  (of-object "GtkWindow")
  (c-name "gtk_window_set_frame_dimensions")
  (return-type "none")
  (parameters
    '("gint" "left")
    '("gint" "top")
    '("gint" "right")
    '("gint" "bottom")
  )
)

(define-method get_frame_dimensions
  (of-object "GtkWindow")
  (c-name "gtk_window_get_frame_dimensions")
  (return-type "none")
  (parameters
    '("gint*" "left")
    '("gint*" "top")
    '("gint*" "right")
    '("gint*" "bottom")
  )
)

(define-method set_decorated
  (of-object "GtkWindow")
  (c-name "gtk_window_set_decorated")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method get_decorated
  (of-object "GtkWindow")
  (c-name "gtk_window_get_decorated")
  (return-type "gboolean")
)

(define-method set_icon_list
  (of-object "GtkWindow")
  (c-name "gtk_window_set_icon_list")
  (return-type "none")
  (parameters
    '("GList*" "list")
  )
)

(define-method get_icon_list
  (of-object "GtkWindow")
  (c-name "gtk_window_get_icon_list")
  (return-type "GList*")
)

(define-method set_icon
  (of-object "GtkWindow")
  (c-name "gtk_window_set_icon")
  (return-type "none")
  (parameters
    '("GdkPixbuf*" "icon")
  )
)

(define-method set_icon_from_file
  (of-object "GtkWindow")
  (c-name "gtk_window_set_icon_from_file")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "filename")
    '("GError**" "err")
  )
)

(define-method get_icon
  (of-object "GtkWindow")
  (c-name "gtk_window_get_icon")
  (return-type "GdkPixbuf*")
)

(define-function gtk_window_set_default_icon_list
  (c-name "gtk_window_set_default_icon_list")
  (return-type "none")
  (parameters
    '("GList*" "list")
  )
)

(define-function gtk_window_get_default_icon_list
  (c-name "gtk_window_get_default_icon_list")
  (return-type "GList*")
)

(define-function gtk_window_set_default_icon
  (c-name "gtk_window_set_default_icon")
  (return-type "none")
  (parameters
    '("GdkPixbuf*" "icon")
  )
)

(define-function gtk_window_set_default_icon_from_file
  (c-name "gtk_window_set_default_icon_from_file")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "filename")
    '("GError**" "err")
  )
)

(define-function gtk_window_set_auto_startup_notification
  (c-name "gtk_window_set_auto_startup_notification")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method set_modal
  (of-object "GtkWindow")
  (c-name "gtk_window_set_modal")
  (return-type "none")
  (parameters
    '("gboolean" "modal")
  )
)

(define-method get_modal
  (of-object "GtkWindow")
  (c-name "gtk_window_get_modal")
  (return-type "gboolean")
)

(define-function gtk_window_list_toplevels
  (c-name "gtk_window_list_toplevels")
  (return-type "GList*")
)

(define-method add_mnemonic
  (of-object "GtkWindow")
  (c-name "gtk_window_add_mnemonic")
  (return-type "none")
  (parameters
    '("guint" "keyval")
    '("GtkWidget*" "target")
  )
)

(define-method remove_mnemonic
  (of-object "GtkWindow")
  (c-name "gtk_window_remove_mnemonic")
  (return-type "none")
  (parameters
    '("guint" "keyval")
    '("GtkWidget*" "target")
  )
)

(define-method mnemonic_activate
  (of-object "GtkWindow")
  (c-name "gtk_window_mnemonic_activate")
  (return-type "gboolean")
  (parameters
    '("guint" "keyval")
    '("GdkModifierType" "modifier")
  )
)

(define-method set_mnemonic_modifier
  (of-object "GtkWindow")
  (c-name "gtk_window_set_mnemonic_modifier")
  (return-type "none")
  (parameters
    '("GdkModifierType" "modifier")
  )
)

(define-method get_mnemonic_modifier
  (of-object "GtkWindow")
  (c-name "gtk_window_get_mnemonic_modifier")
  (return-type "GdkModifierType")
)

(define-method present
  (of-object "GtkWindow")
  (c-name "gtk_window_present")
  (return-type "none")
)

(define-method iconify
  (of-object "GtkWindow")
  (c-name "gtk_window_iconify")
  (return-type "none")
)

(define-method deiconify
  (of-object "GtkWindow")
  (c-name "gtk_window_deiconify")
  (return-type "none")
)

(define-method stick
  (of-object "GtkWindow")
  (c-name "gtk_window_stick")
  (return-type "none")
)

(define-method unstick
  (of-object "GtkWindow")
  (c-name "gtk_window_unstick")
  (return-type "none")
)

(define-method maximize
  (of-object "GtkWindow")
  (c-name "gtk_window_maximize")
  (return-type "none")
)

(define-method unmaximize
  (of-object "GtkWindow")
  (c-name "gtk_window_unmaximize")
  (return-type "none")
)

(define-method fullscreen
  (of-object "GtkWindow")
  (c-name "gtk_window_fullscreen")
  (return-type "none")
)

(define-method unfullscreen
  (of-object "GtkWindow")
  (c-name "gtk_window_unfullscreen")
  (return-type "none")
)

(define-method set_keep_above
  (of-object "GtkWindow")
  (c-name "gtk_window_set_keep_above")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method set_keep_below
  (of-object "GtkWindow")
  (c-name "gtk_window_set_keep_below")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method begin_resize_drag
  (of-object "GtkWindow")
  (c-name "gtk_window_begin_resize_drag")
  (return-type "none")
  (parameters
    '("GdkWindowEdge" "edge")
    '("gint" "button")
    '("gint" "root_x")
    '("gint" "root_y")
    '("guint32" "timestamp")
  )
)

(define-method begin_move_drag
  (of-object "GtkWindow")
  (c-name "gtk_window_begin_move_drag")
  (return-type "none")
  (parameters
    '("gint" "button")
    '("gint" "root_x")
    '("gint" "root_y")
    '("guint32" "timestamp")
  )
)

(define-method set_policy
  (of-object "GtkWindow")
  (c-name "gtk_window_set_policy")
  (return-type "none")
  (parameters
    '("gint" "allow_shrink")
    '("gint" "allow_grow")
    '("gint" "auto_shrink")
  )
)

(define-method set_default_size
  (of-object "GtkWindow")
  (c-name "gtk_window_set_default_size")
  (return-type "none")
  (parameters
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method get_default_size
  (of-object "GtkWindow")
  (c-name "gtk_window_get_default_size")
  (return-type "none")
  (parameters
    '("gint*" "width")
    '("gint*" "height")
  )
)

(define-method resize
  (of-object "GtkWindow")
  (c-name "gtk_window_resize")
  (return-type "none")
  (parameters
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method get_size
  (of-object "GtkWindow")
  (c-name "gtk_window_get_size")
  (return-type "none")
  (parameters
    '("gint*" "width")
    '("gint*" "height")
  )
)

(define-method move
  (of-object "GtkWindow")
  (c-name "gtk_window_move")
  (return-type "none")
  (parameters
    '("gint" "x")
    '("gint" "y")
  )
)

(define-method get_position
  (of-object "GtkWindow")
  (c-name "gtk_window_get_position")
  (return-type "none")
  (parameters
    '("gint*" "root_x")
    '("gint*" "root_y")
  )
)

(define-method parse_geometry
  (of-object "GtkWindow")
  (c-name "gtk_window_parse_geometry")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "geometry")
  )
)

(define-method reshow_with_initial_size
  (of-object "GtkWindow")
  (c-name "gtk_window_reshow_with_initial_size")
  (return-type "none")
)

(define-function gtk_window_group_get_type
  (c-name "gtk_window_group_get_type")
  (return-type "GType")
)

(define-function gtk_window_group_new
  (c-name "gtk_window_group_new")
  (is-constructor-of "GtkWindowGroup")
  (return-type "GtkWindowGroup*")
)

(define-method add_window
  (of-object "GtkWindowGroup")
  (c-name "gtk_window_group_add_window")
  (return-type "none")
  (parameters
    '("GtkWindow*" "window")
  )
)

(define-method remove_window
  (of-object "GtkWindowGroup")
  (c-name "gtk_window_group_remove_window")
  (return-type "none")
  (parameters
    '("GtkWindow*" "window")
  )
)

(define-method _internal_set_focus
  (of-object "GtkWindow")
  (c-name "_gtk_window_internal_set_focus")
  (return-type "none")
  (parameters
    '("GtkWidget*" "focus")
  )
)

(define-method remove_embedded_xid
  (of-object "GtkWindow")
  (c-name "gtk_window_remove_embedded_xid")
  (return-type "none")
  (parameters
    '("guint" "xid")
  )
)

(define-method add_embedded_xid
  (of-object "GtkWindow")
  (c-name "gtk_window_add_embedded_xid")
  (return-type "none")
  (parameters
    '("guint" "xid")
  )
)

(define-method _reposition
  (of-object "GtkWindow")
  (c-name "_gtk_window_reposition")
  (return-type "none")
  (parameters
    '("gint" "x")
    '("gint" "y")
  )
)

(define-method _constrain_size
  (of-object "GtkWindow")
  (c-name "_gtk_window_constrain_size")
  (return-type "none")
  (parameters
    '("gint" "width")
    '("gint" "height")
    '("gint*" "new_width")
    '("gint*" "new_height")
  )
)

(define-method _get_group
  (of-object "GtkWindow")
  (c-name "_gtk_window_get_group")
  (return-type "GtkWindowGroup*")
)

(define-method _activate_key
  (of-object "GtkWindow")
  (c-name "_gtk_window_activate_key")
  (return-type "gboolean")
  (parameters
    '("GdkEventKey*" "event")
  )
)

(define-method _set_has_toplevel_focus
  (of-object "GtkWindow")
  (c-name "_gtk_window_set_has_toplevel_focus")
  (return-type "none")
  (parameters
    '("gboolean" "has_toplevel_focus")
  )
)

(define-method _unset_focus_and_default
  (of-object "GtkWindow")
  (c-name "_gtk_window_unset_focus_and_default")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-method _set_is_active
  (of-object "GtkWindow")
  (c-name "_gtk_window_set_is_active")
  (return-type "none")
  (parameters
    '("gboolean" "is_active")
  )
)

(define-method _keys_foreach
  (of-object "GtkWindow")
  (c-name "_gtk_window_keys_foreach")
  (return-type "none")
  (parameters
    '("GtkWindowKeysForeachFunc" "func")
    '("gpointer" "func_data")
  )
)

(define-method _query_nonaccels
  (of-object "GtkWindow")
  (c-name "_gtk_window_query_nonaccels")
  (return-type "gboolean")
  (parameters
    '("guint" "accel_key")
    '("GdkModifierType" "accel_mods")
  )
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/gtkxembed.h

(define-function _gtk_xembed_send_focus_message
  (c-name "_gtk_xembed_send_focus_message")
  (return-type "none")
  (parameters
    '("GdkWindow*" "recipient")
    '("XEmbedMessageType" "message")
    '("glong" "detail")
  )
)

(define-function _gtk_xembed_push_message
  (c-name "_gtk_xembed_push_message")
  (return-type "none")
  (parameters
    '("XEvent*" "xevent")
  )
)

(define-function _gtk_xembed_pop_message
  (c-name "_gtk_xembed_pop_message")
  (return-type "none")
)

(define-function _gtk_xembed_set_focus_wrapped
  (c-name "_gtk_xembed_set_focus_wrapped")
  (return-type "none")
)

(define-function _gtk_xembed_get_focus_wrapped
  (c-name "_gtk_xembed_get_focus_wrapped")
  (return-type "gboolean")
)



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/stamp-gtkmarshalers.h



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/stamp-gtkmarshal.h



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/stamp-gtktypebuiltins.h



;; From /home/murrayc/cvs/gnome26/gtk+/gtk/xembed.h


