(define-signal activate-link
  (of-object "GtkAboutDialog")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("const-gchar*" "uri")
  )
)

(define-signal accel-activate
  (of-object "GtkAccelGroup")
  (return-type "gboolean")
  (when "first")
  (parameters
    '("GObject*" "acceleratable")
    '("guint" "keyval")
    '("GdkModifierType" "modifier")
  )
)

(define-signal accel-changed
  (of-object "GtkAccelGroup")
  (return-type "void")
  (when "first")
  (parameters
    '("guint" "keyval")
    '("GdkModifierType" "modifier")
    '("GClosure*" "accel_closure")
  )
)

(define-signal changed
  (of-object "GtkAccelMap")
  (return-type "void")
  (when "last")
  (parameters
    '("const-gchar*" "accel_path")
    '("guint" "accel_key")
    '("GdkModifierType" "accel_mods")
  )
)

(define-signal activate
  (of-object "GtkAction")
  (return-type "void")
  (when "first")
)

(define-signal connect-proxy
  (of-object "GtkActionGroup")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkAction*" "action")
    '("GtkWidget*" "proxy")
  )
)

(define-signal disconnect-proxy
  (of-object "GtkActionGroup")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkAction*" "action")
    '("GtkWidget*" "proxy")
  )
)

(define-signal post-activate
  (of-object "GtkActionGroup")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkAction*" "action")
  )
)

(define-signal pre-activate
  (of-object "GtkActionGroup")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkAction*" "action")
  )
)

(define-signal changed
  (of-object "GtkAdjustment")
  (return-type "void")
  (when "first")
)

(define-signal value-changed
  (of-object "GtkAdjustment")
  (return-type "void")
  (when "first")
)

(define-signal custom-item-activated
  (of-object "GtkAppChooserButton")
  (return-type "void")
  (when "first")
  (parameters
    '("const-gchar*" "item_name")
  )
)

(define-signal application-activated
  (of-object "GtkAppChooserWidget")
  (return-type "void")
  (when "first")
  (parameters
    '("GAppInfo*" "application")
  )
)

(define-signal application-selected
  (of-object "GtkAppChooserWidget")
  (return-type "void")
  (when "first")
  (parameters
    '("GAppInfo*" "application")
  )
)

(define-signal populate-popup
  (of-object "GtkAppChooserWidget")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkMenu*" "menu")
    '("GAppInfo*" "application")
  )
)

(define-signal window-added
  (of-object "GtkApplication")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkWindow*" "window")
  )
)

(define-signal window-removed
  (of-object "GtkApplication")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkWindow*" "window")
  )
)

(define-signal apply
  (of-object "GtkAssistant")
  (return-type "void")
  (when "last")
)

(define-signal cancel
  (of-object "GtkAssistant")
  (return-type "void")
  (when "last")
)

(define-signal close
  (of-object "GtkAssistant")
  (return-type "void")
  (when "last")
)

(define-signal escape
  (of-object "GtkAssistant")
  (return-type "void")
  (when "first")
)

(define-signal prepare
  (of-object "GtkAssistant")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkWidget*" "page")
  )
)

(define-signal activate
  (of-object "GtkButton")
  (return-type "void")
  (when "first")
)

(define-signal clicked
  (of-object "GtkButton")
  (return-type "void")
  (when "first")
)

(define-signal enter
  (of-object "GtkButton")
  (return-type "void")
  (when "first")
)

(define-signal leave
  (of-object "GtkButton")
  (return-type "void")
  (when "first")
)

(define-signal pressed
  (of-object "GtkButton")
  (return-type "void")
  (when "first")
)

(define-signal released
  (of-object "GtkButton")
  (return-type "void")
  (when "first")
)

(define-signal day-selected
  (of-object "GtkCalendar")
  (return-type "void")
  (when "first")
)

(define-signal day-selected-double-click
  (of-object "GtkCalendar")
  (return-type "void")
  (when "first")
)

(define-signal month-changed
  (of-object "GtkCalendar")
  (return-type "void")
  (when "first")
)

(define-signal next-month
  (of-object "GtkCalendar")
  (return-type "void")
  (when "first")
)

(define-signal next-year
  (of-object "GtkCalendar")
  (return-type "void")
  (when "first")
)

(define-signal prev-month
  (of-object "GtkCalendar")
  (return-type "void")
  (when "first")
)

(define-signal prev-year
  (of-object "GtkCalendar")
  (return-type "void")
  (when "first")
)

(define-signal add-editable
  (of-object "GtkCellArea")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkCellRenderer*" "renderer")
    '("GtkCellEditable*" "editable")
    '("GdkRectangle*" "cell_area")
    '("const-gchar*" "path")
  )
)

(define-signal apply-attributes
  (of-object "GtkCellArea")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkTreeModel*" "model")
    '("GtkTreeIter*" "iter")
    '("gboolean" "is_expander")
    '("gboolean" "is_expanded")
  )
)

(define-signal focus-changed
  (of-object "GtkCellArea")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkCellRenderer*" "renderer")
    '("const-gchar*" "path")
  )
)

(define-signal remove-editable
  (of-object "GtkCellArea")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkCellRenderer*" "renderer")
    '("GtkCellEditable*" "editable")
  )
)

(define-signal editing-canceled
  (of-object "GtkCellRenderer")
  (return-type "void")
  (when "first")
)

(define-signal editing-started
  (of-object "GtkCellRenderer")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkCellEditable*" "editable")
    '("const-gchar*" "path")
  )
)

(define-signal accel-cleared
  (of-object "GtkCellRendererAccel")
  (return-type "void")
  (when "last")
  (parameters
    '("const-gchar*" "path_string")
  )
)

(define-signal accel-edited
  (of-object "GtkCellRendererAccel")
  (return-type "void")
  (when "last")
  (parameters
    '("const-gchar*" "path_string")
    '("guint" "accel_key")
    '("GdkModifierType" "accel_mods")
    '("guint" "hardware_keycode")
  )
)

(define-signal changed
  (of-object "GtkCellRendererCombo")
  (return-type "void")
  (when "last")
  (parameters
    '("const-gchar*" "path_string")
    '("GtkTreeIter*" "new_iter")
  )
)

(define-signal edited
  (of-object "GtkCellRendererText")
  (return-type "void")
  (when "last")
  (parameters
    '("const-gchar*" "path")
    '("const-gchar*" "new_text")
  )
)

(define-signal toggled
  (of-object "GtkCellRendererToggle")
  (return-type "void")
  (when "last")
  (parameters
    '("const-gchar*" "path")
  )
)

(define-signal toggled
  (of-object "GtkCheckMenuItem")
  (return-type "void")
  (when "first")
)

(define-signal owner-change
  (of-object "GtkClipboard")
  (return-type "void")
  (when "first")
  (parameters
    '("GdkEventOwnerChange*" "event")
  )
)

(define-signal color-set
  (of-object "GtkColorButton")
  (return-type "void")
  (when "first")
)

(define-signal color-changed
  (of-object "GtkColorSelection")
  (return-type "void")
  (when "first")
)

(define-signal changed
  (of-object "GtkComboBox")
  (return-type "void")
  (when "last")
)

(define-signal format-entry-text
  (of-object "GtkComboBox")
  (return-type "gchar*")
  (when "last")
  (parameters
    '("const-gchar*" "path")
  )
)

(define-signal move-active
  (of-object "GtkComboBox")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkScrollType" "scroll_type")
  )
)

(define-signal popdown
  (of-object "GtkComboBox")
  (return-type "gboolean")
  (when "last")
)

(define-signal popup
  (of-object "GtkComboBox")
  (return-type "void")
  (when "last")
)

(define-signal add
  (of-object "GtkContainer")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkWidget*" "object")
  )
)

(define-signal check-resize
  (of-object "GtkContainer")
  (return-type "void")
  (when "last")
)

(define-signal remove
  (of-object "GtkContainer")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkWidget*" "object")
  )
)

(define-signal set-focus-child
  (of-object "GtkContainer")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkWidget*" "object")
  )
)

(define-signal parsing-error
  (of-object "GtkCssProvider")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkCssSection*" "section")
    '("GError*" "error")
  )
)

(define-signal close
  (of-object "GtkDialog")
  (return-type "void")
  (when "last")
)

(define-signal response
  (of-object "GtkDialog")
  (return-type "void")
  (when "last")
  (parameters
    '("gint" "response_id")
  )
)

(define-signal activate
  (of-object "GtkEntry")
  (return-type "void")
  (when "last")
)

(define-signal backspace
  (of-object "GtkEntry")
  (return-type "void")
  (when "last")
)

(define-signal copy-clipboard
  (of-object "GtkEntry")
  (return-type "void")
  (when "last")
)

(define-signal cut-clipboard
  (of-object "GtkEntry")
  (return-type "void")
  (when "last")
)

(define-signal delete-from-cursor
  (of-object "GtkEntry")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkDeleteType" "type")
    '("gint" "count")
  )
)

(define-signal icon-press
  (of-object "GtkEntry")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkEntryIconPosition" "icon_pos")
    '("GdkEventButton*" "event")
  )
)

(define-signal icon-release
  (of-object "GtkEntry")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkEntryIconPosition" "icon_pos")
    '("GdkEventButton*" "event")
  )
)

(define-signal insert-at-cursor
  (of-object "GtkEntry")
  (return-type "void")
  (when "last")
  (parameters
    '("const-gchar*" "string")
  )
)

(define-signal move-cursor
  (of-object "GtkEntry")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkMovementStep" "step")
    '("gint" "count")
    '("gboolean" "extend_selection")
  )
)

(define-signal paste-clipboard
  (of-object "GtkEntry")
  (return-type "void")
  (when "last")
)

(define-signal populate-popup
  (of-object "GtkEntry")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkWidget*" "popup")
  )
)

(define-signal preedit-changed
  (of-object "GtkEntry")
  (return-type "void")
  (when "last")
  (parameters
    '("const-gchar*" "preedit")
  )
)

(define-signal toggle-overwrite
  (of-object "GtkEntry")
  (return-type "void")
  (when "last")
)

(define-signal deleted-text
  (of-object "GtkEntryBuffer")
  (return-type "void")
  (when "first")
  (parameters
    '("guint" "position")
    '("guint" "n_chars")
  )
)

(define-signal inserted-text
  (of-object "GtkEntryBuffer")
  (return-type "void")
  (when "first")
  (parameters
    '("guint" "position")
    '("const-gchar*" "chars")
    '("guint" "n_chars")
  )
)

(define-signal action-activated
  (of-object "GtkEntryCompletion")
  (return-type "void")
  (when "last")
  (parameters
    '("gint" "index")
  )
)

(define-signal cursor-on-match
  (of-object "GtkEntryCompletion")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GtkTreeModel*" "model")
    '("GtkTreeIter*" "iter")
  )
)

(define-signal insert-prefix
  (of-object "GtkEntryCompletion")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("const-gchar*" "prefix")
  )
)

(define-signal match-selected
  (of-object "GtkEntryCompletion")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GtkTreeModel*" "model")
    '("GtkTreeIter*" "iter")
  )
)

(define-signal no-matches
  (of-object "GtkEntryCompletion")
  (return-type "void")
  (when "last")
)

(define-signal activate
  (of-object "GtkExpander")
  (return-type "void")
  (when "last")
)

(define-signal file-set
  (of-object "GtkFileChooserButton")
  (return-type "void")
  (when "first")
)

(define-signal desktop-folder
  (of-object "GtkFileChooserWidget")
  (return-type "void")
  (when "first")
)

(define-signal down-folder
  (of-object "GtkFileChooserWidget")
  (return-type "void")
  (when "first")
)

(define-signal home-folder
  (of-object "GtkFileChooserWidget")
  (return-type "void")
  (when "first")
)

(define-signal location-popup
  (of-object "GtkFileChooserWidget")
  (return-type "void")
  (when "first")
  (parameters
    '("const-gchar*" "path")
  )
)

(define-signal location-popup-on-paste
  (of-object "GtkFileChooserWidget")
  (return-type "void")
  (when "first")
)

(define-signal location-toggle-popup
  (of-object "GtkFileChooserWidget")
  (return-type "void")
  (when "first")
)

(define-signal places-shortcut
  (of-object "GtkFileChooserWidget")
  (return-type "void")
  (when "first")
)

(define-signal quick-bookmark
  (of-object "GtkFileChooserWidget")
  (return-type "void")
  (when "first")
  (parameters
    '("gint" "bookmark_index")
  )
)

(define-signal recent-shortcut
  (of-object "GtkFileChooserWidget")
  (return-type "void")
  (when "first")
)

(define-signal search-shortcut
  (of-object "GtkFileChooserWidget")
  (return-type "void")
  (when "first")
)

(define-signal show-hidden
  (of-object "GtkFileChooserWidget")
  (return-type "void")
  (when "first")
)

(define-signal up-folder
  (of-object "GtkFileChooserWidget")
  (return-type "void")
  (when "first")
)

(define-signal activate-cursor-child
  (of-object "GtkFlowBox")
  (return-type "void")
  (when "last")
)

(define-signal child-activated
  (of-object "GtkFlowBox")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkFlowBoxChild*" "child")
  )
)

(define-signal move-cursor
  (of-object "GtkFlowBox")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GtkMovementStep" "step")
    '("gint" "count")
  )
)

(define-signal select-all
  (of-object "GtkFlowBox")
  (return-type "void")
  (when "last")
)

(define-signal selected-children-changed
  (of-object "GtkFlowBox")
  (return-type "void")
  (when "first")
)

(define-signal toggle-cursor-child
  (of-object "GtkFlowBox")
  (return-type "void")
  (when "last")
)

(define-signal unselect-all
  (of-object "GtkFlowBox")
  (return-type "void")
  (when "last")
)

(define-signal activate
  (of-object "GtkFlowBoxChild")
  (return-type "void")
  (when "first")
)

(define-signal font-set
  (of-object "GtkFontButton")
  (return-type "void")
  (when "first")
)

(define-signal create-context
  (of-object "GtkGLArea")
  (return-type "GdkGLContext*")
  (when "last")
)

(define-signal render
  (of-object "GtkGLArea")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GdkGLContext*" "context")
  )
)

(define-signal resize
  (of-object "GtkGLArea")
  (return-type "void")
  (when "last")
  (parameters
    '("gint" "width")
    '("gint" "height")
  )
)

(define-signal begin
  (of-object "GtkGesture")
  (return-type "void")
  (when "last")
  (parameters
    '("GdkEventSequence*" "sequence")
  )
)

(define-signal cancel
  (of-object "GtkGesture")
  (return-type "void")
  (when "last")
  (parameters
    '("GdkEventSequence*" "sequence")
  )
)

(define-signal end
  (of-object "GtkGesture")
  (return-type "void")
  (when "last")
  (parameters
    '("GdkEventSequence*" "sequence")
  )
)

(define-signal sequence-state-changed
  (of-object "GtkGesture")
  (return-type "void")
  (when "last")
  (parameters
    '("GdkEventSequence*" "sequence")
    '("GtkEventSequenceState" "state")
  )
)

(define-signal update
  (of-object "GtkGesture")
  (return-type "void")
  (when "last")
  (parameters
    '("GdkEventSequence*" "sequence")
  )
)

(define-signal drag-begin
  (of-object "GtkGestureDrag")
  (return-type "void")
  (when "last")
  (parameters
    '("gdouble" "start_x")
    '("gdouble" "start_y")
  )
)

(define-signal drag-end
  (of-object "GtkGestureDrag")
  (return-type "void")
  (when "last")
  (parameters
    '("gdouble" "offset_x")
    '("gdouble" "offset_y")
  )
)

(define-signal drag-update
  (of-object "GtkGestureDrag")
  (return-type "void")
  (when "last")
  (parameters
    '("gdouble" "offset_x")
    '("gdouble" "offset_y")
  )
)

(define-signal cancelled
  (of-object "GtkGestureLongPress")
  (return-type "void")
  (when "last")
)

(define-signal pressed
  (of-object "GtkGestureLongPress")
  (return-type "void")
  (when "last")
  (parameters
    '("gdouble" "x")
    '("gdouble" "y")
  )
)

(define-signal pressed
  (of-object "GtkGestureMultiPress")
  (return-type "void")
  (when "last")
  (parameters
    '("gint" "n_press")
    '("gdouble" "x")
    '("gdouble" "y")
  )
)

(define-signal released
  (of-object "GtkGestureMultiPress")
  (return-type "void")
  (when "last")
  (parameters
    '("gint" "n_press")
    '("gdouble" "x")
    '("gdouble" "y")
  )
)

(define-signal stopped
  (of-object "GtkGestureMultiPress")
  (return-type "void")
  (when "last")
)

(define-signal pan
  (of-object "GtkGesturePan")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkPanDirection" "direction")
    '("gdouble" "offset")
  )
)

(define-signal angle-changed
  (of-object "GtkGestureRotate")
  (return-type "void")
  (when "first")
  (parameters
    '("gdouble" "angle")
    '("gdouble" "angle_delta")
  )
)

(define-signal swipe
  (of-object "GtkGestureSwipe")
  (return-type "void")
  (when "last")
  (parameters
    '("gdouble" "velocity_x")
    '("gdouble" "velocity_y")
  )
)

(define-signal scale-changed
  (of-object "GtkGestureZoom")
  (return-type "void")
  (when "first")
  (parameters
    '("gdouble" "scale")
  )
)

(define-signal changed
  (of-object "GtkHSV")
  (return-type "void")
  (when "first")
)

(define-signal move
  (of-object "GtkHSV")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkDirectionType" "object")
  )
)

(define-signal child-attached
  (of-object "GtkHandleBox")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-signal child-detached
  (of-object "GtkHandleBox")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-signal commit
  (of-object "GtkIMContext")
  (return-type "void")
  (when "last")
  (parameters
    '("const-gchar*" "str")
  )
)

(define-signal delete-surrounding
  (of-object "GtkIMContext")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("gint" "offset")
    '("gint" "n_chars")
  )
)

(define-signal preedit-changed
  (of-object "GtkIMContext")
  (return-type "void")
  (when "last")
)

(define-signal preedit-end
  (of-object "GtkIMContext")
  (return-type "void")
  (when "last")
)

(define-signal preedit-start
  (of-object "GtkIMContext")
  (return-type "void")
  (when "last")
)

(define-signal retrieve-surrounding
  (of-object "GtkIMContext")
  (return-type "gboolean")
  (when "last")
)

(define-signal changed
  (of-object "GtkIconTheme")
  (return-type "void")
  (when "last")
)

(define-signal activate-cursor-item
  (of-object "GtkIconView")
  (return-type "gboolean")
  (when "last")
)

(define-signal item-activated
  (of-object "GtkIconView")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkTreePath*" "path")
  )
)

(define-signal move-cursor
  (of-object "GtkIconView")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GtkMovementStep" "step")
    '("gint" "count")
  )
)

(define-signal select-all
  (of-object "GtkIconView")
  (return-type "void")
  (when "last")
)

(define-signal select-cursor-item
  (of-object "GtkIconView")
  (return-type "void")
  (when "last")
)

(define-signal selection-changed
  (of-object "GtkIconView")
  (return-type "void")
  (when "first")
)

(define-signal toggle-cursor-item
  (of-object "GtkIconView")
  (return-type "void")
  (when "last")
)

(define-signal unselect-all
  (of-object "GtkIconView")
  (return-type "void")
  (when "last")
)

(define-signal close
  (of-object "GtkInfoBar")
  (return-type "void")
  (when "last")
)

(define-signal response
  (of-object "GtkInfoBar")
  (return-type "void")
  (when "last")
  (parameters
    '("gint" "response_id")
  )
)

(define-signal activate-current-link
  (of-object "GtkLabel")
  (return-type "void")
  (when "last")
)

(define-signal activate-link
  (of-object "GtkLabel")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("const-gchar*" "uri")
  )
)

(define-signal copy-clipboard
  (of-object "GtkLabel")
  (return-type "void")
  (when "last")
)

(define-signal move-cursor
  (of-object "GtkLabel")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkMovementStep" "step")
    '("gint" "count")
    '("gboolean" "extend_selection")
  )
)

(define-signal populate-popup
  (of-object "GtkLabel")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkMenu*" "menu")
  )
)

(define-signal offset-changed
  (of-object "GtkLevelBar")
  (return-type "void")
  (when "first")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-signal activate-link
  (of-object "GtkLinkButton")
  (return-type "gboolean")
  (when "last")
)

(define-signal activate-cursor-row
  (of-object "GtkListBox")
  (return-type "void")
  (when "last")
)

(define-signal move-cursor
  (of-object "GtkListBox")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkMovementStep" "object")
    '("gint" "p0")
  )
)

(define-signal row-activated
  (of-object "GtkListBox")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkListBoxRow*" "row")
  )
)

(define-signal row-selected
  (of-object "GtkListBox")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkListBoxRow*" "row")
  )
)

(define-signal select-all
  (of-object "GtkListBox")
  (return-type "void")
  (when "last")
)

(define-signal selected-rows-changed
  (of-object "GtkListBox")
  (return-type "void")
  (when "first")
)

(define-signal toggle-cursor-row
  (of-object "GtkListBox")
  (return-type "void")
  (when "last")
)

(define-signal unselect-all
  (of-object "GtkListBox")
  (return-type "void")
  (when "last")
)

(define-signal activate
  (of-object "GtkListBoxRow")
  (return-type "void")
  (when "first")
)

(define-signal move-scroll
  (of-object "GtkMenu")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkScrollType" "scroll_type")
  )
)

(define-signal popped-up
  (of-object "GtkMenu")
  (return-type "void")
  (when "first")
  (parameters
    '("gpointer" "flipped_rect")
    '("gpointer" "final_rect")
    '("gboolean" "flipped_x")
    '("gboolean" "flipped_y")
  )
)

(define-signal activate
  (of-object "GtkMenuItem")
  (return-type "void")
  (when "first")
)

(define-signal activate-item
  (of-object "GtkMenuItem")
  (return-type "void")
  (when "first")
)

(define-signal deselect
  (of-object "GtkMenuItem")
  (return-type "void")
  (when "first")
)

(define-signal select
  (of-object "GtkMenuItem")
  (return-type "void")
  (when "first")
)

(define-signal toggle-size-allocate
  (of-object "GtkMenuItem")
  (return-type "void")
  (when "first")
  (parameters
    '("gint" "object")
  )
)

(define-signal toggle-size-request
  (of-object "GtkMenuItem")
  (return-type "void")
  (when "first")
  (parameters
    '("gpointer" "object")
  )
)

(define-signal activate-current
  (of-object "GtkMenuShell")
  (return-type "void")
  (when "last")
  (parameters
    '("gboolean" "force_hide")
  )
)

(define-signal cancel
  (of-object "GtkMenuShell")
  (return-type "void")
  (when "last")
)

(define-signal cycle-focus
  (of-object "GtkMenuShell")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkDirectionType" "direction")
  )
)

(define-signal deactivate
  (of-object "GtkMenuShell")
  (return-type "void")
  (when "first")
)

(define-signal insert
  (of-object "GtkMenuShell")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkWidget*" "child")
    '("gint" "position")
  )
)

(define-signal move-current
  (of-object "GtkMenuShell")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkMenuDirectionType" "direction")
  )
)

(define-signal move-selected
  (of-object "GtkMenuShell")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("gint" "distance")
  )
)

(define-signal selection-done
  (of-object "GtkMenuShell")
  (return-type "void")
  (when "first")
)

(define-signal show-menu
  (of-object "GtkMenuToolButton")
  (return-type "void")
  (when "first")
)

(define-signal response
  (of-object "GtkNativeDialog")
  (return-type "void")
  (when "last")
  (parameters
    '("gint" "response_id")
  )
)

(define-signal change-current-page
  (of-object "GtkNotebook")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("gint" "object")
  )
)

(define-signal create-window
  (of-object "GtkNotebook")
  (return-type "GtkNotebook*")
  (when "last")
  (parameters
    '("GtkWidget*" "page")
    '("gint" "x")
    '("gint" "y")
  )
)

(define-signal focus-tab
  (of-object "GtkNotebook")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GtkNotebookTab" "object")
  )
)

(define-signal move-focus-out
  (of-object "GtkNotebook")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkDirectionType" "object")
  )
)

(define-signal page-added
  (of-object "GtkNotebook")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkWidget*" "child")
    '("guint" "page_num")
  )
)

(define-signal page-removed
  (of-object "GtkNotebook")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkWidget*" "child")
    '("guint" "page_num")
  )
)

(define-signal page-reordered
  (of-object "GtkNotebook")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkWidget*" "child")
    '("guint" "page_num")
  )
)

(define-signal reorder-tab
  (of-object "GtkNotebook")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GtkDirectionType" "object")
    '("gboolean" "p0")
  )
)

(define-signal select-page
  (of-object "GtkNotebook")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("gboolean" "object")
  )
)

(define-signal switch-page
  (of-object "GtkNotebook")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkWidget*" "page")
    '("guint" "page_num")
  )
)

(define-signal get-child-position
  (of-object "GtkOverlay")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GtkWidget*" "widget")
    '("GdkRectangle*" "allocation")
  )
)

(define-signal accept-position
  (of-object "GtkPaned")
  (return-type "gboolean")
  (when "last")
)

(define-signal cancel-position
  (of-object "GtkPaned")
  (return-type "gboolean")
  (when "last")
)

(define-signal cycle-child-focus
  (of-object "GtkPaned")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("gboolean" "reversed")
  )
)

(define-signal cycle-handle-focus
  (of-object "GtkPaned")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("gboolean" "reversed")
  )
)

(define-signal move-handle
  (of-object "GtkPaned")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GtkScrollType" "scroll_type")
  )
)

(define-signal toggle-handle-focus
  (of-object "GtkPaned")
  (return-type "gboolean")
  (when "last")
)

(define-signal drag-action-ask
  (of-object "GtkPlacesSidebar")
  (return-type "gint")
  (when "last")
  (parameters
    '("gint" "actions")
  )
)

(define-signal drag-action-requested
  (of-object "GtkPlacesSidebar")
  (return-type "gint")
  (when "last")
  (parameters
    '("GdkDragContext*" "context")
    '("GFile*" "dest_file")
    '("GList*" "source_file_list")
  )
)

(define-signal drag-perform-drop
  (of-object "GtkPlacesSidebar")
  (return-type "void")
  (when "first")
  (parameters
    '("GFile*" "dest_file")
    '("GList*" "source_file_list")
    '("gint" "action")
  )
)

(define-signal mount
  (of-object "GtkPlacesSidebar")
  (return-type "void")
  (when "first")
  (parameters
    '("GMountOperation*" "mount_operation")
  )
)

(define-signal open-location
  (of-object "GtkPlacesSidebar")
  (return-type "void")
  (when "first")
  (parameters
    '("GFile*" "location")
    '("GtkPlacesOpenFlags" "open_flags")
  )
)

(define-signal populate-popup
  (of-object "GtkPlacesSidebar")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkWidget*" "container")
    '("GFile*" "selected_item")
    '("GVolume*" "selected_volume")
  )
)

(define-signal show-connect-to-server
  (of-object "GtkPlacesSidebar")
  (return-type "void")
  (when "first")
)

(define-signal show-enter-location
  (of-object "GtkPlacesSidebar")
  (return-type "void")
  (when "first")
)

(define-signal show-error-message
  (of-object "GtkPlacesSidebar")
  (return-type "void")
  (when "first")
  (parameters
    '("const-gchar*" "primary")
    '("const-gchar*" "secondary")
  )
)

(define-signal show-other-locations
  (of-object "GtkPlacesSidebar")
  (return-type "void")
  (when "first")
)

(define-signal show-other-locations-with-flags
  (of-object "GtkPlacesSidebar")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkPlacesOpenFlags" "open_flags")
  )
)

(define-signal unmount
  (of-object "GtkPlacesSidebar")
  (return-type "void")
  (when "first")
  (parameters
    '("GMountOperation*" "mount_operation")
  )
)

(define-signal embedded
  (of-object "GtkPlug")
  (return-type "void")
  (when "last")
)

(define-signal closed
  (of-object "GtkPopover")
  (return-type "void")
  (when "last")
)

(define-signal status-changed
  (of-object "GtkPrintJob")
  (return-type "void")
  (when "last")
)

(define-signal begin-print
  (of-object "GtkPrintOperation")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkPrintContext*" "context")
  )
)

(define-signal create-custom-widget
  (of-object "GtkPrintOperation")
  (return-type "GObject*")
  (when "last")
)

(define-signal custom-widget-apply
  (of-object "GtkPrintOperation")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-signal done
  (of-object "GtkPrintOperation")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkPrintOperationResult" "result")
  )
)

(define-signal draw-page
  (of-object "GtkPrintOperation")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkPrintContext*" "context")
    '("gint" "page_nr")
  )
)

(define-signal end-print
  (of-object "GtkPrintOperation")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkPrintContext*" "context")
  )
)

(define-signal paginate
  (of-object "GtkPrintOperation")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GtkPrintContext*" "context")
  )
)

(define-signal preview
  (of-object "GtkPrintOperation")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GtkPrintOperationPreview*" "preview")
    '("GtkPrintContext*" "context")
    '("GtkWindow*" "parent")
  )
)

(define-signal request-page-setup
  (of-object "GtkPrintOperation")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkPrintContext*" "context")
    '("gint" "page_nr")
    '("GtkPageSetup*" "setup")
  )
)

(define-signal status-changed
  (of-object "GtkPrintOperation")
  (return-type "void")
  (when "last")
)

(define-signal update-custom-widget
  (of-object "GtkPrintOperation")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkWidget*" "widget")
    '("GtkPageSetup*" "setup")
    '("GtkPrintSettings*" "settings")
  )
)

(define-signal details-acquired
  (of-object "GtkPrinter")
  (return-type "void")
  (when "last")
  (parameters
    '("gboolean" "success")
  )
)

(define-signal changed
  (of-object "GtkRadioAction")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkRadioAction*" "current")
  )
)

(define-signal group-changed
  (of-object "GtkRadioButton")
  (return-type "void")
  (when "first")
)

(define-signal group-changed
  (of-object "GtkRadioMenuItem")
  (return-type "void")
  (when "first")
)

(define-signal adjust-bounds
  (of-object "GtkRange")
  (return-type "void")
  (when "last")
  (parameters
    '("gdouble" "value")
  )
)

(define-signal change-value
  (of-object "GtkRange")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GtkScrollType" "scroll")
    '("gdouble" "value")
  )
)

(define-signal move-slider
  (of-object "GtkRange")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkScrollType" "step")
  )
)

(define-signal value-changed
  (of-object "GtkRange")
  (return-type "void")
  (when "last")
)

(define-signal changed
  (of-object "GtkRecentManager")
  (return-type "void")
  (when "first")
)

(define-signal format-value
  (of-object "GtkScale")
  (return-type "gchar*")
  (when "last")
  (parameters
    '("gdouble" "value")
  )
)

(define-signal popdown
  (of-object "GtkScaleButton")
  (return-type "void")
  (when "last")
)

(define-signal popup
  (of-object "GtkScaleButton")
  (return-type "void")
  (when "last")
)

(define-signal value-changed
  (of-object "GtkScaleButton")
  (return-type "void")
  (when "last")
  (parameters
    '("gdouble" "value")
  )
)

(define-signal edge-overshot
  (of-object "GtkScrolledWindow")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkPositionType" "pos")
  )
)

(define-signal edge-reached
  (of-object "GtkScrolledWindow")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkPositionType" "pos")
  )
)

(define-signal move-focus-out
  (of-object "GtkScrolledWindow")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkDirectionType" "direction_type")
  )
)

(define-signal scroll-child
  (of-object "GtkScrolledWindow")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GtkScrollType" "scroll")
    '("gboolean" "horizontal")
  )
)

(define-signal next-match
  (of-object "GtkSearchEntry")
  (return-type "void")
  (when "last")
)

(define-signal previous-match
  (of-object "GtkSearchEntry")
  (return-type "void")
  (when "last")
)

(define-signal search-changed
  (of-object "GtkSearchEntry")
  (return-type "void")
  (when "last")
)

(define-signal stop-search
  (of-object "GtkSearchEntry")
  (return-type "void")
  (when "last")
)

(define-signal change-current-page
  (of-object "GtkShortcutsSection")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("gint" "object")
  )
)

(define-signal close
  (of-object "GtkShortcutsWindow")
  (return-type "void")
  (when "last")
)

(define-signal search
  (of-object "GtkShortcutsWindow")
  (return-type "void")
  (when "last")
)

(define-signal plug-added
  (of-object "GtkSocket")
  (return-type "void")
  (when "last")
)

(define-signal plug-removed
  (of-object "GtkSocket")
  (return-type "gboolean")
  (when "last")
)

(define-signal change-value
  (of-object "GtkSpinButton")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkScrollType" "scroll")
  )
)

(define-signal input
  (of-object "GtkSpinButton")
  (return-type "gint")
  (when "last")
  (parameters
    '("gdouble*" "new_value")
  )
)

(define-signal output
  (of-object "GtkSpinButton")
  (return-type "gboolean")
  (when "last")
)

(define-signal value-changed
  (of-object "GtkSpinButton")
  (return-type "void")
  (when "last")
)

(define-signal wrapped
  (of-object "GtkSpinButton")
  (return-type "void")
  (when "last")
)

(define-signal activate
  (of-object "GtkStatusIcon")
  (return-type "void")
  (when "first")
)

(define-signal button-press-event
  (of-object "GtkStatusIcon")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GdkEventButton*" "event")
  )
)

(define-signal button-release-event
  (of-object "GtkStatusIcon")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GdkEventButton*" "event")
  )
)

(define-signal popup-menu
  (of-object "GtkStatusIcon")
  (return-type "void")
  (when "first")
  (parameters
    '("guint" "button")
    '("guint" "activate_time")
  )
)

(define-signal query-tooltip
  (of-object "GtkStatusIcon")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("gint" "x")
    '("gint" "y")
    '("gboolean" "keyboard_mode")
    '("GtkTooltip*" "tooltip")
  )
)

(define-signal scroll-event
  (of-object "GtkStatusIcon")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GdkEventScroll*" "event")
  )
)

(define-signal size-changed
  (of-object "GtkStatusIcon")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("gint" "size")
  )
)

(define-signal text-popped
  (of-object "GtkStatusbar")
  (return-type "void")
  (when "last")
  (parameters
    '("guint" "context_id")
    '("const-gchar*" "text")
  )
)

(define-signal text-pushed
  (of-object "GtkStatusbar")
  (return-type "void")
  (when "last")
  (parameters
    '("guint" "context_id")
    '("const-gchar*" "text")
  )
)

(define-signal realize
  (of-object "GtkStyle")
  (return-type "void")
  (when "first")
)

(define-signal unrealize
  (of-object "GtkStyle")
  (return-type "void")
  (when "first")
)

(define-signal changed
  (of-object "GtkStyleContext")
  (return-type "void")
  (when "first")
)

(define-signal activate
  (of-object "GtkSwitch")
  (return-type "void")
  (when "first")
)

(define-signal state-set
  (of-object "GtkSwitch")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("gboolean" "state")
  )
)

(define-signal apply-tag
  (of-object "GtkTextBuffer")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkTextTag*" "tag")
    '("GtkTextIter*" "start")
    '("GtkTextIter*" "end")
  )
)

(define-signal begin-user-action
  (of-object "GtkTextBuffer")
  (return-type "void")
  (when "last")
)

(define-signal changed
  (of-object "GtkTextBuffer")
  (return-type "void")
  (when "last")
)

(define-signal delete-range
  (of-object "GtkTextBuffer")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkTextIter*" "start")
    '("GtkTextIter*" "end")
  )
)

(define-signal end-user-action
  (of-object "GtkTextBuffer")
  (return-type "void")
  (when "last")
)

(define-signal insert-child-anchor
  (of-object "GtkTextBuffer")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkTextIter*" "location")
    '("GtkTextChildAnchor*" "anchor")
  )
)

(define-signal insert-pixbuf
  (of-object "GtkTextBuffer")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkTextIter*" "location")
    '("GdkPixbuf*" "pixbuf")
  )
)

(define-signal insert-text
  (of-object "GtkTextBuffer")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkTextIter*" "location")
    '("const-gchar*" "text")
    '("gint" "len")
  )
)

(define-signal mark-deleted
  (of-object "GtkTextBuffer")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkTextMark*" "mark")
  )
)

(define-signal mark-set
  (of-object "GtkTextBuffer")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkTextIter*" "location")
    '("GtkTextMark*" "mark")
  )
)

(define-signal modified-changed
  (of-object "GtkTextBuffer")
  (return-type "void")
  (when "last")
)

(define-signal paste-done
  (of-object "GtkTextBuffer")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkClipboard*" "clipboard")
  )
)

(define-signal remove-tag
  (of-object "GtkTextBuffer")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkTextTag*" "tag")
    '("GtkTextIter*" "start")
    '("GtkTextIter*" "end")
  )
)

(define-signal event
  (of-object "GtkTextTag")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GObject*" "object")
    '("GdkEvent*" "event")
    '("GtkTextIter*" "iter")
  )
)

(define-signal tag-added
  (of-object "GtkTextTagTable")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkTextTag*" "tag")
  )
)

(define-signal tag-changed
  (of-object "GtkTextTagTable")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkTextTag*" "tag")
    '("gboolean" "size_changed")
  )
)

(define-signal tag-removed
  (of-object "GtkTextTagTable")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkTextTag*" "tag")
  )
)

(define-signal backspace
  (of-object "GtkTextView")
  (return-type "void")
  (when "last")
)

(define-signal copy-clipboard
  (of-object "GtkTextView")
  (return-type "void")
  (when "last")
)

(define-signal cut-clipboard
  (of-object "GtkTextView")
  (return-type "void")
  (when "last")
)

(define-signal delete-from-cursor
  (of-object "GtkTextView")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkDeleteType" "type")
    '("gint" "count")
  )
)

(define-signal extend-selection
  (of-object "GtkTextView")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GtkTextExtendSelection" "granularity")
    '("GtkTextIter*" "location")
    '("GtkTextIter*" "start")
    '("GtkTextIter*" "end")
  )
)

(define-signal insert-at-cursor
  (of-object "GtkTextView")
  (return-type "void")
  (when "last")
  (parameters
    '("const-gchar*" "string")
  )
)

(define-signal move-cursor
  (of-object "GtkTextView")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkMovementStep" "step")
    '("gint" "count")
    '("gboolean" "extend_selection")
  )
)

(define-signal move-viewport
  (of-object "GtkTextView")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkScrollStep" "step")
    '("gint" "count")
  )
)

(define-signal paste-clipboard
  (of-object "GtkTextView")
  (return-type "void")
  (when "last")
)

(define-signal populate-popup
  (of-object "GtkTextView")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkWidget*" "popup")
  )
)

(define-signal preedit-changed
  (of-object "GtkTextView")
  (return-type "void")
  (when "last")
  (parameters
    '("const-gchar*" "preedit")
  )
)

(define-signal select-all
  (of-object "GtkTextView")
  (return-type "void")
  (when "last")
  (parameters
    '("gboolean" "select")
  )
)

(define-signal set-anchor
  (of-object "GtkTextView")
  (return-type "void")
  (when "last")
)

(define-signal toggle-cursor-visible
  (of-object "GtkTextView")
  (return-type "void")
  (when "last")
)

(define-signal toggle-overwrite
  (of-object "GtkTextView")
  (return-type "void")
  (when "last")
)

(define-signal toggled
  (of-object "GtkToggleAction")
  (return-type "void")
  (when "first")
)

(define-signal toggled
  (of-object "GtkToggleButton")
  (return-type "void")
  (when "first")
)

(define-signal toggled
  (of-object "GtkToggleToolButton")
  (return-type "void")
  (when "first")
)

(define-signal clicked
  (of-object "GtkToolButton")
  (return-type "void")
  (when "first")
)

(define-signal create-menu-proxy
  (of-object "GtkToolItem")
  (return-type "gboolean")
  (when "last")
)

(define-signal toolbar-reconfigured
  (of-object "GtkToolItem")
  (return-type "void")
  (when "last")
)

(define-signal focus-home-or-end
  (of-object "GtkToolbar")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("gboolean" "focus_home")
  )
)

(define-signal orientation-changed
  (of-object "GtkToolbar")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkOrientation" "orientation")
  )
)

(define-signal popup-context-menu
  (of-object "GtkToolbar")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("gint" "x")
    '("gint" "y")
    '("gint" "button")
  )
)

(define-signal style-changed
  (of-object "GtkToolbar")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkToolbarStyle" "style")
  )
)

(define-signal changed
  (of-object "GtkTreeSelection")
  (return-type "void")
  (when "first")
)

(define-signal columns-changed
  (of-object "GtkTreeView")
  (return-type "void")
  (when "last")
)

(define-signal cursor-changed
  (of-object "GtkTreeView")
  (return-type "void")
  (when "last")
)

(define-signal expand-collapse-cursor-row
  (of-object "GtkTreeView")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("gboolean" "object")
    '("gboolean" "p0")
    '("gboolean" "p1")
  )
)

(define-signal move-cursor
  (of-object "GtkTreeView")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GtkMovementStep" "step")
    '("gint" "direction")
  )
)

(define-signal row-activated
  (of-object "GtkTreeView")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkTreePath*" "path")
    '("GtkTreeViewColumn*" "column")
  )
)

(define-signal row-collapsed
  (of-object "GtkTreeView")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreePath*" "path")
  )
)

(define-signal row-expanded
  (of-object "GtkTreeView")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreePath*" "path")
  )
)

(define-signal select-all
  (of-object "GtkTreeView")
  (return-type "gboolean")
  (when "last")
)

(define-signal select-cursor-parent
  (of-object "GtkTreeView")
  (return-type "gboolean")
  (when "last")
)

(define-signal select-cursor-row
  (of-object "GtkTreeView")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("gboolean" "object")
  )
)

(define-signal start-interactive-search
  (of-object "GtkTreeView")
  (return-type "gboolean")
  (when "last")
)

(define-signal test-collapse-row
  (of-object "GtkTreeView")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreePath*" "path")
  )
)

(define-signal test-expand-row
  (of-object "GtkTreeView")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GtkTreeIter*" "iter")
    '("GtkTreePath*" "path")
  )
)

(define-signal toggle-cursor-row
  (of-object "GtkTreeView")
  (return-type "gboolean")
  (when "last")
)

(define-signal unselect-all
  (of-object "GtkTreeView")
  (return-type "gboolean")
  (when "last")
)

(define-signal clicked
  (of-object "GtkTreeViewColumn")
  (return-type "void")
  (when "last")
)

(define-signal actions-changed
  (of-object "GtkUIManager")
  (return-type "void")
  (when "first")
)

(define-signal add-widget
  (of-object "GtkUIManager")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkWidget*" "widget")
  )
)

(define-signal connect-proxy
  (of-object "GtkUIManager")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkAction*" "action")
    '("GtkWidget*" "proxy")
  )
)

(define-signal disconnect-proxy
  (of-object "GtkUIManager")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkAction*" "action")
    '("GtkWidget*" "proxy")
  )
)

(define-signal post-activate
  (of-object "GtkUIManager")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkAction*" "action")
  )
)

(define-signal pre-activate
  (of-object "GtkUIManager")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkAction*" "action")
  )
)

(define-signal accel-closures-changed
  (of-object "GtkWidget")
  (return-type "void")
  (when "first")
)

(define-signal button-press-event
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GdkEventButton*" "event")
  )
)

(define-signal button-release-event
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GdkEventButton*" "event")
  )
)

(define-signal can-activate-accel
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("guint" "signal_id")
  )
)

(define-signal child-notify
  (of-object "GtkWidget")
  (return-type "void")
  (when "first")
  (parameters
    '("GParamSpec*" "child_property")
  )
)

(define-signal composited-changed
  (of-object "GtkWidget")
  (return-type "void")
  (when "last")
)

(define-signal configure-event
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GdkEventConfigure*" "event")
  )
)

(define-signal damage-event
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GdkEventExpose*" "event")
  )
)

(define-signal delete-event
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GdkEvent*" "event")
  )
)

(define-signal destroy
  (of-object "GtkWidget")
  (return-type "void")
  (when "cleanup")
)

(define-signal destroy-event
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GdkEvent*" "event")
  )
)

(define-signal direction-changed
  (of-object "GtkWidget")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkTextDirection" "previous_direction")
  )
)

(define-signal drag-begin
  (of-object "GtkWidget")
  (return-type "void")
  (when "last")
  (parameters
    '("GdkDragContext*" "context")
  )
)

(define-signal drag-data-delete
  (of-object "GtkWidget")
  (return-type "void")
  (when "last")
  (parameters
    '("GdkDragContext*" "context")
  )
)

(define-signal drag-data-get
  (of-object "GtkWidget")
  (return-type "void")
  (when "last")
  (parameters
    '("GdkDragContext*" "context")
    '("GtkSelectionData*" "data1")
    '("guint" "info")
    '("guint" "time")
  )
)

(define-signal drag-data-received
  (of-object "GtkWidget")
  (return-type "void")
  (when "last")
  (parameters
    '("GdkDragContext*" "context")
    '("gint" "x")
    '("gint" "y")
    '("GtkSelectionData*" "data1")
    '("guint" "info")
    '("guint" "time")
  )
)

(define-signal drag-drop
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GdkDragContext*" "context")
    '("gint" "x")
    '("gint" "y")
    '("guint" "time")
  )
)

(define-signal drag-end
  (of-object "GtkWidget")
  (return-type "void")
  (when "last")
  (parameters
    '("GdkDragContext*" "context")
  )
)

(define-signal drag-failed
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GdkDragContext*" "context")
    '("GtkDragResult" "result")
  )
)

(define-signal drag-leave
  (of-object "GtkWidget")
  (return-type "void")
  (when "last")
  (parameters
    '("GdkDragContext*" "context")
    '("guint" "time")
  )
)

(define-signal drag-motion
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GdkDragContext*" "context")
    '("gint" "x")
    '("gint" "y")
    '("guint" "time")
  )
)

(define-signal draw
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("cairo_t*" "cr")
  )
)

(define-signal enter-notify-event
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GdkEventCrossing*" "event")
  )
)

(define-signal event
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GdkEvent*" "event")
  )
)

(define-signal event-after
  (of-object "GtkWidget")
  (return-type "void")
  (when "first")
  (parameters
    '("GdkEvent*" "event")
  )
)

(define-signal focus
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GtkDirectionType" "direction")
  )
)

(define-signal focus-in-event
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GdkEventFocus*" "event")
  )
)

(define-signal focus-out-event
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GdkEventFocus*" "event")
  )
)

(define-signal grab-broken-event
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GdkEventGrabBroken*" "event")
  )
)

(define-signal grab-focus
  (of-object "GtkWidget")
  (return-type "void")
  (when "last")
)

(define-signal grab-notify
  (of-object "GtkWidget")
  (return-type "void")
  (when "first")
  (parameters
    '("gboolean" "was_grabbed")
  )
)

(define-signal hide
  (of-object "GtkWidget")
  (return-type "void")
  (when "first")
)

(define-signal hierarchy-changed
  (of-object "GtkWidget")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkWidget*" "previous_toplevel")
  )
)

(define-signal key-press-event
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GdkEventKey*" "event")
  )
)

(define-signal key-release-event
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GdkEventKey*" "event")
  )
)

(define-signal keynav-failed
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GtkDirectionType" "direction")
  )
)

(define-signal leave-notify-event
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GdkEventCrossing*" "event")
  )
)

(define-signal map
  (of-object "GtkWidget")
  (return-type "void")
  (when "first")
)

(define-signal map-event
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GdkEventAny*" "event")
  )
)

(define-signal mnemonic-activate
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("gboolean" "arg1")
  )
)

(define-signal motion-notify-event
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GdkEventMotion*" "event")
  )
)

(define-signal move-focus
  (of-object "GtkWidget")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkDirectionType" "direction")
  )
)

(define-signal parent-set
  (of-object "GtkWidget")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkWidget*" "old_parent")
  )
)

(define-signal popup-menu
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
)

(define-signal property-notify-event
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GdkEventProperty*" "event")
  )
)

(define-signal proximity-in-event
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GdkEventProximity*" "event")
  )
)

(define-signal proximity-out-event
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GdkEventProximity*" "event")
  )
)

(define-signal query-tooltip
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("gint" "x")
    '("gint" "y")
    '("gboolean" "keyboard_mode")
    '("GtkTooltip*" "tooltip")
  )
)

(define-signal realize
  (of-object "GtkWidget")
  (return-type "void")
  (when "first")
)

(define-signal screen-changed
  (of-object "GtkWidget")
  (return-type "void")
  (when "last")
  (parameters
    '("GdkScreen*" "previous_screen")
  )
)

(define-signal scroll-event
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GdkEventScroll*" "event")
  )
)

(define-signal selection-clear-event
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GdkEventSelection*" "event")
  )
)

(define-signal selection-get
  (of-object "GtkWidget")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkSelectionData*" "data1")
    '("guint" "info")
    '("guint" "time")
  )
)

(define-signal selection-notify-event
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GdkEventSelection*" "event")
  )
)

(define-signal selection-received
  (of-object "GtkWidget")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkSelectionData*" "data1")
    '("guint" "time")
  )
)

(define-signal selection-request-event
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GdkEventSelection*" "event")
  )
)

(define-signal show
  (of-object "GtkWidget")
  (return-type "void")
  (when "first")
)

(define-signal show-help
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GtkWidgetHelpType" "help_type")
  )
)

(define-signal size-allocate
  (of-object "GtkWidget")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkAllocation" "allocation")
  )
)

(define-signal state-changed
  (of-object "GtkWidget")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkStateType" "state")
  )
)

(define-signal state-flags-changed
  (of-object "GtkWidget")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkStateFlags" "flags")
  )
)

(define-signal style-set
  (of-object "GtkWidget")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkStyle*" "previous_style")
  )
)

(define-signal style-updated
  (of-object "GtkWidget")
  (return-type "void")
  (when "first")
)

(define-signal touch-event
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GdkEvent*" "object")
  )
)

(define-signal unmap
  (of-object "GtkWidget")
  (return-type "void")
  (when "first")
)

(define-signal unmap-event
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GdkEventAny*" "event")
  )
)

(define-signal unrealize
  (of-object "GtkWidget")
  (return-type "void")
  (when "last")
)

(define-signal visibility-notify-event
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GdkEventVisibility*" "event")
  )
)

(define-signal window-state-event
  (of-object "GtkWidget")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GdkEventWindowState*" "event")
  )
)

(define-signal activate-default
  (of-object "GtkWindow")
  (return-type "void")
  (when "last")
)

(define-signal activate-focus
  (of-object "GtkWindow")
  (return-type "void")
  (when "last")
)

(define-signal enable-debugging
  (of-object "GtkWindow")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("gboolean" "toggle")
  )
)

(define-signal keys-changed
  (of-object "GtkWindow")
  (return-type "void")
  (when "first")
)

(define-signal set-focus
  (of-object "GtkWindow")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkWidget*" "object")
  )
)

(define-signal editing-done
  (of-object "GtkCellEditable")
  (return-type "void")
  (when "last")
)

(define-signal remove-widget
  (of-object "GtkCellEditable")
  (return-type "void")
  (when "last")
)

(define-signal color-activated
  (of-object "GtkColorChooser")
  (return-type "void")
  (when "first")
  (parameters
    '("GdkRGBA*" "color")
  )
)

(define-signal changed
  (of-object "GtkEditable")
  (return-type "void")
  (when "last")
)

(define-signal delete-text
  (of-object "GtkEditable")
  (return-type "void")
  (when "last")
  (parameters
    '("gint" "start_pos")
    '("gint" "end_pos")
  )
)

(define-signal insert-text
  (of-object "GtkEditable")
  (return-type "void")
  (when "last")
  (parameters
    '("const-gchar*" "new_text")
    '("gint" "new_text_length")
    '("gint*" "position")
  )
)

(define-signal confirm-overwrite
  (of-object "GtkFileChooser")
  (return-type "GtkFileChooserConfirmation")
  (when "last")
)

(define-signal current-folder-changed
  (of-object "GtkFileChooser")
  (return-type "void")
  (when "last")
)

(define-signal file-activated
  (of-object "GtkFileChooser")
  (return-type "void")
  (when "last")
)

(define-signal selection-changed
  (of-object "GtkFileChooser")
  (return-type "void")
  (when "last")
)

(define-signal update-preview
  (of-object "GtkFileChooser")
  (return-type "void")
  (when "last")
)

(define-signal font-activated
  (of-object "GtkFontChooser")
  (return-type "void")
  (when "first")
  (parameters
    '("const-gchar*" "fontname")
  )
)

(define-signal got-page-size
  (of-object "GtkPrintOperationPreview")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkPrintContext*" "context")
    '("GtkPageSetup*" "page_setup")
  )
)

(define-signal ready
  (of-object "GtkPrintOperationPreview")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkPrintContext*" "context")
  )
)

(define-signal item-activated
  (of-object "GtkRecentChooser")
  (return-type "void")
  (when "last")
)

(define-signal selection-changed
  (of-object "GtkRecentChooser")
  (return-type "void")
  (when "last")
)

(define-signal row-changed
  (of-object "GtkTreeModel")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkTreePath*" "path")
    '("GtkTreeIter*" "iter")
  )
)

(define-signal row-deleted
  (of-object "GtkTreeModel")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkTreePath*" "path")
  )
)

(define-signal row-has-child-toggled
  (of-object "GtkTreeModel")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkTreePath*" "path")
    '("GtkTreeIter*" "iter")
  )
)

(define-signal row-inserted
  (of-object "GtkTreeModel")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkTreePath*" "path")
    '("GtkTreeIter*" "iter")
  )
)

(define-signal rows-reordered
  (of-object "GtkTreeModel")
  (return-type "void")
  (when "first")
  (parameters
    '("GtkTreePath*" "path")
    '("GtkTreeIter*" "iter")
    '("gpointer" "new_order")
  )
)

(define-signal sort-column-changed
  (of-object "GtkTreeSortable")
  (return-type "void")
  (when "last")
)

(define-property artists
  (of-object "GtkAboutDialog")
  (docs "The people who contributed artwork to the program, as a %NULL-terminated array of strings. Each string may contain email addresses and URLs, which will be displayed as links, see the introduction for more details.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property authors
  (of-object "GtkAboutDialog")
  (docs "The authors of the program, as a %NULL-terminated array of strings. Each string may contain email addresses and URLs, which will be displayed as links, see the introduction for more details.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property comments
  (of-object "GtkAboutDialog")
  (docs "Comments about the program. This string is displayed in a label in the main dialog, thus it should be a short explanation of the main purpose of the program, not a detailed list of features.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property copyright
  (of-object "GtkAboutDialog")
  (docs "Copyright information for the program.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property documenters
  (of-object "GtkAboutDialog")
  (docs "The people documenting the program, as a %NULL-terminated array of strings. Each string may contain email addresses and URLs, which will be displayed as links, see the introduction for more details.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property license
  (of-object "GtkAboutDialog")
  (docs "The license of the program. This string is displayed in a text view in a secondary dialog, therefore it is fine to use a long multi-paragraph text. Note that the text is only wrapped in the text view if the 'wrap-license' property is set to %TRUE; otherwise the text itself must contain the intended linebreaks. When setting this property to a non-%NULL value, the #GtkAboutDialog:license-type property is set to %GTK_LICENSE_CUSTOM as a side effect.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property license-type
  (of-object "GtkAboutDialog")
  (docs "The license of the program, as a value of the %GtkLicense enumeration.  The #GtkAboutDialog will automatically fill out a standard disclaimer and link the user to the appropriate online resource for the license text.  If %GTK_LICENSE_UNKNOWN is used, the link used will be the same specified in the #GtkAboutDialog:website property.  If %GTK_LICENSE_CUSTOM is used, the current contents of the #GtkAboutDialog:license property are used.  For any other #GtkLicense value, the contents of the #GtkAboutDialog:license property are also set by this property as a side effect.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property logo
  (of-object "GtkAboutDialog")
  (docs "A logo for the about box. If it is %NULL, the default window icon set with gtk_window_set_default_icon() will be used.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property logo-icon-name
  (of-object "GtkAboutDialog")
  (docs "A named icon to use as the logo for the about box. This property overrides the #GtkAboutDialog:logo property.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property program-name
  (of-object "GtkAboutDialog")
  (docs "The name of the program. If this is not set, it defaults to g_get_application_name().")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property translator-credits
  (of-object "GtkAboutDialog")
  (docs "Credits to the translators. This string should be marked as translatable. The string may contain email addresses and URLs, which will be displayed as links, see the introduction for more details.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property version
  (of-object "GtkAboutDialog")
  (docs "The version of the program.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property website
  (of-object "GtkAboutDialog")
  (docs "The URL for the link to the website of the program. This should be a string starting with 'http://.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property website-label
  (of-object "GtkAboutDialog")
  (docs "The label for the link to the website of the program.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property wrap-license
  (of-object "GtkAboutDialog")
  (docs "Whether to wrap the text in the license dialog.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property is-locked
  (of-object "GtkAccelGroup")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property modifier-mask
  (of-object "GtkAccelGroup")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property accel-closure
  (of-object "GtkAccelLabel")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property accel-widget
  (of-object "GtkAccelLabel")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property widget
  (of-object "GtkAccessible")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property action-group
  (of-object "GtkAction")
  (docs "The GtkActionGroup this GtkAction is associated with, or NULL (for internal use).")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property always-show-image
  (of-object "GtkAction")
  (docs "If %TRUE, the action's menu item proxies will ignore the #GtkSettings:gtk-menu-images setting and always show their image, if available.  Use this property if the menu item would be useless or hard to use without their image.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gicon
  (of-object "GtkAction")
  (docs "The #GIcon displayed in the #GtkAction.  Note that the stock icon is preferred, if the #GtkAction:stock-id property holds the id of an existing stock icon.  This is an appearance property and thus only applies if #GtkActivatable:use-action-appearance is %TRUE.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property hide-if-empty
  (of-object "GtkAction")
  (docs "When TRUE, empty menu proxies for this action are hidden.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property icon-name
  (of-object "GtkAction")
  (docs "The name of the icon from the icon theme.  Note that the stock icon is preferred, if the #GtkAction:stock-id property holds the id of an existing stock icon, and the #GIcon is preferred if the #GtkAction:gicon property is set.  This is an appearance property and thus only applies if #GtkActivatable:use-action-appearance is %TRUE.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property is-important
  (of-object "GtkAction")
  (docs "Whether the action is considered important. When TRUE, toolitem proxies for this action show text in GTK_TOOLBAR_BOTH_HORIZ mode.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property label
  (of-object "GtkAction")
  (docs "The label used for menu items and buttons that activate this action. If the label is %NULL, GTK+ uses the stock label specified via the stock-id property.  This is an appearance property and thus only applies if #GtkActivatable:use-action-appearance is %TRUE.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property name
  (of-object "GtkAction")
  (docs "A unique name for the action.")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (deprecated #t)
)

(define-property sensitive
  (of-object "GtkAction")
  (docs "Whether the action is enabled.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property short-label
  (of-object "GtkAction")
  (docs "A shorter label that may be used on toolbar buttons.  This is an appearance property and thus only applies if #GtkActivatable:use-action-appearance is %TRUE.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property stock-id
  (of-object "GtkAction")
  (docs "The stock icon displayed in widgets representing this action.  This is an appearance property and thus only applies if #GtkActivatable:use-action-appearance is %TRUE.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property tooltip
  (of-object "GtkAction")
  (docs "A tooltip for this action.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property visible
  (of-object "GtkAction")
  (docs "Whether the action is visible.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property visible-horizontal
  (of-object "GtkAction")
  (docs "Whether the toolbar item is visible when the toolbar is in a horizontal orientation.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property visible-overflown
  (of-object "GtkAction")
  (docs "When %TRUE, toolitem proxies for this action are represented in the toolbar overflow menu.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property visible-vertical
  (of-object "GtkAction")
  (docs "Whether the toolbar item is visible when the toolbar is in a vertical orientation.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property accel-group
  (of-object "GtkActionGroup")
  (docs "The accelerator group the actions of this group should use.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property name
  (of-object "GtkActionGroup")
  (docs "A name for the action.")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (deprecated #t)
)

(define-property sensitive
  (of-object "GtkActionGroup")
  (docs "Whether the action group is enabled.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property visible
  (of-object "GtkActionGroup")
  (docs "Whether the action group is visible.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property lower
  (of-object "GtkAdjustment")
  (docs "The minimum value of the adjustment.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property page-increment
  (of-object "GtkAdjustment")
  (docs "The page increment of the adjustment.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property page-size
  (of-object "GtkAdjustment")
  (docs "The page size of the adjustment. Note that the page-size is irrelevant and should be set to zero if the adjustment is used for a simple scalar value, e.g. in a #GtkSpinButton.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property step-increment
  (of-object "GtkAdjustment")
  (docs "The step increment of the adjustment.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property upper
  (of-object "GtkAdjustment")
  (docs "The maximum value of the adjustment. Note that values will be restricted by `upper - page-size` if the page-size property is nonzero.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property value
  (of-object "GtkAdjustment")
  (docs "The value of the adjustment.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property bottom-padding
  (of-object "GtkAlignment")
  (docs "The padding to insert at the bottom of the widget.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property left-padding
  (of-object "GtkAlignment")
  (docs "The padding to insert at the left of the widget.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property right-padding
  (of-object "GtkAlignment")
  (docs "The padding to insert at the right of the widget.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property top-padding
  (of-object "GtkAlignment")
  (docs "The padding to insert at the top of the widget.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property xalign
  (of-object "GtkAlignment")
  (docs "Horizontal position of child in available space. A value of 0.0 will flush the child left (or right, in RTL locales); a value of 1.0 will flush the child right (or left, in RTL locales).")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property xscale
  (of-object "GtkAlignment")
  (docs "If available horizontal space is bigger than needed, how much of it to use for the child. A value of 0.0 means none; a value of 1.0 means all.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property yalign
  (of-object "GtkAlignment")
  (docs "Vertical position of child in available space. A value of 0.0 will flush the child to the top; a value of 1.0 will flush the child to the bottom.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property yscale
  (of-object "GtkAlignment")
  (docs "If available vertical space is bigger than needed, how much of it to use for the child. A value of 0.0 means none; a value of 1.0 means all.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property heading
  (of-object "GtkAppChooserButton")
  (docs "The text to show at the top of the dialog that can be opened from the button. The string may contain Pango markup.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-default-item
  (of-object "GtkAppChooserButton")
  (docs "The #GtkAppChooserButton:show-default-item property determines whether the dropdown menu should show the default application on top for the provided content type.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-dialog-item
  (of-object "GtkAppChooserButton")
  (docs "The #GtkAppChooserButton:show-dialog-item property determines whether the dropdown menu should show an item that triggers a #GtkAppChooserDialog when clicked.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gfile
  (of-object "GtkAppChooserDialog")
  (docs "The GFile used by the #GtkAppChooserDialog. The dialog's #GtkAppChooserWidget content type will be guessed from the file, if present.")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property heading
  (of-object "GtkAppChooserDialog")
  (docs "The text to show at the top of the dialog. The string may contain Pango markup.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property default-text
  (of-object "GtkAppChooserWidget")
  (docs "The #GtkAppChooserWidget:default-text property determines the text that appears in the widget when there are no applications for the given content type. See also gtk_app_chooser_widget_set_default_text().")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-all
  (of-object "GtkAppChooserWidget")
  (docs "If the #GtkAppChooserWidget:show-all property is %TRUE, the app chooser presents all applications in a single list, without subsections for default, recommended or related applications.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-default
  (of-object "GtkAppChooserWidget")
  (docs "The ::show-default property determines whether the app chooser should show the default handler for the content type in a separate section. If %FALSE, the default handler is listed among the recommended applications.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-fallback
  (of-object "GtkAppChooserWidget")
  (docs "The #GtkAppChooserWidget:show-fallback property determines whether the app chooser should show a section for fallback applications. If %FALSE, the fallback applications are listed among the other applications.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-other
  (of-object "GtkAppChooserWidget")
  (docs "The #GtkAppChooserWidget:show-other property determines whether the app chooser should show a section for other applications.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-recommended
  (of-object "GtkAppChooserWidget")
  (docs "The #GtkAppChooserWidget:show-recommended property determines whether the app chooser should show a section for recommended applications. If %FALSE, the recommended applications are listed among the other applications.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property active-window
  (of-object "GtkApplication")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property app-menu
  (of-object "GtkApplication")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property menubar
  (of-object "GtkApplication")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property register-session
  (of-object "GtkApplication")
  (docs "Set this property to %TRUE to register with the session manager.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-menubar
  (of-object "GtkApplicationWindow")
  (docs "If this property is %TRUE, the window will display a menubar that includes the app menu and menubar, unless these are shown by the desktop shell. See gtk_application_set_app_menu() and gtk_application_set_menubar().  If %FALSE, the window will not display a menubar, regardless of whether the desktop shell is showing the menus or not.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property arrow-type
  (of-object "GtkArrow")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property shadow-type
  (of-object "GtkArrow")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property obey-child
  (of-object "GtkAspectFrame")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property ratio
  (of-object "GtkAspectFrame")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property xalign
  (of-object "GtkAspectFrame")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property yalign
  (of-object "GtkAspectFrame")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property use-header-bar
  (of-object "GtkAssistant")
  (docs "%TRUE if the assistant uses a #GtkHeaderBar for action buttons instead of the action-area.  For technical reasons, this property is declared as an integer property, but you should only set it to %TRUE or %FALSE.")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property baseline-position
  (of-object "GtkBox")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property homogeneous
  (of-object "GtkBox")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property spacing
  (of-object "GtkBox")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property translation-domain
  (of-object "GtkBuilder")
  (docs "The translation domain used when translating property values that have been marked as translatable in interface descriptions. If the translation domain is %NULL, #GtkBuilder uses gettext(), otherwise g_dgettext().")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property always-show-image
  (of-object "GtkButton")
  (docs "If %TRUE, the button will ignore the #GtkSettings:gtk-button-images setting and always show the image, if available.  Use this property if the button would be useless or hard to use without the image.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property image
  (of-object "GtkButton")
  (docs "The child widget to appear next to the button text.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property image-position
  (of-object "GtkButton")
  (docs "The position of the image relative to the text inside the button.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property label
  (of-object "GtkButton")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property relief
  (of-object "GtkButton")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property use-stock
  (of-object "GtkButton")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property use-underline
  (of-object "GtkButton")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property xalign
  (of-object "GtkButton")
  (docs "If the child of the button is a #GtkMisc or #GtkAlignment, this property can be used to control its horizontal alignment. 0.0 is left aligned, 1.0 is right aligned.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property yalign
  (of-object "GtkButton")
  (docs "If the child of the button is a #GtkMisc or #GtkAlignment, this property can be used to control its vertical alignment. 0.0 is top aligned, 1.0 is bottom aligned.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property layout-style
  (of-object "GtkButtonBox")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property day
  (of-object "GtkCalendar")
  (docs "The selected day (as a number between 1 and 31, or 0 to unselect the currently selected day). This property gets initially set to the current day.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property detail-height-rows
  (of-object "GtkCalendar")
  (docs "Height of a detail cell, in rows. A value of 0 allows any width. See gtk_calendar_set_detail_func().")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property detail-width-chars
  (of-object "GtkCalendar")
  (docs "Width of a detail cell, in characters. A value of 0 allows any width. See gtk_calendar_set_detail_func().")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property month
  (of-object "GtkCalendar")
  (docs "The selected month (as a number between 0 and 11). This property gets initially set to the current month.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property no-month-change
  (of-object "GtkCalendar")
  (docs "Determines whether the selected month can be changed.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-day-names
  (of-object "GtkCalendar")
  (docs "Determines whether day names are displayed.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-details
  (of-object "GtkCalendar")
  (docs "Determines whether details are shown directly in the widget, or if they are available only as tooltip. When this property is set days with details are marked.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-heading
  (of-object "GtkCalendar")
  (docs "Determines whether a heading is displayed.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-week-numbers
  (of-object "GtkCalendar")
  (docs "Determines whether week numbers are displayed.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property year
  (of-object "GtkCalendar")
  (docs "The selected year. This property gets initially set to the current year.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property edit-widget
  (of-object "GtkCellArea")
  (docs "The widget currently editing the edited cell  This property is read-only and only changes as a result of a call gtk_cell_area_activate_cell().")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property edited-cell
  (of-object "GtkCellArea")
  (docs "The cell in the area that is currently edited  This property is read-only and only changes as a result of a call gtk_cell_area_activate_cell().")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property focus-cell
  (of-object "GtkCellArea")
  (docs "The cell in the area that currently has focus")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property spacing
  (of-object "GtkCellAreaBox")
  (docs "The amount of space to reserve between cells.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property area
  (of-object "GtkCellAreaContext")
  (docs "The #GtkCellArea this context was created by")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property minimum-height
  (of-object "GtkCellAreaContext")
  (docs "The minimum height for the #GtkCellArea in this context for all #GtkTreeModel rows that this context was requested for using gtk_cell_area_get_preferred_height().")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property minimum-width
  (of-object "GtkCellAreaContext")
  (docs "The minimum width for the #GtkCellArea in this context for all #GtkTreeModel rows that this context was requested for using gtk_cell_area_get_preferred_width().")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property natural-height
  (of-object "GtkCellAreaContext")
  (docs "The natural height for the #GtkCellArea in this context for all #GtkTreeModel rows that this context was requested for using gtk_cell_area_get_preferred_height().")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property natural-width
  (of-object "GtkCellAreaContext")
  (docs "The natural width for the #GtkCellArea in this context for all #GtkTreeModel rows that this context was requested for using gtk_cell_area_get_preferred_width().")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property cell-background
  (of-object "GtkCellRenderer")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property cell-background-gdk
  (of-object "GtkCellRenderer")
  (docs "Cell background as a #GdkColor")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property cell-background-rgba
  (of-object "GtkCellRenderer")
  (docs "Cell background as a #GdkRGBA")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property cell-background-set
  (of-object "GtkCellRenderer")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property editing
  (of-object "GtkCellRenderer")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property height
  (of-object "GtkCellRenderer")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property is-expanded
  (of-object "GtkCellRenderer")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property is-expander
  (of-object "GtkCellRenderer")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property mode
  (of-object "GtkCellRenderer")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property sensitive
  (of-object "GtkCellRenderer")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property visible
  (of-object "GtkCellRenderer")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property width
  (of-object "GtkCellRenderer")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property xalign
  (of-object "GtkCellRenderer")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property xpad
  (of-object "GtkCellRenderer")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property yalign
  (of-object "GtkCellRenderer")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property ypad
  (of-object "GtkCellRenderer")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property accel-key
  (of-object "GtkCellRendererAccel")
  (docs "The keyval of the accelerator.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property accel-mode
  (of-object "GtkCellRendererAccel")
  (docs "Determines if the edited accelerators are GTK+ accelerators. If they are, consumed modifiers are suppressed, only accelerators accepted by GTK+ are allowed, and the accelerators are rendered in the same way as they are in menus.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property accel-mods
  (of-object "GtkCellRendererAccel")
  (docs "The modifier mask of the accelerator.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property keycode
  (of-object "GtkCellRendererAccel")
  (docs "The hardware keycode of the accelerator. Note that the hardware keycode is only relevant if the key does not have a keyval. Normally, the keyboard configuration should assign keyvals to all keys.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-entry
  (of-object "GtkCellRendererCombo")
  (docs "If %TRUE, the cell renderer will include an entry and allow to enter values other than the ones in the popup list.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property model
  (of-object "GtkCellRendererCombo")
  (docs "Holds a tree model containing the possible values for the combo box. Use the text_column property to specify the column holding the values.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property text-column
  (of-object "GtkCellRendererCombo")
  (docs "Specifies the model column which holds the possible values for the combo box.  Note that this refers to the model specified in the model property, not the model backing the tree view to which this cell renderer is attached.  #GtkCellRendererCombo automatically adds a text cell renderer for this column to its combo box.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property follow-state
  (of-object "GtkCellRendererPixbuf")
  (docs "Specifies whether the rendered pixbuf should be colorized according to the #GtkCellRendererState.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gicon
  (of-object "GtkCellRendererPixbuf")
  (docs "The GIcon representing the icon to display. If the icon theme is changed, the image will be updated automatically.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property icon-name
  (of-object "GtkCellRendererPixbuf")
  (docs "The name of the themed icon to display. This property only has an effect if not overridden by 'stock_id' or 'pixbuf' properties.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixbuf
  (of-object "GtkCellRendererPixbuf")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixbuf-expander-closed
  (of-object "GtkCellRendererPixbuf")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixbuf-expander-open
  (of-object "GtkCellRendererPixbuf")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property stock-detail
  (of-object "GtkCellRendererPixbuf")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property stock-id
  (of-object "GtkCellRendererPixbuf")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property stock-size
  (of-object "GtkCellRendererPixbuf")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property surface
  (of-object "GtkCellRendererPixbuf")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property inverted
  (of-object "GtkCellRendererProgress")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pulse
  (of-object "GtkCellRendererProgress")
  (docs "Setting this to a non-negative value causes the cell renderer to enter 'activity mode', where a block bounces back and forth to indicate that some progress is made, without specifying exactly how much.  Each increment of the property causes the block to move by a little bit.  To indicate that the activity has not started yet, set the property to zero. To indicate completion, set the property to %G_MAXINT.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property text
  (of-object "GtkCellRendererProgress")
  (docs "The 'text' property determines the label which will be drawn over the progress bar. Setting this property to %NULL causes the default label to be displayed. Setting this property to an empty string causes no label to be displayed.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property text-xalign
  (of-object "GtkCellRendererProgress")
  (docs "The 'text-xalign' property controls the horizontal alignment of the text in the progress bar.  Valid values range from 0 (left) to 1 (right).  Reserved for RTL layouts.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property text-yalign
  (of-object "GtkCellRendererProgress")
  (docs "The 'text-yalign' property controls the vertical alignment of the text in the progress bar.  Valid values range from 0 (top) to 1 (bottom).")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property value
  (of-object "GtkCellRendererProgress")
  (docs "The 'value' property determines the percentage to which the progress bar will be 'filled in'.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property adjustment
  (of-object "GtkCellRendererSpin")
  (docs "The adjustment that holds the value of the spinbutton. This must be non-%NULL for the cell renderer to be editable.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property climb-rate
  (of-object "GtkCellRendererSpin")
  (docs "The acceleration rate when you hold down a button.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property digits
  (of-object "GtkCellRendererSpin")
  (docs "The number of decimal places to display.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property active
  (of-object "GtkCellRendererSpinner")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pulse
  (of-object "GtkCellRendererSpinner")
  (docs "Pulse of the spinner. Increment this value to draw the next frame of the spinner animation. Usually, you would update this value in a timeout.  By default, the #GtkSpinner widget draws one full cycle of the animation, consisting of 12 frames, in 750 milliseconds.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property size
  (of-object "GtkCellRendererSpinner")
  (docs "The #GtkIconSize value that specifies the size of the rendered spinner.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property align-set
  (of-object "GtkCellRendererText")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property alignment
  (of-object "GtkCellRendererText")
  (docs "Specifies how to align the lines of text with respect to each other.  Note that this property describes how to align the lines of text in case there are several of them. The 'xalign' property of #GtkCellRenderer, on the other hand, sets the horizontal alignment of the whole text.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property attributes
  (of-object "GtkCellRendererText")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property background
  (of-object "GtkCellRendererText")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property background-gdk
  (of-object "GtkCellRendererText")
  (docs "Background color as a #GdkColor")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property background-rgba
  (of-object "GtkCellRendererText")
  (docs "Background color as a #GdkRGBA")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property background-set
  (of-object "GtkCellRendererText")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property editable
  (of-object "GtkCellRendererText")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property editable-set
  (of-object "GtkCellRendererText")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property ellipsize
  (of-object "GtkCellRendererText")
  (docs "Specifies the preferred place to ellipsize the string, if the cell renderer does not have enough room to display the entire string. Setting it to %PANGO_ELLIPSIZE_NONE turns off ellipsizing. See the wrap-width property for another way of making the text fit into a given width.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property ellipsize-set
  (of-object "GtkCellRendererText")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property family
  (of-object "GtkCellRendererText")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property family-set
  (of-object "GtkCellRendererText")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property font
  (of-object "GtkCellRendererText")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property font-desc
  (of-object "GtkCellRendererText")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property foreground
  (of-object "GtkCellRendererText")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property foreground-gdk
  (of-object "GtkCellRendererText")
  (docs "Foreground color as a #GdkColor")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property foreground-rgba
  (of-object "GtkCellRendererText")
  (docs "Foreground color as a #GdkRGBA")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property foreground-set
  (of-object "GtkCellRendererText")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property language
  (of-object "GtkCellRendererText")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property language-set
  (of-object "GtkCellRendererText")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property markup
  (of-object "GtkCellRendererText")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property max-width-chars
  (of-object "GtkCellRendererText")
  (docs "The desired maximum width of the cell, in characters. If this property is set to -1, the width will be calculated automatically.  For cell renderers that ellipsize or wrap text; this property controls the maximum reported width of the cell. The cell should not receive any greater allocation unless it is set to expand in its #GtkCellLayout and all of the cell's siblings have received their natural width.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property placeholder-text
  (of-object "GtkCellRendererText")
  (docs "The text that will be displayed in the #GtkCellRenderer if #GtkCellRendererText:editable is %TRUE and the cell is empty.  Since 3.6")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property rise
  (of-object "GtkCellRendererText")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property rise-set
  (of-object "GtkCellRendererText")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property scale
  (of-object "GtkCellRendererText")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property scale-set
  (of-object "GtkCellRendererText")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property single-paragraph-mode
  (of-object "GtkCellRendererText")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property size
  (of-object "GtkCellRendererText")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property size-points
  (of-object "GtkCellRendererText")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property size-set
  (of-object "GtkCellRendererText")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property stretch
  (of-object "GtkCellRendererText")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property stretch-set
  (of-object "GtkCellRendererText")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property strikethrough
  (of-object "GtkCellRendererText")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property strikethrough-set
  (of-object "GtkCellRendererText")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property style
  (of-object "GtkCellRendererText")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property style-set
  (of-object "GtkCellRendererText")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property text
  (of-object "GtkCellRendererText")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property underline
  (of-object "GtkCellRendererText")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property underline-set
  (of-object "GtkCellRendererText")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property variant
  (of-object "GtkCellRendererText")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property variant-set
  (of-object "GtkCellRendererText")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property weight
  (of-object "GtkCellRendererText")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property weight-set
  (of-object "GtkCellRendererText")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property width-chars
  (of-object "GtkCellRendererText")
  (docs "The desired width of the cell, in characters. If this property is set to -1, the width will be calculated automatically, otherwise the cell will request either 3 characters or the property value, whichever is greater.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property wrap-mode
  (of-object "GtkCellRendererText")
  (docs "Specifies how to break the string into multiple lines, if the cell renderer does not have enough room to display the entire string. This property has no effect unless the wrap-width property is set.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property wrap-width
  (of-object "GtkCellRendererText")
  (docs "Specifies the minimum width at which the text is wrapped. The wrap-mode property can be used to influence at what character positions the line breaks can be placed. Setting wrap-width to -1 turns wrapping off.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property activatable
  (of-object "GtkCellRendererToggle")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property active
  (of-object "GtkCellRendererToggle")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property inconsistent
  (of-object "GtkCellRendererToggle")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property indicator-size
  (of-object "GtkCellRendererToggle")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property radio
  (of-object "GtkCellRendererToggle")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property background
  (of-object "GtkCellView")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property background-gdk
  (of-object "GtkCellView")
  (docs "The background color as a #GdkColor")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property background-rgba
  (of-object "GtkCellView")
  (docs "The background color as a #GdkRGBA")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property background-set
  (of-object "GtkCellView")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property cell-area
  (of-object "GtkCellView")
  (docs "The #GtkCellArea rendering cells  If no area is specified when creating the cell view with gtk_cell_view_new_with_context() a horizontally oriented #GtkCellAreaBox will be used.  since 3.0")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property cell-area-context
  (of-object "GtkCellView")
  (docs "The #GtkCellAreaContext used to compute the geometry of the cell view.  A group of cell views can be assigned the same context in order to ensure the sizes and cell alignments match across all the views with the same context.  #GtkComboBox menus uses this to assign the same context to all cell views in the menu items for a single menu (each submenu creates its own context since the size of each submenu does not depend on parent or sibling menus).  since 3.0")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property draw-sensitive
  (of-object "GtkCellView")
  (docs "Whether all cells should be draw as sensitive for this view regardless of the actual cell properties (used to make menus with submenus appear sensitive when the items in submenus might be insensitive).  since 3.0")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property fit-model
  (of-object "GtkCellView")
  (docs "Whether the view should request enough space to always fit the size of every row in the model (used by the combo box to ensure the combo box size doesnt change when different items are selected).  since 3.0")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property model
  (of-object "GtkCellView")
  (docs "The model for cell view  since 2.10")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property active
  (of-object "GtkCheckMenuItem")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property draw-as-radio
  (of-object "GtkCheckMenuItem")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property inconsistent
  (of-object "GtkCheckMenuItem")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property alpha
  (of-object "GtkColorButton")
  (docs "The selected opacity value (0 fully transparent, 65535 fully opaque).")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property color
  (of-object "GtkColorButton")
  (docs "The selected color.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property rgba
  (of-object "GtkColorButton")
  (docs "The RGBA color.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-editor
  (of-object "GtkColorButton")
  (docs "Set this property to %TRUE to skip the palette in the dialog and go directly to the color editor.  This property should be used in cases where the palette in the editor would be redundant, such as when the color button is already part of a palette.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property title
  (of-object "GtkColorButton")
  (docs "The title of the color selection dialog")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property use-alpha
  (of-object "GtkColorButton")
  (docs "If this property is set to %TRUE, the color swatch on the button is rendered against a checkerboard background to show its opacity and the opacity slider is displayed in the color selection dialog.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-editor
  (of-object "GtkColorChooserDialog")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-editor
  (of-object "GtkColorChooserWidget")
  (docs "The ::show-editor property is %TRUE when the color chooser is showing the single-color editor. It can be set to switch the color chooser into single-color editing mode.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property current-alpha
  (of-object "GtkColorSelection")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property current-color
  (of-object "GtkColorSelection")
  (docs "The current GdkColor color.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property current-rgba
  (of-object "GtkColorSelection")
  (docs "The current RGBA color.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-opacity-control
  (of-object "GtkColorSelection")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-palette
  (of-object "GtkColorSelection")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property cancel-button
  (of-object "GtkColorSelectionDialog")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property color-selection
  (of-object "GtkColorSelectionDialog")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property help-button
  (of-object "GtkColorSelectionDialog")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property ok-button
  (of-object "GtkColorSelectionDialog")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property active
  (of-object "GtkComboBox")
  (docs "The item which is currently active. If the model is a non-flat treemodel, and the active item is not an immediate child of the root of the tree, this property has the value `gtk_tree_path_get_indices (path)[0]`, where `path` is the #GtkTreePath of the active item.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property active-id
  (of-object "GtkComboBox")
  (docs "The value of the ID column of the active row.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property add-tearoffs
  (of-object "GtkComboBox")
  (docs "The add-tearoffs property controls whether generated menus have tearoff menu items.  Note that this only affects menu style combo boxes.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property button-sensitivity
  (of-object "GtkComboBox")
  (docs "Whether the dropdown button is sensitive when the model is empty.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property cell-area
  (of-object "GtkComboBox")
  (docs "The #GtkCellArea used to layout cell renderers for this combo box.  If no area is specified when creating the combo box with gtk_combo_box_new_with_area() a horizontally oriented #GtkCellAreaBox will be used.")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property column-span-column
  (of-object "GtkComboBox")
  (docs "If this is set to a non-negative value, it must be the index of a column of type %G_TYPE_INT in the model.  The values of that column are used to determine how many columns a value in the list will span.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property entry-text-column
  (of-object "GtkComboBox")
  (docs "The column in the combo box's model to associate with strings from the entry if the combo was created with #GtkComboBox:has-entry = %TRUE.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-entry
  (of-object "GtkComboBox")
  (docs "Whether the combo box has an entry.")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property has-frame
  (of-object "GtkComboBox")
  (docs "The has-frame property controls whether a frame is drawn around the entry.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property id-column
  (of-object "GtkComboBox")
  (docs "The column in the combo box's model that provides string IDs for the values in the model, if != -1.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property model
  (of-object "GtkComboBox")
  (docs "The model from which the combo box takes the values shown in the list.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property popup-fixed-width
  (of-object "GtkComboBox")
  (docs "Whether the popup's width should be a fixed width matching the allocated width of the combo box.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property popup-shown
  (of-object "GtkComboBox")
  (docs "Whether the combo boxes dropdown is popped up. Note that this property is mainly useful, because it allows you to connect to notify::popup-shown.")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property row-span-column
  (of-object "GtkComboBox")
  (docs "If this is set to a non-negative value, it must be the index of a column of type %G_TYPE_INT in the model.  The values of that column are used to determine how many rows a value in the list will span. Therefore, the values in the model column pointed to by this property must be greater than zero and not larger than wrap-width.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tearoff-title
  (of-object "GtkComboBox")
  (docs "A title that may be displayed by the window manager when the popup is torn-off.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property wrap-width
  (of-object "GtkComboBox")
  (docs "If wrap-width is set to a positive value, the list will be displayed in multiple columns, the number of columns is determined by wrap-width.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property border-width
  (of-object "GtkContainer")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property child
  (of-object "GtkContainer")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property resize-mode
  (of-object "GtkContainer")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property use-header-bar
  (of-object "GtkDialog")
  (docs "%TRUE if the dialog uses a #GtkHeaderBar for action buttons instead of the action-area.  For technical reasons, this property is declared as an integer property, but you should only set it to %TRUE or %FALSE.")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property activates-default
  (of-object "GtkEntry")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property attributes
  (of-object "GtkEntry")
  (docs "A list of Pango attributes to apply to the text of the entry.  This is mainly useful to change the size or weight of the text.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property buffer
  (of-object "GtkEntry")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property caps-lock-warning
  (of-object "GtkEntry")
  (docs "Whether password entries will show a warning when Caps Lock is on.  Note that the warning is shown using a secondary icon, and thus does not work if you are using the secondary icon position for some other purpose.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property completion
  (of-object "GtkEntry")
  (docs "The auxiliary completion object to use with the entry.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property cursor-position
  (of-object "GtkEntry")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property editable
  (of-object "GtkEntry")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-frame
  (of-object "GtkEntry")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property im-module
  (of-object "GtkEntry")
  (docs "Which IM (input method) module should be used for this entry. See #GtkIMContext.  Setting this to a non-%NULL value overrides the system-wide IM module setting. See the GtkSettings #GtkSettings:gtk-im-module property.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property inner-border
  (of-object "GtkEntry")
  (docs "Sets the text area's border between the text and the frame.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property input-hints
  (of-object "GtkEntry")
  (docs "Additional hints (beyond #GtkEntry:input-purpose) that allow input methods to fine-tune their behaviour.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property input-purpose
  (of-object "GtkEntry")
  (docs "The purpose of this text field.  This property can be used by on-screen keyboards and other input methods to adjust their behaviour.  Note that setting the purpose to %GTK_INPUT_PURPOSE_PASSWORD or %GTK_INPUT_PURPOSE_PIN is independent from setting #GtkEntry:visibility.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property invisible-char
  (of-object "GtkEntry")
  (docs "The invisible character is used when masking entry contents (in \'password mode\')'). When it is not explicitly set with the #GtkEntry:invisible-char property, GTK+ determines the character to use from a list of possible candidates, depending on availability in the current font.  This style property allows the theme to prepend a character to the list of candidates.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property invisible-char-set
  (of-object "GtkEntry")
  (docs "Whether the invisible char has been set for the #GtkEntry.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property max-length
  (of-object "GtkEntry")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property max-width-chars
  (of-object "GtkEntry")
  (docs "The desired maximum width of the entry, in characters. If this property is set to -1, the width will be calculated automatically.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property overwrite-mode
  (of-object "GtkEntry")
  (docs "If text is overwritten when typing in the #GtkEntry.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property placeholder-text
  (of-object "GtkEntry")
  (docs "The text that will be displayed in the #GtkEntry when it is empty and unfocused.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property populate-all
  (of-object "GtkEntry")
  (docs "If :populate-all is %TRUE, the #GtkEntry::populate-popup signal is also emitted for touch popups.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property primary-icon-activatable
  (of-object "GtkEntry")
  (docs "Whether the primary icon is activatable.  GTK+ emits the #GtkEntry::icon-press and #GtkEntry::icon-release signals only on sensitive, activatable icons.  Sensitive, but non-activatable icons can be used for purely informational purposes.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property primary-icon-gicon
  (of-object "GtkEntry")
  (docs "The #GIcon to use for the primary icon for the entry.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property primary-icon-name
  (of-object "GtkEntry")
  (docs "The icon name to use for the primary icon for the entry.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property primary-icon-pixbuf
  (of-object "GtkEntry")
  (docs "A pixbuf to use as the primary icon for the entry.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property primary-icon-sensitive
  (of-object "GtkEntry")
  (docs "Whether the primary icon is sensitive.  An insensitive icon appears grayed out. GTK+ does not emit the #GtkEntry::icon-press and #GtkEntry::icon-release signals and does not allow DND from insensitive icons.  An icon should be set insensitive if the action that would trigger when clicked is currently not available.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property primary-icon-stock
  (of-object "GtkEntry")
  (docs "The stock id to use for the primary icon for the entry.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property primary-icon-storage-type
  (of-object "GtkEntry")
  (docs "The representation which is used for the primary icon of the entry.")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property primary-icon-tooltip-markup
  (of-object "GtkEntry")
  (docs "The contents of the tooltip on the primary icon, which is marked up with the [Pango text markup language][PangoMarkupFormat].  Also see gtk_entry_set_icon_tooltip_markup().")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property primary-icon-tooltip-text
  (of-object "GtkEntry")
  (docs "The contents of the tooltip on the primary icon.  Also see gtk_entry_set_icon_tooltip_text().")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property progress-fraction
  (of-object "GtkEntry")
  (docs "The current fraction of the task that's been completed.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property progress-pulse-step
  (of-object "GtkEntry")
  (docs "The fraction of total entry width to move the progress bouncing block for each call to gtk_entry_progress_pulse().")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property scroll-offset
  (of-object "GtkEntry")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property secondary-icon-activatable
  (of-object "GtkEntry")
  (docs "Whether the secondary icon is activatable.  GTK+ emits the #GtkEntry::icon-press and #GtkEntry::icon-release signals only on sensitive, activatable icons.  Sensitive, but non-activatable icons can be used for purely informational purposes.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property secondary-icon-gicon
  (of-object "GtkEntry")
  (docs "The #GIcon to use for the secondary icon for the entry.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property secondary-icon-name
  (of-object "GtkEntry")
  (docs "The icon name to use for the secondary icon for the entry.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property secondary-icon-pixbuf
  (of-object "GtkEntry")
  (docs "An pixbuf to use as the secondary icon for the entry.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property secondary-icon-sensitive
  (of-object "GtkEntry")
  (docs "Whether the secondary icon is sensitive.  An insensitive icon appears grayed out. GTK+ does not emit the #GtkEntry::icon-press and #GtkEntry::icon-release signals and does not allow DND from insensitive icons.  An icon should be set insensitive if the action that would trigger when clicked is currently not available.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property secondary-icon-stock
  (of-object "GtkEntry")
  (docs "The stock id to use for the secondary icon for the entry.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property secondary-icon-storage-type
  (of-object "GtkEntry")
  (docs "The representation which is used for the secondary icon of the entry.")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property secondary-icon-tooltip-markup
  (of-object "GtkEntry")
  (docs "The contents of the tooltip on the secondary icon, which is marked up with the [Pango text markup language][PangoMarkupFormat].  Also see gtk_entry_set_icon_tooltip_markup().")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property secondary-icon-tooltip-text
  (of-object "GtkEntry")
  (docs "The contents of the tooltip on the secondary icon.  Also see gtk_entry_set_icon_tooltip_text().")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property selection-bound
  (of-object "GtkEntry")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property shadow-type
  (of-object "GtkEntry")
  (docs "Which kind of shadow to draw around the entry when #GtkEntry:has-frame is set to %TRUE.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property tabs
  (of-object "GtkEntry")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property text
  (of-object "GtkEntry")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property text-length
  (of-object "GtkEntry")
  (docs "The length of the text in the #GtkEntry.")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property truncate-multiline
  (of-object "GtkEntry")
  (docs "When %TRUE, pasted multi-line text is truncated to the first line.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property visibility
  (of-object "GtkEntry")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property width-chars
  (of-object "GtkEntry")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property xalign
  (of-object "GtkEntry")
  (docs "The horizontal alignment, from 0 (left) to 1 (right). Reversed for RTL layouts.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property length
  (of-object "GtkEntryBuffer")
  (docs "The length (in characters) of the text in buffer.")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property max-length
  (of-object "GtkEntryBuffer")
  (docs "The maximum length (in characters) of the text in the buffer.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property text
  (of-object "GtkEntryBuffer")
  (docs "The contents of the buffer.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property cell-area
  (of-object "GtkEntryCompletion")
  (docs "The #GtkCellArea used to layout cell renderers in the treeview column.  If no area is specified when creating the entry completion with gtk_entry_completion_new_with_area() a horizontally oriented #GtkCellAreaBox will be used.")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property inline-completion
  (of-object "GtkEntryCompletion")
  (docs "Determines whether the common prefix of the possible completions should be inserted automatically in the entry. Note that this requires text-column to be set, even if you are using a custom match function.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property inline-selection
  (of-object "GtkEntryCompletion")
  (docs "Determines whether the possible completions on the popup will appear in the entry as you navigate through them.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property minimum-key-length
  (of-object "GtkEntryCompletion")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property model
  (of-object "GtkEntryCompletion")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property popup-completion
  (of-object "GtkEntryCompletion")
  (docs "Determines whether the possible completions should be shown in a popup window.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property popup-set-width
  (of-object "GtkEntryCompletion")
  (docs "Determines whether the completions popup window will be resized to the width of the entry.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property popup-single-match
  (of-object "GtkEntryCompletion")
  (docs "Determines whether the completions popup window will shown for a single possible completion. You probably want to set this to %FALSE if you are using [inline completion][GtkEntryCompletion--inline-completion].")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property text-column
  (of-object "GtkEntryCompletion")
  (docs "The column of the model containing the strings. Note that the strings must be UTF-8.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property above-child
  (of-object "GtkEventBox")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property visible-window
  (of-object "GtkEventBox")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property propagation-phase
  (of-object "GtkEventController")
  (docs "The propagation phase at which this controller will handle events.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property widget
  (of-object "GtkEventController")
  (docs "The widget receiving the #GdkEvents that the controller will handle.")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property expanded
  (of-object "GtkExpander")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property label
  (of-object "GtkExpander")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property label-fill
  (of-object "GtkExpander")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property label-widget
  (of-object "GtkExpander")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property resize-toplevel
  (of-object "GtkExpander")
  (docs "When this property is %TRUE, the expander will resize the toplevel widget containing the expander upon expanding and collapsing.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property spacing
  (of-object "GtkExpander")
  (docs "Space to put between the label and the child when the expander is expanded.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property use-markup
  (of-object "GtkExpander")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property use-underline
  (of-object "GtkExpander")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property dialog
  (of-object "GtkFileChooserButton")
  (docs "Instance of the #GtkFileChooserDialog associated with the button.")
  (readable #f)
  (writable #t)
  (construct-only #t)
)

(define-property title
  (of-object "GtkFileChooserButton")
  (docs "Title to put on the #GtkFileChooserDialog associated with the button.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property width-chars
  (of-object "GtkFileChooserButton")
  (docs "The width of the entry and label inside the button, in characters.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property accept-label
  (of-object "GtkFileChooserNative")
  (docs "The text used for the label on the accept button in the dialog, or %NULL to use the default text.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property cancel-label
  (of-object "GtkFileChooserNative")
  (docs "The text used for the label on the cancel button in the dialog, or %NULL to use the default text.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property search-mode
  (of-object "GtkFileChooserWidget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property subtitle
  (of-object "GtkFileChooserWidget")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property activate-on-single-click
  (of-object "GtkFlowBox")
  (docs "Determines whether children can be activated with a single click, or require a double-click.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property column-spacing
  (of-object "GtkFlowBox")
  (docs "The amount of horizontal space between two children.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property homogeneous
  (of-object "GtkFlowBox")
  (docs "Determines whether all children should be allocated the same size.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property max-children-per-line
  (of-object "GtkFlowBox")
  (docs "The maximum amount of children to request space for consecutively in the given orientation.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property min-children-per-line
  (of-object "GtkFlowBox")
  (docs "The minimum number of children to allocate consecutively in the given orientation.  Setting the minimum children per line ensures that a reasonably small height will be requested for the overall minimum width of the box.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property row-spacing
  (of-object "GtkFlowBox")
  (docs "The amount of vertical space between two children.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property selection-mode
  (of-object "GtkFlowBox")
  (docs "The selection mode used by the flow  box.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property font-name
  (of-object "GtkFontButton")
  (docs "The name of the currently selected font.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-size
  (of-object "GtkFontButton")
  (docs "If this property is set to %TRUE, the selected font size will be shown in the label. For a more WYSIWYG way to show the selected size, see the ::use-size property.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-style
  (of-object "GtkFontButton")
  (docs "If this property is set to %TRUE, the name of the selected font style will be shown in the label. For a more WYSIWYG way to show the selected style, see the ::use-font property.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property title
  (of-object "GtkFontButton")
  (docs "The title of the font chooser dialog.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property use-font
  (of-object "GtkFontButton")
  (docs "If this property is set to %TRUE, the label will be drawn in the selected font.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property use-size
  (of-object "GtkFontButton")
  (docs "If this property is set to %TRUE, the label will be drawn with the selected font size.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property font-name
  (of-object "GtkFontSelection")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property preview-text
  (of-object "GtkFontSelection")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property label
  (of-object "GtkFrame")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property label-widget
  (of-object "GtkFrame")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property label-xalign
  (of-object "GtkFrame")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property label-yalign
  (of-object "GtkFrame")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property shadow-type
  (of-object "GtkFrame")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property auto-render
  (of-object "GtkGLArea")
  (docs "If set to %TRUE the #GtkGLArea::render signal will be emitted every time the widget draws. This is the default and is useful if drawing the widget is faster.  If set to %FALSE the data from previous rendering is kept around and will be used for drawing the widget the next time, unless the window is resized. In order to force a rendering gtk_gl_area_queue_render() must be called. This mode is useful when the scene changes seldomly, but takes a long time to redraw.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property context
  (of-object "GtkGLArea")
  (docs "The #GdkGLContext used by the #GtkGLArea widget.  The #GtkGLArea widget is responsible for creating the #GdkGLContext instance. If you need to render with other kinds of buffers (stencil, depth, etc), use render buffers.")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property has-alpha
  (of-object "GtkGLArea")
  (docs "If set to %TRUE the buffer allocated by the widget will have an alpha channel component, and when rendering to the window the result will be composited over whatever is below the widget.  If set to %FALSE there will be no alpha channel, and the buffer will fully replace anything below the widget.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-depth-buffer
  (of-object "GtkGLArea")
  (docs "If set to %TRUE the widget will allocate and enable a depth buffer for the target framebuffer.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-stencil-buffer
  (of-object "GtkGLArea")
  (docs "If set to %TRUE the widget will allocate and enable a stencil buffer for the target framebuffer.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property use-es
  (of-object "GtkGLArea")
  (docs "If set to %TRUE the widget will try to create a #GdkGLContext using OpenGL ES instead of OpenGL.  See also: gdk_gl_context_set_use_es()")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property n-points
  (of-object "GtkGesture")
  (docs "The number of touch points that trigger recognition on this gesture,")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property window
  (of-object "GtkGesture")
  (docs "If non-%NULL, the gesture will only listen for events that happen on this #GdkWindow, or a child of it.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property delay-factor
  (of-object "GtkGestureLongPress")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property orientation
  (of-object "GtkGesturePan")
  (docs "The expected orientation of pan gestures.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property button
  (of-object "GtkGestureSingle")
  (docs "Mouse button number to listen to, or 0 to listen for any button.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property exclusive
  (of-object "GtkGestureSingle")
  (docs "Whether the gesture is exclusive. Exclusive gestures only listen to pointer and pointer emulated events.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property touch-only
  (of-object "GtkGestureSingle")
  (docs "Whether the gesture handles only touch events.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property baseline-row
  (of-object "GtkGrid")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property column-homogeneous
  (of-object "GtkGrid")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property column-spacing
  (of-object "GtkGrid")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property row-homogeneous
  (of-object "GtkGrid")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property row-spacing
  (of-object "GtkGrid")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property child-detached
  (of-object "GtkHandleBox")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property handle-position
  (of-object "GtkHandleBox")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property shadow-type
  (of-object "GtkHandleBox")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property snap-edge
  (of-object "GtkHandleBox")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property snap-edge-set
  (of-object "GtkHandleBox")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property custom-title
  (of-object "GtkHeaderBar")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property decoration-layout
  (of-object "GtkHeaderBar")
  (docs "The decoration layout for buttons. If this property is not set, the #GtkSettings:gtk-decoration-layout setting is used.  See gtk_header_bar_set_decoration_layout() for information about the format of this string.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property decoration-layout-set
  (of-object "GtkHeaderBar")
  (docs "Set to %TRUE if #GtkHeaderBar:decoration-layout is set.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-subtitle
  (of-object "GtkHeaderBar")
  (docs "If %TRUE, reserve space for a subtitle, even if none is currently set.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-close-button
  (of-object "GtkHeaderBar")
  (docs "Whether to show window decorations.  Which buttons are actually shown and where is determined by the #GtkHeaderBar:decoration-layout property, and by the state of the window (e.g. a close button will not be shown if the window can't be closed).")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property spacing
  (of-object "GtkHeaderBar")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property subtitle
  (of-object "GtkHeaderBar")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property title
  (of-object "GtkHeaderBar")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property input-hints
  (of-object "GtkIMContext")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property input-purpose
  (of-object "GtkIMContext")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property activate-on-single-click
  (of-object "GtkIconView")
  (docs "The activate-on-single-click property specifies whether the 'item-activated' signal will be emitted after a single click.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property cell-area
  (of-object "GtkIconView")
  (docs "The #GtkCellArea used to layout cell renderers for this view.  If no area is specified when creating the icon view with gtk_icon_view_new_with_area() a #GtkCellAreaBox will be used.")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property column-spacing
  (of-object "GtkIconView")
  (docs "The column-spacing property specifies the space which is inserted between the columns of the icon view.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property columns
  (of-object "GtkIconView")
  (docs "The columns property contains the number of the columns in which the items should be displayed. If it is -1, the number of columns will be chosen automatically to fill the available area.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property item-orientation
  (of-object "GtkIconView")
  (docs "The item-orientation property specifies how the cells (i.e. the icon and the text) of the item are positioned relative to each other.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property item-padding
  (of-object "GtkIconView")
  (docs "The item-padding property specifies the padding around each of the icon view's item.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property item-width
  (of-object "GtkIconView")
  (docs "The item-width property specifies the width to use for each item. If it is set to -1, the icon view will automatically determine a suitable item size.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property margin
  (of-object "GtkIconView")
  (docs "The margin property specifies the space which is inserted at the edges of the icon view.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property markup-column
  (of-object "GtkIconView")
  (docs "The ::markup-column property contains the number of the model column containing markup information to be displayed. The markup column must be of type #G_TYPE_STRING. If this property and the :text-column property are both set to column numbers, it overrides the text column. If both are set to -1, no texts are displayed.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property model
  (of-object "GtkIconView")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixbuf-column
  (of-object "GtkIconView")
  (docs "The ::pixbuf-column property contains the number of the model column containing the pixbufs which are displayed. The pixbuf column must be of type #GDK_TYPE_PIXBUF. Setting this property to -1 turns off the display of pixbufs.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property reorderable
  (of-object "GtkIconView")
  (docs "The reorderable property specifies if the items can be reordered by DND.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property row-spacing
  (of-object "GtkIconView")
  (docs "The row-spacing property specifies the space which is inserted between the rows of the icon view.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property selection-mode
  (of-object "GtkIconView")
  (docs "The ::selection-mode property specifies the selection mode of icon view. If the mode is #GTK_SELECTION_MULTIPLE, rubberband selection is enabled, for the other modes, only keyboard selection is possible.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property spacing
  (of-object "GtkIconView")
  (docs "The spacing property specifies the space which is inserted between the cells (i.e. the icon and the text) of an item.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property text-column
  (of-object "GtkIconView")
  (docs "The ::text-column property contains the number of the model column containing the texts which are displayed. The text column must be of type #G_TYPE_STRING. If this property and the :markup-column property are both set to -1, no texts are displayed.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tooltip-column
  (of-object "GtkIconView")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property file
  (of-object "GtkImage")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gicon
  (of-object "GtkImage")
  (docs "The GIcon displayed in the GtkImage. For themed icons, If the icon theme is changed, the image will be updated automatically.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property icon-name
  (of-object "GtkImage")
  (docs "The name of the icon in the icon theme. If the icon theme is changed, the image will be updated automatically.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property icon-set
  (of-object "GtkImage")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property icon-size
  (of-object "GtkImage")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixbuf
  (of-object "GtkImage")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixbuf-animation
  (of-object "GtkImage")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixel-size
  (of-object "GtkImage")
  (docs "The 'pixel-size' property can be used to specify a fixed size overriding the #GtkImage:icon-size property for images of type %GTK_IMAGE_ICON_NAME.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property resource
  (of-object "GtkImage")
  (docs "A path to a resource file to display.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property stock
  (of-object "GtkImage")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property storage-type
  (of-object "GtkImage")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property surface
  (of-object "GtkImage")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property use-fallback
  (of-object "GtkImage")
  (docs "Whether the icon displayed in the GtkImage will use standard icon names fallback. The value of this property is only relevant for images of type %GTK_IMAGE_ICON_NAME and %GTK_IMAGE_GICON.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property accel-group
  (of-object "GtkImageMenuItem")
  (docs "The Accel Group to use for stock accelerator keys")
  (readable #f)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property always-show-image
  (of-object "GtkImageMenuItem")
  (docs "If %TRUE, the menu item will always show the image, if available.  Use this property only if the menuitem would be useless or hard to use without the image.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property image
  (of-object "GtkImageMenuItem")
  (docs "Child widget to appear next to the menu text.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property use-stock
  (of-object "GtkImageMenuItem")
  (docs "If %TRUE, the label set in the menuitem is used as a stock id to select the stock item for the item.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property message-type
  (of-object "GtkInfoBar")
  (docs "The type of the message.  The type may be used to determine the appearance of the info bar.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-close-button
  (of-object "GtkInfoBar")
  (docs "Whether to include a standard close button.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property screen
  (of-object "GtkInvisible")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property angle
  (of-object "GtkLabel")
  (docs "The angle that the baseline of the label makes with the horizontal, in degrees, measured counterclockwise. An angle of 90 reads from from bottom to top, an angle of 270, from top to bottom. Ignored if the label is selectable.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property attributes
  (of-object "GtkLabel")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property cursor-position
  (of-object "GtkLabel")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property ellipsize
  (of-object "GtkLabel")
  (docs "The preferred place to ellipsize the string, if the label does not have enough room to display the entire string, specified as a #PangoEllipsizeMode.  Note that setting this property to a value other than %PANGO_ELLIPSIZE_NONE has the side-effect that the label requests only enough space to display the ellipsis '...'. In particular, this means that ellipsizing labels do not work well in notebook tabs, unless the #GtkNotebook tab-expand child property is set to %TRUE. Other ways to set a label's width are gtk_widget_set_size_request() and gtk_label_set_width_chars().")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property justify
  (of-object "GtkLabel")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property label
  (of-object "GtkLabel")
  (docs "The contents of the label.  If the string contains [Pango XML markup][PangoMarkupFormat], you will have to set the #GtkLabel:use-markup property to %TRUE in order for the label to display the markup attributes. See also gtk_label_set_markup() for a convenience function that sets both this property and the #GtkLabel:use-markup property at the same time.  If the string contains underlines acting as mnemonics, you will have to set the #GtkLabel:use-underline property to %TRUE in order for the label to display them.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property lines
  (of-object "GtkLabel")
  (docs "The number of lines to which an ellipsized, wrapping label should be limited. This property has no effect if the label is not wrapping or ellipsized. Set this property to -1 if you don't want to limit the number of lines.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property max-width-chars
  (of-object "GtkLabel")
  (docs "The desired maximum width of the label, in characters. If this property is set to -1, the width will be calculated automatically.  See the section on [text layout][label-text-layout] for details of how #GtkLabel:width-chars and #GtkLabel:max-width-chars determine the width of ellipsized and wrapped labels.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property mnemonic-keyval
  (of-object "GtkLabel")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property mnemonic-widget
  (of-object "GtkLabel")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pattern
  (of-object "GtkLabel")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property selectable
  (of-object "GtkLabel")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property selection-bound
  (of-object "GtkLabel")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property single-line-mode
  (of-object "GtkLabel")
  (docs "Whether the label is in single line mode. In single line mode, the height of the label does not depend on the actual text, it is always set to ascent + descent of the font. This can be an advantage in situations where resizing the label because of text changes would be distracting, e.g. in a statusbar.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property track-visited-links
  (of-object "GtkLabel")
  (docs "Set this property to %TRUE to make the label track which links have been visited. It will then apply the #GTK_STATE_FLAG_VISITED when rendering this link, in addition to #GTK_STATE_FLAG_LINK.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property use-markup
  (of-object "GtkLabel")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property use-underline
  (of-object "GtkLabel")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property width-chars
  (of-object "GtkLabel")
  (docs "The desired width of the label, in characters. If this property is set to -1, the width will be calculated automatically.  See the section on [text layout][label-text-layout] for details of how #GtkLabel:width-chars and #GtkLabel:max-width-chars determine the width of ellipsized and wrapped labels.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property wrap
  (of-object "GtkLabel")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property wrap-mode
  (of-object "GtkLabel")
  (docs "If line wrapping is on (see the #GtkLabel:wrap property) this controls how the line wrapping is done. The default is %PANGO_WRAP_WORD, which means wrap on word boundaries.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property xalign
  (of-object "GtkLabel")
  (docs "The xalign property determines the horizontal aligment of the label text inside the labels size allocation. Compare this to #GtkWidget:halign, which determines how the labels size allocation is positioned in the space available for the label.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property yalign
  (of-object "GtkLabel")
  (docs "The yalign property determines the vertical aligment of the label text inside the labels size allocation. Compare this to #GtkWidget:valign, which determines how the labels size allocation is positioned in the space available for the label.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property height
  (of-object "GtkLayout")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property width
  (of-object "GtkLayout")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property inverted
  (of-object "GtkLevelBar")
  (docs "Level bars normally grow from top to bottom or left to right. Inverted level bars grow in the opposite direction.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property max-value
  (of-object "GtkLevelBar")
  (docs "The #GtkLevelBar:max-value property determaxes the maximum value of the interval that can be displayed by the bar.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property min-value
  (of-object "GtkLevelBar")
  (docs "The #GtkLevelBar:min-value property determines the minimum value of the interval that can be displayed by the bar.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property mode
  (of-object "GtkLevelBar")
  (docs "The #GtkLevelBar:mode property determines the way #GtkLevelBar interprets the value properties to draw the level fill area. Specifically, when the value is #GTK_LEVEL_BAR_MODE_CONTINUOUS, #GtkLevelBar will draw a single block representing the current value in that area; when the value is #GTK_LEVEL_BAR_MODE_DISCRETE, the widget will draw a succession of separate blocks filling the draw area, with the number of blocks being equal to the units separating the integral roundings of #GtkLevelBar:min-value and #GtkLevelBar:max-value.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property value
  (of-object "GtkLevelBar")
  (docs "The #GtkLevelBar:value property determines the currently filled value of the level bar.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property uri
  (of-object "GtkLinkButton")
  (docs "The URI bound to this button.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property visited
  (of-object "GtkLinkButton")
  (docs "The 'visited' state of this button. A visited link is drawn in a different color.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property activate-on-single-click
  (of-object "GtkListBox")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property selection-mode
  (of-object "GtkListBox")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property activatable
  (of-object "GtkListBoxRow")
  (docs "The property determines whether the #GtkListBox::row-activated signal will be emitted for this row.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property selectable
  (of-object "GtkListBoxRow")
  (docs "The property determines whether this row can be selected.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property permission
  (of-object "GtkLockButton")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property text-lock
  (of-object "GtkLockButton")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property text-unlock
  (of-object "GtkLockButton")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tooltip-lock
  (of-object "GtkLockButton")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tooltip-not-authorized
  (of-object "GtkLockButton")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tooltip-unlock
  (of-object "GtkLockButton")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property accel-group
  (of-object "GtkMenu")
  (docs "The accel group holding accelerators for the menu.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property accel-path
  (of-object "GtkMenu")
  (docs "An accel path used to conveniently construct accel paths of child items.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property active
  (of-object "GtkMenu")
  (docs "The index of the currently selected menu item, or -1 if no menu item is selected.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property anchor-hints
  (of-object "GtkMenu")
  (docs "Positioning hints for aligning the menu relative to a rectangle.  These hints determine how the menu should be positioned in the case that the menu would fall off-screen if placed in its ideal position.  ![](popup-flip.png)  For example, %GDK_ANCHOR_FLIP_Y will replace %GDK_GRAVITY_NORTH_WEST with %GDK_GRAVITY_SOUTH_WEST and vice versa if the menu extends beyond the bottom edge of the monitor.  See gtk_menu_popup_at_rect (), gtk_menu_popup_at_widget (), gtk_menu_popup_at_pointer (), #GtkMenu:rect-anchor-dx, #GtkMenu:rect-anchor-dy, #GtkMenu:menu-type-hint, and #GtkMenu::popped-up.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property attach-widget
  (of-object "GtkMenu")
  (docs "The widget the menu is attached to. Setting this property attaches the menu without a #GtkMenuDetachFunc. If you need to use a detacher, use gtk_menu_attach_to_widget() directly.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property menu-type-hint
  (of-object "GtkMenu")
  (docs "The #GdkWindowTypeHint to use for the menu's #GdkWindow.  See gtk_menu_popup_at_rect (), gtk_menu_popup_at_widget (), gtk_menu_popup_at_pointer (), #GtkMenu:anchor-hints, #GtkMenu:rect-anchor-dx, #GtkMenu:rect-anchor-dy, and #GtkMenu::popped-up.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property monitor
  (of-object "GtkMenu")
  (docs "The monitor the menu will be popped up on.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property rect-anchor-dx
  (of-object "GtkMenu")
  (docs "Horizontal offset to apply to the menu, i.e. the rectangle or widget anchor.  See gtk_menu_popup_at_rect (), gtk_menu_popup_at_widget (), gtk_menu_popup_at_pointer (), #GtkMenu:anchor-hints, #GtkMenu:rect-anchor-dy, #GtkMenu:menu-type-hint, and #GtkMenu::popped-up.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property rect-anchor-dy
  (of-object "GtkMenu")
  (docs "Vertical offset to apply to the menu, i.e. the rectangle or widget anchor.  See gtk_menu_popup_at_rect (), gtk_menu_popup_at_widget (), gtk_menu_popup_at_pointer (), #GtkMenu:anchor-hints, #GtkMenu:rect-anchor-dx, #GtkMenu:menu-type-hint, and #GtkMenu::popped-up.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property reserve-toggle-size
  (of-object "GtkMenu")
  (docs "A boolean that indicates whether the menu reserves space for toggles and icons, regardless of their actual presence.  This property should only be changed from its default value for special-purposes such as tabular menus. Regular menus that are connected to a menu bar or context menus should reserve toggle space for consistency.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tearoff-state
  (of-object "GtkMenu")
  (docs "A boolean that indicates whether the menu is torn-off.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property tearoff-title
  (of-object "GtkMenu")
  (docs "A title that may be displayed by the window manager when this menu is torn-off.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property child-pack-direction
  (of-object "GtkMenuBar")
  (docs "The child pack direction of the menubar. It determines how the widgets contained in child menuitems are arranged.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pack-direction
  (of-object "GtkMenuBar")
  (docs "The pack direction of the menubar. It determines how menuitems are arranged in the menubar.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property align-widget
  (of-object "GtkMenuButton")
  (docs "The #GtkWidget to use to align the menu with.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property direction
  (of-object "GtkMenuButton")
  (docs "The #GtkArrowType representing the direction in which the menu or popover will be popped out.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property menu-model
  (of-object "GtkMenuButton")
  (docs "The #GMenuModel from which the popup will be created. Depending on the #GtkMenuButton:use-popover property, that may be a menu or a popover.  See gtk_menu_button_set_menu_model() for the interaction with the #GtkMenuButton:popup property.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property popover
  (of-object "GtkMenuButton")
  (docs "The #GtkPopover that will be popped up when the button is clicked.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property popup
  (of-object "GtkMenuButton")
  (docs "The #GtkMenu that will be popped up when the button is clicked.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property use-popover
  (of-object "GtkMenuButton")
  (docs "Whether to construct a #GtkPopover from the menu model, or a #GtkMenu.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property accel-path
  (of-object "GtkMenuItem")
  (docs "Sets the accelerator path of the menu item, through which runtime changes of the menu item's accelerator caused by the user can be identified and saved to persistant storage.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property label
  (of-object "GtkMenuItem")
  (docs "The text for the child label.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property right-justified
  (of-object "GtkMenuItem")
  (docs "Sets whether the menu item appears justified at the right side of a menu bar.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property submenu
  (of-object "GtkMenuItem")
  (docs "The submenu attached to the menu item, or %NULL if it has none.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property use-underline
  (of-object "GtkMenuItem")
  (docs "%TRUE if underlines in the text indicate mnemonics.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property take-focus
  (of-object "GtkMenuShell")
  (docs "A boolean that determines whether the menu and its submenus grab the keyboard focus. See gtk_menu_shell_set_take_focus() and gtk_menu_shell_get_take_focus().")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property menu
  (of-object "GtkMenuToolButton")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property buttons
  (of-object "GtkMessageDialog")
  (readable #f)
  (writable #t)
  (construct-only #t)
)

(define-property image
  (of-object "GtkMessageDialog")
  (docs "The image for this dialog.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property message-area
  (of-object "GtkMessageDialog")
  (docs "The #GtkBox that corresponds to the message area of this dialog.  See gtk_message_dialog_get_message_area() for a detailed description of this area.")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property message-type
  (of-object "GtkMessageDialog")
  (docs "The type of the message.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property secondary-text
  (of-object "GtkMessageDialog")
  (docs "The secondary text of the message dialog.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property secondary-use-markup
  (of-object "GtkMessageDialog")
  (docs "%TRUE if the secondary text of the dialog includes Pango markup. See pango_parse_markup().")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property text
  (of-object "GtkMessageDialog")
  (docs "The primary text of the message dialog. If the dialog has a secondary text, this will appear as the title.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property use-markup
  (of-object "GtkMessageDialog")
  (docs "%TRUE if the primary text of the dialog includes Pango markup. See pango_parse_markup().")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property xalign
  (of-object "GtkMisc")
  (docs "The horizontal alignment. A value of 0.0 means left alignment (or right on RTL locales); a value of 1.0 means right alignment (or left on RTL locales).")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property xpad
  (of-object "GtkMisc")
  (docs "The amount of space to add on the left and right of the widget, in pixels.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property yalign
  (of-object "GtkMisc")
  (docs "The vertical alignment. A value of 0.0 means top alignment; a value of 1.0 means bottom alignment.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property ypad
  (of-object "GtkMisc")
  (docs "The amount of space to add on the top and bottom of the widget, in pixels.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property active
  (of-object "GtkModelButton")
  (docs "The state of the button. This is reflecting the state of the associated #GAction.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property centered
  (of-object "GtkModelButton")
  (docs "Wether to render the button contents centered instead of left-aligned. This property should be set for title-like items.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property icon
  (of-object "GtkModelButton")
  (docs "A #GIcon that will be used if iconic appearance for the button is desired.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property iconic
  (of-object "GtkModelButton")
  (docs "If this property is set, the button will show an icon if one is set. If no icon is set, the text will be used. This is typically used for horizontal sections of linked buttons.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property inverted
  (of-object "GtkModelButton")
  (docs "Whether to show the submenu indicator at the opposite side than normal. This property should be set for model buttons that 'go back' to a parent menu.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property menu-name
  (of-object "GtkModelButton")
  (docs "The name of a submenu to open when the button is activated. If this is set, the button should not have an action associated with it.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property role
  (of-object "GtkModelButton")
  (docs "Specifies whether the button is a plain, check or radio button. When #GtkActionable:action-name is set, the role will be determined from the action and does not have to be set explicitly.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property text
  (of-object "GtkModelButton")
  (docs "The label for the button.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property is-showing
  (of-object "GtkMountOperation")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property parent
  (of-object "GtkMountOperation")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property screen
  (of-object "GtkMountOperation")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property modal
  (of-object "GtkNativeDialog")
  (docs "Whether the window should be modal with respect to its transient parent.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property title
  (of-object "GtkNativeDialog")
  (docs "The title of the dialog window")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property transient-for
  (of-object "GtkNativeDialog")
  (docs "The transient parent of the dialog, or %NULL for none.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property visible
  (of-object "GtkNativeDialog")
  (docs "Whether the window is currenlty visible.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property enable-popup
  (of-object "GtkNotebook")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property group-name
  (of-object "GtkNotebook")
  (docs "Group name for tab drag and drop.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property page
  (of-object "GtkNotebook")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property scrollable
  (of-object "GtkNotebook")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-border
  (of-object "GtkNotebook")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-tabs
  (of-object "GtkNotebook")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tab-pos
  (of-object "GtkNotebook")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property background-icon
  (of-object "GtkNumerableIcon")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property background-icon-name
  (of-object "GtkNumerableIcon")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property count
  (of-object "GtkNumerableIcon")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property label
  (of-object "GtkNumerableIcon")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property style-context
  (of-object "GtkNumerableIcon")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property action-group
  (of-object "GtkPadController")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property pad
  (of-object "GtkPadController")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property max-position
  (of-object "GtkPaned")
  (docs "The largest possible value for the position property. This property is derived from the size and shrinkability of the widget's children.")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property min-position
  (of-object "GtkPaned")
  (docs "The smallest possible value for the position property. This property is derived from the size and shrinkability of the widget's children.")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property position
  (of-object "GtkPaned")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property position-set
  (of-object "GtkPaned")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property wide-handle
  (of-object "GtkPaned")
  (docs "Setting this property to %TRUE indicates that the paned needs to provide stronger visual separation (e.g. because it separates between two notebooks, whose tab rows would otherwise merge visually).")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property local-only
  (of-object "GtkPlacesSidebar")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property location
  (of-object "GtkPlacesSidebar")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property open-flags
  (of-object "GtkPlacesSidebar")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property populate-all
  (of-object "GtkPlacesSidebar")
  (docs "If :populate-all is %TRUE, the #GtkPlacesSidebar::populate-popup signal is also emitted for popovers.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-connect-to-server
  (of-object "GtkPlacesSidebar")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-desktop
  (of-object "GtkPlacesSidebar")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-enter-location
  (of-object "GtkPlacesSidebar")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-other-locations
  (of-object "GtkPlacesSidebar")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-recent
  (of-object "GtkPlacesSidebar")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-trash
  (of-object "GtkPlacesSidebar")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property embedded
  (of-object "GtkPlug")
  (docs "%TRUE if the plug is embedded in a socket.")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property socket-window
  (of-object "GtkPlug")
  (docs "The window of the socket the plug is embedded in.")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property constrain-to
  (of-object "GtkPopover")
  (docs "Sets a constraint for the popover position.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property modal
  (of-object "GtkPopover")
  (docs "Sets whether the popover is modal (so other elements in the window do not receive input while the popover is visible).")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pointing-to
  (of-object "GtkPopover")
  (docs "Marks a specific rectangle to be pointed.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property position
  (of-object "GtkPopover")
  (docs "Sets the preferred position of the popover.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property relative-to
  (of-object "GtkPopover")
  (docs "Sets the attached widget.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property transitions-enabled
  (of-object "GtkPopover")
  (docs "Whether show/hide transitions are enabled for this popover.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property visible-submenu
  (of-object "GtkPopoverMenu")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property page-setup
  (of-object "GtkPrintJob")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property printer
  (of-object "GtkPrintJob")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property settings
  (of-object "GtkPrintJob")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property title
  (of-object "GtkPrintJob")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property track-print-status
  (of-object "GtkPrintJob")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property allow-async
  (of-object "GtkPrintOperation")
  (docs "Determines whether the print operation may run asynchronously or not.  Some systems don't support asynchronous printing, but those that do will return %GTK_PRINT_OPERATION_RESULT_IN_PROGRESS as the status, and emit the #GtkPrintOperation::done signal when the operation is actually done.  The Windows port does not support asynchronous operation at all (this is unlikely to change). On other platforms, all actions except for %GTK_PRINT_OPERATION_ACTION_EXPORT support asynchronous operation.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property current-page
  (of-object "GtkPrintOperation")
  (docs "The current page in the document.  If this is set before gtk_print_operation_run(), the user will be able to select to print only the current page.  Note that this only makes sense for pre-paginated documents.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property custom-tab-label
  (of-object "GtkPrintOperation")
  (docs "Used as the label of the tab containing custom widgets. Note that this property may be ignored on some platforms.  If this is %NULL, GTK+ uses a default label.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property default-page-setup
  (of-object "GtkPrintOperation")
  (docs "The #GtkPageSetup used by default.  This page setup will be used by gtk_print_operation_run(), but it can be overridden on a per-page basis by connecting to the #GtkPrintOperation::request-page-setup signal.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property embed-page-setup
  (of-object "GtkPrintOperation")
  (docs "If %TRUE, page size combo box and orientation combo box are embedded into page setup page.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property export-filename
  (of-object "GtkPrintOperation")
  (docs "The name of a file to generate instead of showing the print dialog. Currently, PDF is the only supported format.  The intended use of this property is for implementing “Export to PDF” actions.  “Print to PDF” support is independent of this and is done by letting the user pick the “Print to PDF” item from the list of printers in the print dialog.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-selection
  (of-object "GtkPrintOperation")
  (docs "Determines whether there is a selection in your application. This can allow your application to print the selection. This is typically used to make a 'Selection' button sensitive.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property job-name
  (of-object "GtkPrintOperation")
  (docs "A string used to identify the job (e.g. in monitoring applications like eggcups).  If you don't set a job name, GTK+ picks a default one by numbering successive print jobs.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property n-pages
  (of-object "GtkPrintOperation")
  (docs "The number of pages in the document.  This must be set to a positive number before the rendering starts. It may be set in a #GtkPrintOperation::begin-print signal hander.  Note that the page numbers passed to the #GtkPrintOperation::request-page-setup and #GtkPrintOperation::draw-page signals are 0-based, i.e. if the user chooses to print all pages, the last ::draw-page signal will be for page @n_pages - 1.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property n-pages-to-print
  (of-object "GtkPrintOperation")
  (docs "The number of pages that will be printed.  Note that this value is set during print preparation phase (%GTK_PRINT_STATUS_PREPARING), so this value should never be get before the data generation phase (%GTK_PRINT_STATUS_GENERATING_DATA). You can connect to the #GtkPrintOperation::status-changed signal and call gtk_print_operation_get_n_pages_to_print() when print status is %GTK_PRINT_STATUS_GENERATING_DATA. This is typically used to track the progress of print operation.")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property print-settings
  (of-object "GtkPrintOperation")
  (docs "The #GtkPrintSettings used for initializing the dialog.  Setting this property is typically used to re-establish print settings from a previous print operation, see gtk_print_operation_run().")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-progress
  (of-object "GtkPrintOperation")
  (docs "Determines whether to show a progress dialog during the print operation.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property status
  (of-object "GtkPrintOperation")
  (docs "The status of the print operation.")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property status-string
  (of-object "GtkPrintOperation")
  (docs "A string representation of the status of the print operation. The string is translated and suitable for displaying the print status e.g. in a #GtkStatusbar.  See the #GtkPrintOperation:status property for a status value that is suitable for programmatic use.")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property support-selection
  (of-object "GtkPrintOperation")
  (docs "If %TRUE, the print operation will support print of selection. This allows the print dialog to show a 'Selection' button.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property track-print-status
  (of-object "GtkPrintOperation")
  (docs "If %TRUE, the print operation will try to continue report on the status of the print job in the printer queues and printer. This can allow your application to show things like “out of paper” issues, and when the print job actually reaches the printer. However, this is often implemented using polling, and should not be enabled unless needed.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property unit
  (of-object "GtkPrintOperation")
  (docs "The transformation for the cairo context obtained from #GtkPrintContext is set up in such a way that distances are measured in units of @unit.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property use-full-page
  (of-object "GtkPrintOperation")
  (docs "If %TRUE, the transformation for the cairo context obtained from #GtkPrintContext puts the origin at the top left corner of the page (which may not be the top left corner of the sheet, depending on page orientation and the number of pages per sheet). Otherwise, the origin is at the top left corner of the imageable area (i.e. inside the margins).")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property current-page
  (of-object "GtkPrintUnixDialog")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property embed-page-setup
  (of-object "GtkPrintUnixDialog")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-selection
  (of-object "GtkPrintUnixDialog")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property manual-capabilities
  (of-object "GtkPrintUnixDialog")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property page-setup
  (of-object "GtkPrintUnixDialog")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property print-settings
  (of-object "GtkPrintUnixDialog")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property selected-printer
  (of-object "GtkPrintUnixDialog")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property support-selection
  (of-object "GtkPrintUnixDialog")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property accepting-jobs
  (of-object "GtkPrinter")
  (docs "This property is %TRUE if the printer is accepting jobs.")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property accepts-pdf
  (of-object "GtkPrinter")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property accepts-ps
  (of-object "GtkPrinter")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property backend
  (of-object "GtkPrinter")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property icon-name
  (of-object "GtkPrinter")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property is-virtual
  (of-object "GtkPrinter")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property job-count
  (of-object "GtkPrinter")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property location
  (of-object "GtkPrinter")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property name
  (of-object "GtkPrinter")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property paused
  (of-object "GtkPrinter")
  (docs "This property is %TRUE if this printer is paused. A paused printer still accepts jobs, but it does not print them.")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property state-message
  (of-object "GtkPrinter")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property ellipsize
  (of-object "GtkProgressBar")
  (docs "The preferred place to ellipsize the string, if the progress bar does not have enough room to display the entire string, specified as a #PangoEllipsizeMode.  Note that setting this property to a value other than %PANGO_ELLIPSIZE_NONE has the side-effect that the progress bar requests only enough space to display the ellipsis ('...'). Another means to set a progress bar's width is gtk_widget_set_size_request().")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property fraction
  (of-object "GtkProgressBar")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property inverted
  (of-object "GtkProgressBar")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pulse-step
  (of-object "GtkProgressBar")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-text
  (of-object "GtkProgressBar")
  (docs "Sets whether the progress bar will show a text in addition to the bar itself. The shown text is either the value of the #GtkProgressBar:text property or, if that is %NULL, the #GtkProgressBar:fraction value, as a percentage.  To make a progress bar that is styled and sized suitably for showing text (even if the actual text is blank), set #GtkProgressBar:show-text to %TRUE and #GtkProgressBar:text to the empty string (not %NULL).")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property text
  (of-object "GtkProgressBar")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property current-value
  (of-object "GtkRadioAction")
  (docs "The value property of the currently active member of the group to which this action belongs.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property group
  (of-object "GtkRadioAction")
  (docs "Sets a new group for a radio action.")
  (readable #f)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property value
  (of-object "GtkRadioAction")
  (docs "The value is an arbitrary integer which can be used as a convenient way to determine which action in the group is currently active in an ::activate or ::changed signal handler. See gtk_radio_action_get_current_value() and #GtkRadioActionEntry for convenient ways to get and set this property.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property group
  (of-object "GtkRadioButton")
  (docs "Sets a new group for a radio button.")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property group
  (of-object "GtkRadioMenuItem")
  (docs "The radio menu item whose group this widget belongs to.")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property group
  (of-object "GtkRadioToolButton")
  (docs "Sets a new group for a radio tool button.")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property adjustment
  (of-object "GtkRange")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property fill-level
  (of-object "GtkRange")
  (docs "The fill level (e.g. prebuffering of a network stream). See gtk_range_set_fill_level().")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property inverted
  (of-object "GtkRange")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property lower-stepper-sensitivity
  (of-object "GtkRange")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property restrict-to-fill-level
  (of-object "GtkRange")
  (docs "The restrict-to-fill-level property controls whether slider movement is restricted to an upper boundary set by the fill level. See gtk_range_set_restrict_to_fill_level().")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property round-digits
  (of-object "GtkRange")
  (docs "The number of digits to round the value to when it changes, or -1. See #GtkRange::change-value.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-fill-level
  (of-object "GtkRange")
  (docs "The show-fill-level property controls whether fill level indicator graphics are displayed on the trough. See gtk_range_set_show_fill_level().")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property upper-stepper-sensitivity
  (of-object "GtkRange")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-numbers
  (of-object "GtkRecentAction")
  (docs "Whether the items should be displayed with a number.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property show-numbers
  (of-object "GtkRecentChooserMenu")
  (docs "Whether the first ten items in the menu should be prepended by a number acting as a unique mnemonic.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property filename
  (of-object "GtkRecentManager")
  (docs "The full path to the file to be used to store and read the recently used resources list")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property size
  (of-object "GtkRecentManager")
  (docs "The size of the recently used resources list.")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property renderer
  (of-object "GtkRendererCellAccessible")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property child-revealed
  (of-object "GtkRevealer")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property reveal-child
  (of-object "GtkRevealer")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property transition-duration
  (of-object "GtkRevealer")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property transition-type
  (of-object "GtkRevealer")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property digits
  (of-object "GtkScale")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property draw-value
  (of-object "GtkScale")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-origin
  (of-object "GtkScale")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property value-pos
  (of-object "GtkScale")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property adjustment
  (of-object "GtkScaleButton")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property icons
  (of-object "GtkScaleButton")
  (docs "The names of the icons to be used by the scale button. The first item in the array will be used in the button when the current value is the lowest value, the second item for the highest value. All the subsequent icons will be used for all the other values, spread evenly over the range of values.  If there's only one icon name in the @icons array, it will be used for all the values. If only two icon names are in the @icons array, the first one will be used for the bottom 50% of the scale, and the second one for the top 50%.  It is recommended to use at least 3 icons so that the #GtkScaleButton reflects the current value of the scale better for the users.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property size
  (of-object "GtkScaleButton")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property value
  (of-object "GtkScaleButton")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property hadjustment
  (of-object "GtkScrolledWindow")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property hscrollbar-policy
  (of-object "GtkScrolledWindow")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property kinetic-scrolling
  (of-object "GtkScrolledWindow")
  (docs "Whether kinetic scrolling is enabled or not. Kinetic scrolling only applies to devices with source %GDK_SOURCE_TOUCHSCREEN.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property max-content-height
  (of-object "GtkScrolledWindow")
  (docs "The maximum content height of @scrolled_window, or -1 if not set.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property max-content-width
  (of-object "GtkScrolledWindow")
  (docs "The maximum content width of @scrolled_window, or -1 if not set.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property min-content-height
  (of-object "GtkScrolledWindow")
  (docs "The minimum content height of @scrolled_window, or -1 if not set.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property min-content-width
  (of-object "GtkScrolledWindow")
  (docs "The minimum content width of @scrolled_window, or -1 if not set.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property overlay-scrolling
  (of-object "GtkScrolledWindow")
  (docs "Whether overlay scrolling is enabled or not. If it is, the scrollbars are only added as traditional widgets when a mouse is present. Otherwise, they are overlayed on top of the content, as narrow indicators.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property propagate-natural-height
  (of-object "GtkScrolledWindow")
  (docs "Whether the natural height of the child should be calculated and propagated through the scrolled windows requested natural height.  This is useful in cases where an attempt should be made to allocate exactly enough space for the natural size of the child.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property propagate-natural-width
  (of-object "GtkScrolledWindow")
  (docs "Whether the natural width of the child should be calculated and propagated through the scrolled windows requested natural width.  This is useful in cases where an attempt should be made to allocate exactly enough space for the natural size of the child.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property shadow-type
  (of-object "GtkScrolledWindow")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property vadjustment
  (of-object "GtkScrolledWindow")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property vscrollbar-policy
  (of-object "GtkScrolledWindow")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property window-placement
  (of-object "GtkScrolledWindow")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property window-placement-set
  (of-object "GtkScrolledWindow")
  (docs "Whether 'window-placement' should be used to determine the location of the contents with respect to the scrollbars.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property search-mode-enabled
  (of-object "GtkSearchBar")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-close-button
  (of-object "GtkSearchBar")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property draw
  (of-object "GtkSeparatorToolItem")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property color-hash
  (of-object "GtkSettings")
  (docs "Holds a hash table representation of the #GtkSettings:gtk-color-scheme setting, mapping color names to #GdkColors.")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (deprecated #t)
)

(define-property gtk-alternative-button-order
  (of-object "GtkSettings")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-alternative-sort-arrows
  (of-object "GtkSettings")
  (docs "Controls the direction of the sort indicators in sorted list and tree views. By default an arrow pointing down means the column is sorted in ascending order. When set to %TRUE, this order will be inverted.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-application-prefer-dark-theme
  (of-object "GtkSettings")
  (docs "Whether the application prefers to use a dark theme. If a GTK+ theme includes a dark variant, it will be used instead of the configured theme.  Some applications benefit from minimizing the amount of light pollution that interferes with the content. Good candidates for dark themes are photo and video editors that make the actual content get all the attention and minimize the distraction of the chrome.  Dark themes should not be used for documents, where large spaces are white/light and the dark chrome creates too much contrast (web browser, text editor...).")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-auto-mnemonics
  (of-object "GtkSettings")
  (docs "Whether mnemonics should be automatically shown and hidden when the user presses the mnemonic activator.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gtk-button-images
  (of-object "GtkSettings")
  (docs "Whether images should be shown on buttons")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gtk-can-change-accels
  (of-object "GtkSettings")
  (docs "Whether menu accelerators can be changed by pressing a key over the menu item.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gtk-color-palette
  (of-object "GtkSettings")
  (docs "Palette to use in the deprecated color selector.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gtk-color-scheme
  (of-object "GtkSettings")
  (docs "A palette of named colors for use in themes. The format of the string is |[ name1: color1 name2: color2 ... ]| Color names must be acceptable as identifiers in the [gtkrc][gtk3-Resource-Files] syntax, and color specifications must be in the format accepted by gdk_color_parse().  Note that due to the way the color tables from different sources are merged, color specifications will be converted to hexadecimal form when getting this property.  Starting with GTK+ 2.12, the entries can alternatively be separated by ';' instead of newlines: |[ name1: color1; name2: color2; ... ]|")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gtk-cursor-blink
  (of-object "GtkSettings")
  (docs "Whether the cursor should blink.  Also see the #GtkSettings:gtk-cursor-blink-timeout setting, which allows more flexible control over cursor blinking.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-cursor-blink-time
  (of-object "GtkSettings")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-cursor-blink-timeout
  (of-object "GtkSettings")
  (docs "Time after which the cursor stops blinking, in seconds. The timer is reset after each user interaction.  Setting this to zero has the same effect as setting #GtkSettings:gtk-cursor-blink to %FALSE.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-cursor-theme-name
  (of-object "GtkSettings")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-cursor-theme-size
  (of-object "GtkSettings")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-decoration-layout
  (of-object "GtkSettings")
  (docs "This setting determines which buttons should be put in the titlebar of client-side decorated windows, and whether they should be placed at the left of right.  The format of the string is button names, separated by commas. A colon separates the buttons that should appear on the left from those on the right. Recognized button names are minimize, maximize, close, icon (the window icon) and menu (a menu button for the fallback app menu).  For example, 'menu:minimize,maximize,close' specifies a menu on the left, and minimize, maximize and close buttons on the right.  Note that buttons will only be shown when they are meaningful. E.g. a menu button only appears when the desktop shell does not show the app menu, and a close button only appears on a window that can be closed.  Also note that the setting can be overridden with the #GtkHeaderBar:decoration-layout property.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-dialogs-use-header
  (of-object "GtkSettings")
  (docs "Whether builtin GTK+ dialogs such as the file chooser, the color chooser or the font chooser will use a header bar at the top to show action widgets, or an action area at the bottom.  This setting does not affect custom dialogs using GtkDialog directly, or message dialogs.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-dnd-drag-threshold
  (of-object "GtkSettings")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-double-click-distance
  (of-object "GtkSettings")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-double-click-time
  (of-object "GtkSettings")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-enable-accels
  (of-object "GtkSettings")
  (docs "Whether menu items should have visible accelerators which can be activated.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-enable-animations
  (of-object "GtkSettings")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-enable-event-sounds
  (of-object "GtkSettings")
  (docs "Whether to play any event sounds at all.  See the [Sound Theme Specifications](http://www.freedesktop.org/wiki/Specifications/sound-theme-spec) for more information on event sounds and sound themes.  GTK+ itself does not support event sounds, you have to use a loadable module like the one that comes with libcanberra.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-enable-input-feedback-sounds
  (of-object "GtkSettings")
  (docs "Whether to play event sounds as feedback to user input.  See the [Sound Theme Specifications](http://www.freedesktop.org/wiki/Specifications/sound-theme-spec) for more information on event sounds and sound themes.  GTK+ itself does not support event sounds, you have to use a loadable module like the one that comes with libcanberra.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-enable-mnemonics
  (of-object "GtkSettings")
  (docs "Whether labels and menu items should have visible mnemonics which can be activated.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gtk-enable-primary-paste
  (of-object "GtkSettings")
  (docs "Whether a middle click on a mouse should paste the 'PRIMARY' clipboard content at the cursor location.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-enable-tooltips
  (of-object "GtkSettings")
  (docs "Whether tooltips should be shown on widgets.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gtk-entry-password-hint-timeout
  (of-object "GtkSettings")
  (docs "How long to show the last input character in hidden entries. This value is in milliseconds. 0 disables showing the last char. 600 is a good value for enabling it.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-entry-select-on-focus
  (of-object "GtkSettings")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-error-bell
  (of-object "GtkSettings")
  (docs "When %TRUE, keyboard navigation and other input-related errors will cause a beep. Since the error bell is implemented using gdk_window_beep(), the windowing system may offer ways to configure the error bell in many ways, such as flashing the window or similar visual effects.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-fallback-icon-theme
  (of-object "GtkSettings")
  (docs "Name of a icon theme to fall back to.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gtk-file-chooser-backend
  (of-object "GtkSettings")
  (docs "Name of the GtkFileChooser backend to use by default.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gtk-font-name
  (of-object "GtkSettings")
  (docs "The default font to use. GTK+ uses the family name and size from this string.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-fontconfig-timestamp
  (of-object "GtkSettings")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-icon-sizes
  (of-object "GtkSettings")
  (docs "A list of icon sizes. The list is separated by colons, and item has the form:  `size-name` = `width` , `height`  E.g. 'gtk-menu=16,16:gtk-button=20,20:gtk-dialog=48,48'. GTK+ itself use the following named icon sizes: gtk-menu, gtk-button, gtk-small-toolbar, gtk-large-toolbar, gtk-dnd, gtk-dialog. Applications can register their own named icon sizes with gtk_icon_size_register().")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gtk-icon-theme-name
  (of-object "GtkSettings")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-im-module
  (of-object "GtkSettings")
  (docs "Which IM (input method) module should be used by default. This is the input method that will be used if the user has not explicitly chosen another input method from the IM context menu. This also can be a colon-separated list of input methods, which GTK+ will try in turn until it finds one available on the system.  See #GtkIMContext.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-im-preedit-style
  (of-object "GtkSettings")
  (docs "How to draw the input method preedit string.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gtk-im-status-style
  (of-object "GtkSettings")
  (docs "How to draw the input method statusbar.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gtk-key-theme-name
  (of-object "GtkSettings")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-keynav-cursor-only
  (of-object "GtkSettings")
  (docs "When %TRUE, keyboard navigation should be able to reach all widgets by using the cursor keys only. Tab, Shift etc. keys can't be expected to be present on the used input device.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gtk-keynav-use-caret
  (of-object "GtkSettings")
  (docs "Whether GTK+ should make sure that text can be navigated with a caret, even if it is not editable. This is useful when using a screen reader.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-keynav-wrap-around
  (of-object "GtkSettings")
  (docs "When %TRUE, some widgets will wrap around when doing keyboard navigation, such as menus, menubars and notebooks.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gtk-label-select-on-focus
  (of-object "GtkSettings")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-long-press-time
  (of-object "GtkSettings")
  (docs "The time for a button or touch press to be considered a 'long press'.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-menu-bar-accel
  (of-object "GtkSettings")
  (docs "Keybinding to activate the menu bar.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gtk-menu-bar-popup-delay
  (of-object "GtkSettings")
  (docs "Delay before the submenus of a menu bar appear.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gtk-menu-images
  (of-object "GtkSettings")
  (docs "Whether images should be shown in menu items")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gtk-menu-popdown-delay
  (of-object "GtkSettings")
  (docs "The time before hiding a submenu when the pointer is moving towards the submenu.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gtk-menu-popup-delay
  (of-object "GtkSettings")
  (docs "Minimum time the pointer must stay over a menu item before the submenu appear.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gtk-modules
  (of-object "GtkSettings")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-primary-button-warps-slider
  (of-object "GtkSettings")
  (docs "Whether a click in a #GtkRange trough should scroll to the click position or scroll by a single page in the respective direction.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-print-backends
  (of-object "GtkSettings")
  (docs "A comma-separated list of print backends to use in the print dialog. Available print backends depend on the GTK+ installation, and may include 'file', 'cups', 'lpr' or 'papi'.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-print-preview-command
  (of-object "GtkSettings")
  (docs "A command to run for displaying the print preview. The command should contain a `%f` placeholder, which will get replaced by the path to the pdf file. The command may also contain a `%s` placeholder, which will get replaced by the path to a file containing the print settings in the format produced by gtk_print_settings_to_file().  The preview application is responsible for removing the pdf file and the print settings file when it is done.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-recent-files-enabled
  (of-object "GtkSettings")
  (docs "Whether GTK+ should keep track of items inside the recently used resources list. If set to %FALSE, the list will always be empty.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-recent-files-limit
  (of-object "GtkSettings")
  (docs "The number of recently used files that should be displayed by default by #GtkRecentChooser implementations and by the #GtkFileChooser. A value of -1 means every recently used file stored.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gtk-recent-files-max-age
  (of-object "GtkSettings")
  (docs "The maximum age, in days, of the items inside the recently used resources list. Items older than this setting will be excised from the list. If set to 0, the list will always be empty; if set to -1, no item will be removed.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-scrolled-window-placement
  (of-object "GtkSettings")
  (docs "Where the contents of scrolled windows are located with respect to the scrollbars, if not overridden by the scrolled window's own placement.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gtk-shell-shows-app-menu
  (of-object "GtkSettings")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-shell-shows-desktop
  (of-object "GtkSettings")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-shell-shows-menubar
  (of-object "GtkSettings")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-show-input-method-menu
  (of-object "GtkSettings")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gtk-show-unicode-menu
  (of-object "GtkSettings")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gtk-sound-theme-name
  (of-object "GtkSettings")
  (docs "The XDG sound theme to use for event sounds.  See the [Sound Theme Specifications](http://www.freedesktop.org/wiki/Specifications/sound-theme-spec) for more information on event sounds and sound themes.  GTK+ itself does not support event sounds, you have to use a loadable module like the one that comes with libcanberra.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-split-cursor
  (of-object "GtkSettings")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-theme-name
  (of-object "GtkSettings")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-timeout-expand
  (of-object "GtkSettings")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gtk-timeout-initial
  (of-object "GtkSettings")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gtk-timeout-repeat
  (of-object "GtkSettings")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gtk-titlebar-double-click
  (of-object "GtkSettings")
  (docs "This setting determines the action to take when a double-click occurs on the titlebar of client-side decorated windows.  Recognized actions are minimize, toggle-maximize, menu, lower or none.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-titlebar-middle-click
  (of-object "GtkSettings")
  (docs "This setting determines the action to take when a middle-click occurs on the titlebar of client-side decorated windows.  Recognized actions are minimize, toggle-maximize, menu, lower or none.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-titlebar-right-click
  (of-object "GtkSettings")
  (docs "This setting determines the action to take when a right-click occurs on the titlebar of client-side decorated windows.  Recognized actions are minimize, toggle-maximize, menu, lower or none.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-toolbar-icon-size
  (of-object "GtkSettings")
  (docs "The size of icons in default toolbars.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gtk-toolbar-style
  (of-object "GtkSettings")
  (docs "The size of icons in default toolbars.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gtk-tooltip-browse-mode-timeout
  (of-object "GtkSettings")
  (docs "Amount of time, in milliseconds, after which the browse mode will be disabled.  See #GtkSettings:gtk-tooltip-browse-timeout for more information about browse mode.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gtk-tooltip-browse-timeout
  (of-object "GtkSettings")
  (docs "Controls the time after which tooltips will appear when browse mode is enabled, in milliseconds.  Browse mode is enabled when the mouse pointer moves off an object where a tooltip was currently being displayed. If the mouse pointer hits another object before the browse mode timeout expires (see #GtkSettings:gtk-tooltip-browse-mode-timeout), it will take the amount of milliseconds specified by this setting to popup the tooltip for the new object.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gtk-tooltip-timeout
  (of-object "GtkSettings")
  (docs "Time, in milliseconds, after which a tooltip could appear if the cursor is hovering on top of a widget.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gtk-touchscreen-mode
  (of-object "GtkSettings")
  (docs "When %TRUE, there are no motion notify events delivered on this screen, and widgets can't use the pointer hovering them for any essential functionality.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gtk-visible-focus
  (of-object "GtkSettings")
  (docs "Whether 'focus rectangles' should be always visible, never visible, or hidden until the user starts to use the keyboard.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property gtk-xft-antialias
  (of-object "GtkSettings")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-xft-dpi
  (of-object "GtkSettings")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-xft-hinting
  (of-object "GtkSettings")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-xft-hintstyle
  (of-object "GtkSettings")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gtk-xft-rgba
  (of-object "GtkSettings")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property accelerator
  (of-object "GtkShortcutLabel")
  (docs "The accelerator that @self displays. See #GtkShortcutsShortcut:accelerator for the accepted syntax.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property disabled-text
  (of-object "GtkShortcutLabel")
  (docs "The text that is displayed when no accelerator is set.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property accel-size-group
  (of-object "GtkShortcutsGroup")
  (docs "The size group for the accelerator portion of shortcuts in this group.  This is used internally by GTK+, and must not be modified by applications.")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property height
  (of-object "GtkShortcutsGroup")
  (docs "A rough measure for the number of lines in this group.  This is used internally by GTK+, and is not useful for applications.")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property title
  (of-object "GtkShortcutsGroup")
  (docs "The title for this group of shortcuts.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property title-size-group
  (of-object "GtkShortcutsGroup")
  (docs "The size group for the textual portion of shortcuts in this group.  This is used internally by GTK+, and must not be modified by applications.")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property view
  (of-object "GtkShortcutsGroup")
  (docs "An optional view that the shortcuts in this group are relevant for. The group will be hidden if the #GtkShortcutsWindow:view-name property does not match the view of this group.  Set this to %NULL to make the group always visible.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property max-height
  (of-object "GtkShortcutsSection")
  (docs "The maximum number of lines to allow per column. This property can be used to influence how the groups in this section are distributed across pages and columns. The default value of 15 should work in for most cases.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property section-name
  (of-object "GtkShortcutsSection")
  (docs "A unique name to identify this section among the sections added to the GtkShortcutsWindow. Setting the #GtkShortcutsWindow:section-name property to this string will make this section shown in the GtkShortcutsWindow.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property title
  (of-object "GtkShortcutsSection")
  (docs "The string to show in the section selector of the GtkShortcutsWindow for this section. If there is only one section, you don't need to set a title, since the section selector will not be shown in this case.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property view-name
  (of-object "GtkShortcutsSection")
  (docs "A view name to filter the groups in this section by. See #GtkShortcutsGroup:view.  Applications are expected to use the #GtkShortcutsWindow:view-name property for this purpose.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property accel-size-group
  (of-object "GtkShortcutsShortcut")
  (docs "The size group for the accelerator portion of this shortcut.  This is used internally by GTK+, and must not be modified by applications.")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property accelerator
  (of-object "GtkShortcutsShortcut")
  (docs "The accelerator(s) represented by this object. This property is used if #GtkShortcutsShortcut:shortcut-type is set to #GTK_SHORTCUT_ACCELERATOR.  The syntax of this property is (an extension of) the syntax understood by gtk_accelerator_parse(). Multiple accelerators can be specified by separating them with a space, but keep in mind that the available width is limited. It is also possible to specify ranges of shortcuts, using ... between the keys. Sequences of keys can be specified using a + or & between the keys.  Examples: - A single shortcut: <ctl><alt>delete - Two alternative shortcuts: <shift>a Home - A range of shortcuts: <alt>1...<alt>9 - Several keys pressed together: Control_L&Control_R - A sequence of shortcuts or keys: <ctl>c+<ctl>x  Use + instead of & when the keys may (or have to be) pressed sequentially (e.g use t+t for 'press the t key twice').  Note that <, > and & need to be escaped as &lt;, &gt; and &amp; when used in .ui files.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property action-name
  (of-object "GtkShortcutsShortcut")
  (docs "A detailed action name. If this is set for a shortcut of type %GTK_SHORTCUT_ACCELERATOR, then GTK+ will use the accelerators that are associated with the action via gtk_application_set_accels_for_action(), and setting #GtkShortcutsShortcut::accelerator is not necessary.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property direction
  (of-object "GtkShortcutsShortcut")
  (docs "The text direction for which this shortcut is active. If the shortcut is used regardless of the text direction, set this property to #GTK_TEXT_DIR_NONE.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property icon
  (of-object "GtkShortcutsShortcut")
  (docs "An icon to represent the shortcut or gesture. This property is used if #GtkShortcutsShortcut:shortcut-type is set to #GTK_SHORTCUT_GESTURE. For the other predefined gesture types, GTK+ provides an icon on its own.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property icon-set
  (of-object "GtkShortcutsShortcut")
  (docs "%TRUE if an icon has been set.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property shortcut-type
  (of-object "GtkShortcutsShortcut")
  (docs "The type of shortcut that is represented.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property subtitle
  (of-object "GtkShortcutsShortcut")
  (docs "The subtitle for the shortcut or gesture.  This is typically used for gestures and should be a short, one-line text that describes the gesture itself. For the predefined gesture types, GTK+ provides a subtitle on its own.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property subtitle-set
  (of-object "GtkShortcutsShortcut")
  (docs "%TRUE if a subtitle has been set.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property title
  (of-object "GtkShortcutsShortcut")
  (docs "The textual description for the shortcut or gesture represented by this object. This should be a short string that can fit in a single line.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property title-size-group
  (of-object "GtkShortcutsShortcut")
  (docs "The size group for the textual portion of this shortcut.  This is used internally by GTK+, and must not be modified by applications.")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property section-name
  (of-object "GtkShortcutsWindow")
  (docs "The name of the section to show.  This should be the section-name of one of the #GtkShortcutsSection objects that are in this shortcuts window.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property view-name
  (of-object "GtkShortcutsWindow")
  (docs "The view name by which to filter the contents.  This should correspond to the #GtkShortcutsGroup:view property of some of the #GtkShortcutsGroup objects that are inside this shortcuts window.  Set this to %NULL to show all groups.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property ignore-hidden
  (of-object "GtkSizeGroup")
  (docs "If %TRUE, unmapped widgets are ignored when determining the size of the group.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property mode
  (of-object "GtkSizeGroup")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property adjustment
  (of-object "GtkSpinButton")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property climb-rate
  (of-object "GtkSpinButton")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property digits
  (of-object "GtkSpinButton")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property numeric
  (of-object "GtkSpinButton")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property snap-to-ticks
  (of-object "GtkSpinButton")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property update-policy
  (of-object "GtkSpinButton")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property value
  (of-object "GtkSpinButton")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property wrap
  (of-object "GtkSpinButton")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property active
  (of-object "GtkSpinner")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property hhomogeneous
  (of-object "GtkStack")
  (docs "%TRUE if the stack allocates the same width for all children.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property homogeneous
  (of-object "GtkStack")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property interpolate-size
  (of-object "GtkStack")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property transition-duration
  (of-object "GtkStack")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property transition-running
  (of-object "GtkStack")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property transition-type
  (of-object "GtkStack")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property vhomogeneous
  (of-object "GtkStack")
  (docs "%TRUE if the stack allocates the same height for all children.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property visible-child
  (of-object "GtkStack")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property visible-child-name
  (of-object "GtkStack")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property stack
  (of-object "GtkStackSidebar")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property icon-size
  (of-object "GtkStackSwitcher")
  (docs "Use the 'icon-size' property to change the size of the image displayed when a #GtkStackSwitcher is displaying icons.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property stack
  (of-object "GtkStackSwitcher")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property embedded
  (of-object "GtkStatusIcon")
  (docs "%TRUE if the statusicon is embedded in a notification area.")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property file
  (of-object "GtkStatusIcon")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property gicon
  (of-object "GtkStatusIcon")
  (docs "The #GIcon displayed in the #GtkStatusIcon. For themed icons, the image will be updated automatically if the theme changes.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-tooltip
  (of-object "GtkStatusIcon")
  (docs "Enables or disables the emission of #GtkStatusIcon::query-tooltip on @status_icon.  A value of %TRUE indicates that @status_icon can have a tooltip, in this case the status icon will be queried using #GtkStatusIcon::query-tooltip to determine whether it will provide a tooltip or not.  Note that setting this property to %TRUE for the first time will change the event masks of the windows of this status icon to include leave-notify and motion-notify events. This will not be undone when the property is set to %FALSE again.  Whether this property is respected is platform dependent. For plain text tooltips, use #GtkStatusIcon:tooltip-text in preference.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property icon-name
  (of-object "GtkStatusIcon")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property orientation
  (of-object "GtkStatusIcon")
  (docs "The orientation of the tray in which the statusicon is embedded.")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property pixbuf
  (of-object "GtkStatusIcon")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property screen
  (of-object "GtkStatusIcon")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property size
  (of-object "GtkStatusIcon")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property stock
  (of-object "GtkStatusIcon")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property storage-type
  (of-object "GtkStatusIcon")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property title
  (of-object "GtkStatusIcon")
  (docs "The title of this tray icon. This should be a short, human-readable, localized string describing the tray icon. It may be used by tools like screen readers to render the tray icon.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tooltip-markup
  (of-object "GtkStatusIcon")
  (docs "Sets the text of tooltip to be the given string, which is marked up with the [Pango text markup language][PangoMarkupFormat]. Also see gtk_tooltip_set_markup().  This is a convenience property which will take care of getting the tooltip shown if the given string is not %NULL. #GtkStatusIcon:has-tooltip will automatically be set to %TRUE and the default handler for the #GtkStatusIcon::query-tooltip signal will take care of displaying the tooltip.  On some platforms, embedded markup will be ignored.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tooltip-text
  (of-object "GtkStatusIcon")
  (docs "Sets the text of tooltip to be the given string.  Also see gtk_tooltip_set_text().  This is a convenience property which will take care of getting the tooltip shown if the given string is not %NULL. #GtkStatusIcon:has-tooltip will automatically be set to %TRUE and the default handler for the #GtkStatusIcon::query-tooltip signal will take care of displaying the tooltip.  Note that some platforms have limitations on the length of tooltips that they allow on status icons, e.g. Windows only shows the first 64 characters.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property visible
  (of-object "GtkStatusIcon")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property context
  (of-object "GtkStyle")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property direction
  (of-object "GtkStyleContext")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property paint-clock
  (of-object "GtkStyleContext")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property parent
  (of-object "GtkStyleContext")
  (docs "Sets or gets the style context’s parent. See gtk_style_context_set_parent() for details.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property screen
  (of-object "GtkStyleContext")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property active
  (of-object "GtkSwitch")
  (docs "Whether the #GtkSwitch widget is in its on or off state.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property state
  (of-object "GtkSwitch")
  (docs "The backend state that is controlled by the switch. See #GtkSwitch::state-set for details.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property column-spacing
  (of-object "GtkTable")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property homogeneous
  (of-object "GtkTable")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property n-columns
  (of-object "GtkTable")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property n-rows
  (of-object "GtkTable")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property row-spacing
  (of-object "GtkTable")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property copy-target-list
  (of-object "GtkTextBuffer")
  (docs "The list of targets this buffer supports for clipboard copying and as DND source.")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property cursor-position
  (of-object "GtkTextBuffer")
  (docs "The position of the insert mark (as offset from the beginning of the buffer). It is useful for getting notified when the cursor moves.")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property has-selection
  (of-object "GtkTextBuffer")
  (docs "Whether the buffer has some text currently selected.")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property paste-target-list
  (of-object "GtkTextBuffer")
  (docs "The list of targets this buffer supports for clipboard pasting and as DND destination.")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property tag-table
  (of-object "GtkTextBuffer")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property text
  (of-object "GtkTextBuffer")
  (docs "The text content of the buffer. Without child widgets and images, see gtk_text_buffer_get_text() for more information.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property left-gravity
  (of-object "GtkTextMark")
  (docs "Whether the mark has left gravity. When text is inserted at the mark’s current location, if the mark has left gravity it will be moved to the left of the newly-inserted text, otherwise to the right.")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property name
  (of-object "GtkTextMark")
  (docs "The name of the mark or %NULL if the mark is anonymous.")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property accumulative-margin
  (of-object "GtkTextTag")
  (docs "Whether the margins accumulate or override each other.  When set to %TRUE the margins of this tag are added to the margins of any other non-accumulative margins present. When set to %FALSE the margins override one another (the default).")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property background
  (of-object "GtkTextTag")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property background-full-height
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property background-full-height-set
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property background-gdk
  (of-object "GtkTextTag")
  (docs "Background color as a #GdkColor.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property background-rgba
  (of-object "GtkTextTag")
  (docs "Background color as a #GdkRGBA.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property background-set
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property direction
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property editable
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property editable-set
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property fallback
  (of-object "GtkTextTag")
  (docs "Whether font fallback is enabled.  When set to %TRUE, other fonts will be substituted where the current font is missing glyphs.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property fallback-set
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property family
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property family-set
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property font
  (of-object "GtkTextTag")
  (docs "Font description as string, e.g. \'Sans Italic 12\'.  Note that the initial value of this property depends on the internals of #PangoFontDescription.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property font-desc
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property font-features
  (of-object "GtkTextTag")
  (docs "OpenType font features, as a string.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property font-features-set
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property foreground
  (of-object "GtkTextTag")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property foreground-gdk
  (of-object "GtkTextTag")
  (docs "Foreground color as a #GdkColor.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property foreground-rgba
  (of-object "GtkTextTag")
  (docs "Foreground color as a #GdkRGBA.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property foreground-set
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property indent
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property indent-set
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property invisible
  (of-object "GtkTextTag")
  (docs "Whether this text is hidden.  Note that there may still be problems with the support for invisible text, in particular when navigating programmatically inside a buffer containing invisible segments.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property invisible-set
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property justification
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property justification-set
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property language
  (of-object "GtkTextTag")
  (docs "The language this text is in, as an ISO code. Pango can use this as a hint when rendering the text. If not set, an appropriate default will be used.  Note that the initial value of this property depends on the current locale, see also gtk_get_default_language().")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property language-set
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property left-margin
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property left-margin-set
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property letter-spacing
  (of-object "GtkTextTag")
  (docs "Extra spacing between graphemes, in Pango units.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property letter-spacing-set
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property name
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property paragraph-background
  (of-object "GtkTextTag")
  (docs "The paragraph background color as a string.")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property paragraph-background-gdk
  (of-object "GtkTextTag")
  (docs "The paragraph background color as a #GdkColor.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property paragraph-background-rgba
  (of-object "GtkTextTag")
  (docs "The paragraph background color as a #GdkRGBA.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property paragraph-background-set
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixels-above-lines
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixels-above-lines-set
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixels-below-lines
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixels-below-lines-set
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixels-inside-wrap
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixels-inside-wrap-set
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property right-margin
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property right-margin-set
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property rise
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property rise-set
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property scale
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property scale-set
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property size
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property size-points
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property size-set
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property stretch
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property stretch-set
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property strikethrough
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property strikethrough-rgba
  (of-object "GtkTextTag")
  (docs "This property modifies the color of strikeouts. If not set, strikeouts will use the forground color.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property strikethrough-rgba-set
  (of-object "GtkTextTag")
  (docs "If the #GtkTextTag:strikethrough-rgba property has been set.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property strikethrough-set
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property style
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property style-set
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tabs
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tabs-set
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property underline
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property underline-rgba
  (of-object "GtkTextTag")
  (docs "This property modifies the color of underlines. If not set, underlines will use the forground color.  If #GtkTextTag:underline is set to %PANGO_UNDERLINE_ERROR, an alternate color may be applied instead of the foreground. Setting this property will always override those defaults.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property underline-rgba-set
  (of-object "GtkTextTag")
  (docs "If the #GtkTextTag:underline-rgba property has been set.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property underline-set
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property variant
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property variant-set
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property weight
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property weight-set
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property wrap-mode
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property wrap-mode-set
  (of-object "GtkTextTag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property accepts-tab
  (of-object "GtkTextView")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property bottom-margin
  (of-object "GtkTextView")
  (docs "The bottom margin for text in the text view.  Note that this property is confusingly named. In CSS terms, the value set here is padding, and it is applied in addition to the padding from the theme.  Don't confuse this property with #GtkWidget:margin-bottom.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property buffer
  (of-object "GtkTextView")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property cursor-visible
  (of-object "GtkTextView")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property editable
  (of-object "GtkTextView")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property im-module
  (of-object "GtkTextView")
  (docs "Which IM (input method) module should be used for this text_view. See #GtkIMContext.  Setting this to a non-%NULL value overrides the system-wide IM module setting. See the GtkSettings #GtkSettings:gtk-im-module property.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property indent
  (of-object "GtkTextView")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property input-hints
  (of-object "GtkTextView")
  (docs "Additional hints (beyond #GtkTextView:input-purpose) that allow input methods to fine-tune their behaviour.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property input-purpose
  (of-object "GtkTextView")
  (docs "The purpose of this text field.  This property can be used by on-screen keyboards and other input methods to adjust their behaviour.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property justification
  (of-object "GtkTextView")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property left-margin
  (of-object "GtkTextView")
  (docs "The default left margin for text in the text view. Tags in the buffer may override the default.  Note that this property is confusingly named. In CSS terms, the value set here is padding, and it is applied in addition to the padding from the theme.  Don't confuse this property with #GtkWidget:margin-left.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property monospace
  (of-object "GtkTextView")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property overwrite
  (of-object "GtkTextView")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixels-above-lines
  (of-object "GtkTextView")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixels-below-lines
  (of-object "GtkTextView")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixels-inside-wrap
  (of-object "GtkTextView")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property populate-all
  (of-object "GtkTextView")
  (docs "If :populate-all is %TRUE, the #GtkTextView::populate-popup signal is also emitted for touch popups.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property right-margin
  (of-object "GtkTextView")
  (docs "The default right margin for text in the text view. Tags in the buffer may override the default.  Note that this property is confusingly named. In CSS terms, the value set here is padding, and it is applied in addition to the padding from the theme.  Don't confuse this property with #GtkWidget:margin-right.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tabs
  (of-object "GtkTextView")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property top-margin
  (of-object "GtkTextView")
  (docs "The top margin for text in the text view.  Note that this property is confusingly named. In CSS terms, the value set here is padding, and it is applied in addition to the padding from the theme.  Don't confuse this property with #GtkWidget:margin-top.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property wrap-mode
  (of-object "GtkTextView")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property name
  (of-object "GtkThemingEngine")
  (docs "The theming engine name, this name will be used when registering custom properties, for a theming engine named 'Clearlooks' registering a 'glossy' custom property, it could be referenced in the CSS file as  |[ -Clearlooks-glossy: true; ]|")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property active
  (of-object "GtkToggleAction")
  (docs "Whether the toggle action should be active.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property draw-as-radio
  (of-object "GtkToggleAction")
  (docs "Whether the proxies for this action look like radio action proxies.  This is an appearance property and thus only applies if #GtkActivatable:use-action-appearance is %TRUE.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property active
  (of-object "GtkToggleButton")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property draw-indicator
  (of-object "GtkToggleButton")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property inconsistent
  (of-object "GtkToggleButton")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property active
  (of-object "GtkToggleToolButton")
  (docs "If the toggle tool button should be pressed in.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property icon-name
  (of-object "GtkToolButton")
  (docs "The name of the themed icon displayed on the item. This property only has an effect if not overridden by #GtkToolButton:label-widget, #GtkToolButton:icon-widget or #GtkToolButton:stock-id properties.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property icon-widget
  (of-object "GtkToolButton")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property label
  (of-object "GtkToolButton")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property label-widget
  (of-object "GtkToolButton")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property stock-id
  (of-object "GtkToolButton")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property use-underline
  (of-object "GtkToolButton")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property is-important
  (of-object "GtkToolItem")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property visible-horizontal
  (of-object "GtkToolItem")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property visible-vertical
  (of-object "GtkToolItem")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property collapsed
  (of-object "GtkToolItemGroup")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property ellipsize
  (of-object "GtkToolItemGroup")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property header-relief
  (of-object "GtkToolItemGroup")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property label
  (of-object "GtkToolItemGroup")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property label-widget
  (of-object "GtkToolItemGroup")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property icon-size
  (of-object "GtkToolPalette")
  (docs "The size of the icons in a tool palette. When this property is set, it overrides the default setting.  This should only be used for special-purpose tool palettes, normal application tool palettes should respect the user preferences for the size of icons.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property icon-size-set
  (of-object "GtkToolPalette")
  (docs "Is %TRUE if the #GtkToolPalette:icon-size property has been set.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property toolbar-style
  (of-object "GtkToolPalette")
  (docs "The style of items in the tool palette.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property icon-size
  (of-object "GtkToolbar")
  (docs "The size of the icons in a toolbar is normally determined by the toolbar-icon-size setting. When this property is set, it overrides the setting.  This should only be used for special-purpose toolbars, normal application toolbars should respect the user preferences for the size of icons.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property icon-size-set
  (of-object "GtkToolbar")
  (docs "Is %TRUE if the icon-size property has been set.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-arrow
  (of-object "GtkToolbar")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property toolbar-style
  (of-object "GtkToolbar")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property child-model
  (of-object "GtkTreeModelFilter")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property virtual-root
  (of-object "GtkTreeModelFilter")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property model
  (of-object "GtkTreeModelSort")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property mode
  (of-object "GtkTreeSelection")
  (docs "Selection mode. See gtk_tree_selection_set_mode() for more information on this property.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property activate-on-single-click
  (of-object "GtkTreeView")
  (docs "The activate-on-single-click property specifies whether the 'row-activated' signal will be emitted after a single click.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property enable-grid-lines
  (of-object "GtkTreeView")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property enable-search
  (of-object "GtkTreeView")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property enable-tree-lines
  (of-object "GtkTreeView")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property expander-column
  (of-object "GtkTreeView")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property fixed-height-mode
  (of-object "GtkTreeView")
  (docs "Setting the ::fixed-height-mode property to %TRUE speeds up #GtkTreeView by assuming that all rows have the same height. Only enable this option if all rows are the same height. Please see gtk_tree_view_set_fixed_height_mode() for more information on this option.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property headers-clickable
  (of-object "GtkTreeView")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property headers-visible
  (of-object "GtkTreeView")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property hover-expand
  (of-object "GtkTreeView")
  (docs "Enables or disables the hover expansion mode of @tree_view. Hover expansion makes rows expand or collapse if the pointer moves over them.  This mode is primarily intended for treeviews in popups, e.g. in #GtkComboBox or #GtkEntryCompletion.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property hover-selection
  (of-object "GtkTreeView")
  (docs "Enables or disables the hover selection mode of @tree_view. Hover selection makes the selected row follow the pointer. Currently, this works only for the selection modes %GTK_SELECTION_SINGLE and %GTK_SELECTION_BROWSE.  This mode is primarily intended for treeviews in popups, e.g. in #GtkComboBox or #GtkEntryCompletion.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property level-indentation
  (of-object "GtkTreeView")
  (docs "Extra indentation for each level.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property model
  (of-object "GtkTreeView")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property reorderable
  (of-object "GtkTreeView")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property rubber-banding
  (of-object "GtkTreeView")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property rules-hint
  (of-object "GtkTreeView")
  (docs "Sets a hint to the theme to draw rows in alternating colors.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property search-column
  (of-object "GtkTreeView")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-expanders
  (of-object "GtkTreeView")
  (docs "%TRUE if the view has expanders.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tooltip-column
  (of-object "GtkTreeView")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property alignment
  (of-object "GtkTreeViewColumn")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property cell-area
  (of-object "GtkTreeViewColumn")
  (docs "The #GtkCellArea used to layout cell renderers for this column.  If no area is specified when creating the tree view column with gtk_tree_view_column_new_with_area() a horizontally oriented #GtkCellAreaBox will be used.")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property clickable
  (of-object "GtkTreeViewColumn")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property expand
  (of-object "GtkTreeViewColumn")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property fixed-width
  (of-object "GtkTreeViewColumn")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property max-width
  (of-object "GtkTreeViewColumn")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property min-width
  (of-object "GtkTreeViewColumn")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property reorderable
  (of-object "GtkTreeViewColumn")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property resizable
  (of-object "GtkTreeViewColumn")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property sizing
  (of-object "GtkTreeViewColumn")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property sort-column-id
  (of-object "GtkTreeViewColumn")
  (docs "Logical sort column ID this column sorts on when selected for sorting. Setting the sort column ID makes the column header clickable. Set to -1 to make the column unsortable.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property sort-indicator
  (of-object "GtkTreeViewColumn")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property sort-order
  (of-object "GtkTreeViewColumn")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property spacing
  (of-object "GtkTreeViewColumn")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property title
  (of-object "GtkTreeViewColumn")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property visible
  (of-object "GtkTreeViewColumn")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property widget
  (of-object "GtkTreeViewColumn")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property width
  (of-object "GtkTreeViewColumn")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property x-offset
  (of-object "GtkTreeViewColumn")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property add-tearoffs
  (of-object "GtkUIManager")
  (docs "The 'add-tearoffs' property controls whether generated menus have tearoff menu items.  Note that this only affects regular menus. Generated popup menus never have tearoff menu items.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property ui
  (of-object "GtkUIManager")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property shadow-type
  (of-object "GtkViewport")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property use-symbolic
  (of-object "GtkVolumeButton")
  (docs "Whether to use symbolic icons as the icons. Note that if the symbolic icons are not available in your installed theme, then the normal (potentially colorful) icons will be used.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property app-paintable
  (of-object "GtkWidget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property can-default
  (of-object "GtkWidget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property can-focus
  (of-object "GtkWidget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property composite-child
  (of-object "GtkWidget")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property double-buffered
  (of-object "GtkWidget")
  (docs "Whether the widget is double buffered.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property events
  (of-object "GtkWidget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property expand
  (of-object "GtkWidget")
  (docs "Whether to expand in both directions. Setting this sets both #GtkWidget:hexpand and #GtkWidget:vexpand")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property focus-on-click
  (of-object "GtkWidget")
  (docs "Whether the widget should grab focus when it is clicked with the mouse.  This property is only relevant for widgets that can take focus.  Before 3.20, several widgets (GtkButton, GtkFileChooserButton, GtkComboBox) implemented this property individually.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property halign
  (of-object "GtkWidget")
  (docs "How to distribute horizontal space if widget gets extra space, see #GtkAlign")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-default
  (of-object "GtkWidget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-focus
  (of-object "GtkWidget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-tooltip
  (of-object "GtkWidget")
  (docs "Enables or disables the emission of #GtkWidget::query-tooltip on @widget. A value of %TRUE indicates that @widget can have a tooltip, in this case the widget will be queried using #GtkWidget::query-tooltip to determine whether it will provide a tooltip or not.  Note that setting this property to %TRUE for the first time will change the event masks of the GdkWindows of this widget to include leave-notify and motion-notify events.  This cannot and will not be undone when the property is set to %FALSE again.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property height-request
  (of-object "GtkWidget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property hexpand
  (of-object "GtkWidget")
  (docs "Whether to expand horizontally. See gtk_widget_set_hexpand().")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property hexpand-set
  (of-object "GtkWidget")
  (docs "Whether to use the #GtkWidget:hexpand property. See gtk_widget_get_hexpand_set().")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property is-focus
  (of-object "GtkWidget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property margin
  (of-object "GtkWidget")
  (docs "Sets all four sides' margin at once. If read, returns max margin on any side.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property margin-bottom
  (of-object "GtkWidget")
  (docs "Margin on bottom side of widget.  This property adds margin outside of the widget's normal size request, the margin will be added in addition to the size from gtk_widget_set_size_request() for example.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property margin-end
  (of-object "GtkWidget")
  (docs "Margin on end of widget, horizontally. This property supports left-to-right and right-to-left text directions.  This property adds margin outside of the widget's normal size request, the margin will be added in addition to the size from gtk_widget_set_size_request() for example.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property margin-left
  (of-object "GtkWidget")
  (docs "Margin on left side of widget.  This property adds margin outside of the widget's normal size request, the margin will be added in addition to the size from gtk_widget_set_size_request() for example.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property margin-right
  (of-object "GtkWidget")
  (docs "Margin on right side of widget.  This property adds margin outside of the widget's normal size request, the margin will be added in addition to the size from gtk_widget_set_size_request() for example.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property margin-start
  (of-object "GtkWidget")
  (docs "Margin on start of widget, horizontally. This property supports left-to-right and right-to-left text directions.  This property adds margin outside of the widget's normal size request, the margin will be added in addition to the size from gtk_widget_set_size_request() for example.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property margin-top
  (of-object "GtkWidget")
  (docs "Margin on top side of widget.  This property adds margin outside of the widget's normal size request, the margin will be added in addition to the size from gtk_widget_set_size_request() for example.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property name
  (of-object "GtkWidget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property no-show-all
  (of-object "GtkWidget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property opacity
  (of-object "GtkWidget")
  (docs "The requested opacity of the widget. See gtk_widget_set_opacity() for more details about window opacity.  Before 3.8 this was only available in GtkWindow")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property parent
  (of-object "GtkWidget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property receives-default
  (of-object "GtkWidget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property scale-factor
  (of-object "GtkWidget")
  (docs "The scale factor of the widget. See gtk_widget_get_scale_factor() for more details about widget scaling.")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property sensitive
  (of-object "GtkWidget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property style
  (of-object "GtkWidget")
  (docs "The style of the widget, which contains information about how it will look (colors, etc).")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property tooltip-markup
  (of-object "GtkWidget")
  (docs "Sets the text of tooltip to be the given string, which is marked up with the [Pango text markup language][PangoMarkupFormat]. Also see gtk_tooltip_set_markup().  This is a convenience property which will take care of getting the tooltip shown if the given string is not %NULL: #GtkWidget:has-tooltip will automatically be set to %TRUE and there will be taken care of #GtkWidget::query-tooltip in the default signal handler.  Note that if both #GtkWidget:tooltip-text and #GtkWidget:tooltip-markup are set, the last one wins.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tooltip-text
  (of-object "GtkWidget")
  (docs "Sets the text of tooltip to be the given string.  Also see gtk_tooltip_set_text().  This is a convenience property which will take care of getting the tooltip shown if the given string is not %NULL: #GtkWidget:has-tooltip will automatically be set to %TRUE and there will be taken care of #GtkWidget::query-tooltip in the default signal handler.  Note that if both #GtkWidget:tooltip-text and #GtkWidget:tooltip-markup are set, the last one wins.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property valign
  (of-object "GtkWidget")
  (docs "How to distribute vertical space if widget gets extra space, see #GtkAlign")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property vexpand
  (of-object "GtkWidget")
  (docs "Whether to expand vertically. See gtk_widget_set_vexpand().")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property vexpand-set
  (of-object "GtkWidget")
  (docs "Whether to use the #GtkWidget:vexpand property. See gtk_widget_get_vexpand_set().")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property visible
  (of-object "GtkWidget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property width-request
  (of-object "GtkWidget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property window
  (of-object "GtkWidget")
  (docs "The widget's window if it is realized, %NULL otherwise.")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property accept-focus
  (of-object "GtkWindow")
  (docs "Whether the window should receive the input focus.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property application
  (of-object "GtkWindow")
  (docs "The #GtkApplication associated with the window.  The application will be kept alive for at least as long as it has any windows associated with it (see g_application_hold() for a way to keep it alive without windows).  Normally, the connection between the application and the window will remain until the window is destroyed, but you can explicitly remove it by setting the :application property to %NULL.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property attached-to
  (of-object "GtkWindow")
  (docs "The widget to which this window is attached. See gtk_window_set_attached_to().  Examples of places where specifying this relation is useful are for instance a #GtkMenu created by a #GtkComboBox, a completion popup window created by #GtkEntry or a typeahead search entry created by #GtkTreeView.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property decorated
  (of-object "GtkWindow")
  (docs "Whether the window should be decorated by the window manager.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property default-height
  (of-object "GtkWindow")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property default-width
  (of-object "GtkWindow")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property deletable
  (of-object "GtkWindow")
  (docs "Whether the window frame should have a close button.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property destroy-with-parent
  (of-object "GtkWindow")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property focus-on-map
  (of-object "GtkWindow")
  (docs "Whether the window should receive the input focus when mapped.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property focus-visible
  (of-object "GtkWindow")
  (docs "Whether 'focus rectangles' are currently visible in this window.  This property is maintained by GTK+ based on user input and should not be set by applications.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property gravity
  (of-object "GtkWindow")
  (docs "The window gravity of the window. See gtk_window_move() and #GdkGravity for more details about window gravity.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-resize-grip
  (of-object "GtkWindow")
  (docs "Whether the window has a corner resize grip.  Note that the resize grip is only shown if the window is actually resizable and not maximized. Use #GtkWindow:resize-grip-visible to find out if the resize grip is currently shown.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property has-toplevel-focus
  (of-object "GtkWindow")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property hide-titlebar-when-maximized
  (of-object "GtkWindow")
  (docs "Whether the titlebar should be hidden during maximization.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property icon
  (of-object "GtkWindow")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property icon-name
  (of-object "GtkWindow")
  (docs "The :icon-name property specifies the name of the themed icon to use as the window icon. See #GtkIconTheme for more details.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property is-active
  (of-object "GtkWindow")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property is-maximized
  (of-object "GtkWindow")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property mnemonics-visible
  (of-object "GtkWindow")
  (docs "Whether mnemonics are currently visible in this window.  This property is maintained by GTK+ based on user input, and should not be set by applications.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property modal
  (of-object "GtkWindow")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property resizable
  (of-object "GtkWindow")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property resize-grip-visible
  (of-object "GtkWindow")
  (docs "Whether a corner resize grip is currently shown.")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (deprecated #t)
)

(define-property role
  (of-object "GtkWindow")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property screen
  (of-object "GtkWindow")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property skip-pager-hint
  (of-object "GtkWindow")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property skip-taskbar-hint
  (of-object "GtkWindow")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property startup-id
  (of-object "GtkWindow")
  (docs "The :startup-id is a write-only property for setting window's startup notification identifier. See gtk_window_set_startup_id() for more details.")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property title
  (of-object "GtkWindow")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property transient-for
  (of-object "GtkWindow")
  (docs "The transient parent of the window. See gtk_window_set_transient_for() for more details about transient windows.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property type
  (of-object "GtkWindow")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property type-hint
  (of-object "GtkWindow")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property urgency-hint
  (of-object "GtkWindow")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property window-position
  (of-object "GtkWindow")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property action-name
  (of-object "GtkActionable")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property action-target
  (of-object "GtkActionable")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property related-action
  (of-object "GtkActivatable")
  (docs "The action that this activatable will activate and receive updates from for various states and possibly appearance.  > #GtkActivatable implementors need to handle the this property and > call gtk_activatable_do_set_related_action() when it changes.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property use-action-appearance
  (of-object "GtkActivatable")
  (docs "Whether this activatable should reset its layout and appearance when setting the related action or when the action changes appearance.  See the #GtkAction documentation directly to find which properties should be ignored by the #GtkActivatable when this property is %FALSE.  > #GtkActivatable implementors need to handle this property > and call gtk_activatable_sync_action_properties() on the activatable > widget when it changes.")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property content-type
  (of-object "GtkAppChooser")
  (docs "The content type of the #GtkAppChooser object.  See [GContentType][gio-GContentType] for more information about content types.")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property editing-canceled
  (of-object "GtkCellEditable")
  (docs "Indicates whether editing on the cell has been canceled.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property rgba
  (of-object "GtkColorChooser")
  (docs "The ::rgba property contains the currently selected color, as a #GdkRGBA struct. The property can be set to change the current selection programmatically.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property use-alpha
  (of-object "GtkColorChooser")
  (docs "When ::use-alpha is %TRUE, colors may have alpha (translucency) information. When it is %FALSE, the #GdkRGBA struct obtained via the #GtkColorChooser:rgba property will be forced to have alpha == 1.  Implementations are expected to show alpha by rendering the color over a non-uniform background (like a checkerboard pattern).")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property action
  (of-object "GtkFileChooser")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property create-folders
  (of-object "GtkFileChooser")
  (docs "Whether a file chooser not in %GTK_FILE_CHOOSER_ACTION_OPEN mode will offer the user to create new folders.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property do-overwrite-confirmation
  (of-object "GtkFileChooser")
  (docs "Whether a file chooser in %GTK_FILE_CHOOSER_ACTION_SAVE mode will present an overwrite confirmation dialog if the user selects a file name that already exists.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property extra-widget
  (of-object "GtkFileChooser")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property filter
  (of-object "GtkFileChooser")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property local-only
  (of-object "GtkFileChooser")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property preview-widget
  (of-object "GtkFileChooser")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property preview-widget-active
  (of-object "GtkFileChooser")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property select-multiple
  (of-object "GtkFileChooser")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-hidden
  (of-object "GtkFileChooser")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property use-preview-label
  (of-object "GtkFileChooser")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property font
  (of-object "GtkFontChooser")
  (docs "The font description as a string, e.g. 'Sans Italic 12'.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property font-desc
  (of-object "GtkFontChooser")
  (docs "The font description as a #PangoFontDescription.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property preview-text
  (of-object "GtkFontChooser")
  (docs "The string with which to preview the font.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-preview-entry
  (of-object "GtkFontChooser")
  (docs "Whether to show an entry to change the preview text.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property orientation
  (of-object "GtkOrientable")
  (docs "The orientation of the orientable.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property filter
  (of-object "GtkRecentChooser")
  (docs "The #GtkRecentFilter object to be used when displaying the recently used resources.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property limit
  (of-object "GtkRecentChooser")
  (docs "The maximum number of recently used resources to be displayed, or -1 to display all items.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property local-only
  (of-object "GtkRecentChooser")
  (docs "Whether this #GtkRecentChooser should display only local (file:) resources.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property recent-manager
  (of-object "GtkRecentChooser")
  (docs "The #GtkRecentManager instance used by the #GtkRecentChooser to display the list of recently used resources.")
  (readable #f)
  (writable #t)
  (construct-only #t)
)

(define-property select-multiple
  (of-object "GtkRecentChooser")
  (docs "Allow the user to select multiple resources.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-icons
  (of-object "GtkRecentChooser")
  (docs "Whether this #GtkRecentChooser should display an icon near the item.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-not-found
  (of-object "GtkRecentChooser")
  (docs "Whether this #GtkRecentChooser should display the recently used resources even if not present anymore. Setting this to %FALSE will perform a potentially expensive check on every local resource (every remote resource will always be displayed).")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-private
  (of-object "GtkRecentChooser")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-tips
  (of-object "GtkRecentChooser")
  (docs "Whether this #GtkRecentChooser should display a tooltip containing the full path of the recently used resources.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property sort-type
  (of-object "GtkRecentChooser")
  (docs "Sorting order to be used when displaying the recently used resources.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property hadjustment
  (of-object "GtkScrollable")
  (docs "Horizontal #GtkAdjustment of the scrollable widget. This adjustment is shared between the scrollable widget and its parent.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property hscroll-policy
  (of-object "GtkScrollable")
  (docs "Determines whether horizontal scrolling should start once the scrollable widget is allocated less than its minimum width or less than its natural width.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property vadjustment
  (of-object "GtkScrollable")
  (docs "Verical #GtkAdjustment of the scrollable widget. This adjustment is shared between the scrollable widget and its parent.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property vscroll-policy
  (of-object "GtkScrollable")
  (docs "Determines whether vertical scrolling should start once the scrollable widget is allocated less than its minimum height or less than its natural height.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

