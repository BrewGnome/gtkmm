/* $Id$ */

/* Copyright (C) 2003 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <gtkmm/widget.h>
#include <gtkmm/accelgroup.h>
#include <gtkmm/stockid.h>

_DEFS(gtkmm,gtk)
_PINCLUDE(glibmm/private/object_p.h)


namespace Gtk
{

_WRAP_ENUM(FileFilterFlags, GtkFileFilterFlags)

class FileFilter : public Glib::Object
{
  _CLASS_GOBJECT(FileFilter, GtkFileFilter, GTK_FILE_FILTER, Glib::Object, GObject)
  _CTOR_DEFAULT
public:
  _WRAP_CREATE()

  _WRAP_METHOD(void set_name(const Glib::ustring& name), gtk_file_filter_set_name)
  _WRAP_METHOD(Glib::ustring get_name() const, gtk_file_filter_get_name)

  _WRAP_METHOD(void add_mime_type(const Glib::ustring& mime_type), gtk_file_filter_add_mime_type)
  _WRAP_METHOD(void add_pattern(const Glib::ustring& pattern), gtk_file_filter_add_pattern)
//TODO:  _WRAP_METHOD(void add_custom(FileFilterFlags needed, GtkFileFilterFunc func, gpointer data, GDestroyNotify notify), gtk_file_filter_add_custom)

  _WRAP_METHOD(FileFilterFlags get_needed() const, gtk_file_filter_get_needed)
//TODO:  _WRAP_METHOD(bool filter(const GtkFileFilterInfo* filter_info), gtk_file_filter_filter)

  //TODO: Properties and signals and vfuncs.
};

} // namespace Gtk

