/* $Id$ */

/* aspectframe.h
 * 
 * Copyright (C) 1998-2002 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <gtkmm/frame.h>
_DEFS(gtkmm,gtk)
_PINCLUDE(gtkmm/private/frame_p.h)

namespace Gtk
{

/** A frame that constrains its child to a particular aspect ratio.
 *
 * The Gtk::AspectFrame is useful when you want pack a widget so that it can
 * resize but always retains the same aspect ratio.  For instance, one might
 * be drawing a small preview of a larger image. Because it derives from
 * Gtk::Frame, it can draw a label and a frame around the child. The frame
 * will be "shrink-wrapped" to the size of the child.
 *
 * @ingroup Widgets
 * @ingroup Containers
 */
class AspectFrame : public Frame
{
  _CLASS_GTKOBJECT(AspectFrame,GtkAspectFrame,GTK_ASPECT_FRAME,Gtk::Frame,GtkFrame)

public:

  _WRAP_CTOR(AspectFrame(const Glib::ustring& label = Glib::ustring(),
    AlignmentEnum xalign = Gtk::ALIGN_CENTER, AlignmentEnum yalign = Gtk::ALIGN_CENTER,
    float ratio = 1.0, bool obey_child = false), gtk_aspect_frame_new)

  _WRAP_CTOR(AspectFrame(const Glib::ustring& label,
    float xalign, float yalign,
    float ratio = 1.0, bool obey_child = false), gtk_aspect_frame_new)

  //TODO: Is "obey_child = true" a good default?
  _WRAP_METHOD(void set(float xalign, float yalign, float ratio, bool obey_child = true), gtk_aspect_frame_set)
  _WRAP_METHOD(void set(AlignmentEnum xalign, AlignmentEnum yalign, float ratio, bool obey_child = true), gtk_aspect_frame_set)

  _WRAP_PROPERTY("xalign", float)
  _WRAP_PROPERTY("yalign", float)
  _WRAP_PROPERTY("ratio", float)
  _WRAP_PROPERTY("obey-child", bool)
};

} /* namespace Gtk */

