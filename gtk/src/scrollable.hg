/* Copyright (C) 2010 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <gtkmm/adjustment.h>
#include <glibmm/interface.h>
#include <gtkmm/enums.h>
#include <gtk/gtk.h> //TODO: Hide this?
_DEFS(gtkmm,gtk)
_PINCLUDE(glibmm/private/interface_p.h)


namespace Gtk
{

/** This interface is implemented by all widgets that can be oriented
 * horizontally or vertically. Historically, such widgets have been realized as
 * subclasses of a common base class (e.g GtkBox/GtkHBox/GtkVBox and
 * GtkScale/GtkHScale/GtkVScale). GtkScrollable is more flexible in that it
 * allows the orientation to be changed at runtime, allowing the widgets to 'flip'.
 *
 * @newin{2,16}
 */
class Scrollable : public Glib::Interface
{
  _CLASS_INTERFACE(Scrollable, GtkScrollable, GTK_SCROLLABLE, GtkScrollableInterface)

public:
  _WRAP_METHOD(Glib::RefPtr<Adjustment> get_hadjustment(), gtk_scrollable_get_hadjustment)
  _WRAP_METHOD(Glib::RefPtr<const Adjustment> get_hadjustment() const, gtk_scrollable_get_hadjustment)

  _WRAP_METHOD(void set_hadjustment(const Glib::RefPtr<Adjustment>& hadjustment), gtk_scrollable_set_hadjustment)

  /** This method removes the hadjustment.
   * @see set_hadjustment().
   */
  void unset_hadjustment();
  
  _WRAP_METHOD(Glib::RefPtr<Adjustment> get_vadjustment(), gtk_scrollable_get_vadjustment)
  _WRAP_METHOD(Glib::RefPtr<const Adjustment> get_vadjustment() const, gtk_scrollable_get_vadjustment)

  _WRAP_METHOD(void set_vadjustment(const Glib::RefPtr<Adjustment>& hadjustment), gtk_scrollable_set_vadjustment)

  /** This method removes the vadjustment.
   * @see set_vadjustment().
   */
  void unset_vadjustment();

  _WRAP_METHOD(int get_min_display_width() const, gtk_scrollable_get_min_display_width)
  _WRAP_METHOD(void set_min_display_width(int width), gtk_scrollable_set_min_display_width)

  _WRAP_METHOD(int get_min_display_height() const, gtk_scrollable_get_min_display_height)
  _WRAP_METHOD(void set_min_display_height(int width), gtk_scrollable_set_min_display_height)

  //TODO: Properties and signals.
  _WRAP_PROPERTY("hadjustment", Glib::RefPtr<Adjustment>)
  _WRAP_PROPERTY("vadjustment", Glib::RefPtr<Adjustment>)
};

} // namespace Gtk
