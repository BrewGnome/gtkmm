/* $Id$ */

/* expander.h
 * 
 * Copyright (C) 2003 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <gtkmm/bin.h>
_DEFS(gtkmm,gtk)
_PINCLUDE(gtkmm/private/bin_p.h)


namespace Gtk
{

/** 
 *
 * @ingroup Widgets
 */
class Expander : public Bin
{
  _CLASS_GTKOBJECT(Expander, GtkExpander, GTK_EXPANDER, Gtk::Bin, GtkBin)
public:
  _CTOR_DEFAULT;
  explicit Expander(const Glib::ustring& label, bool mnemonic = false);
  _IGNORE(gtk_expander_new, gkt_expander_new_with_mnemonic)

  _WRAP_METHOD(void set_expanded(bool expanded = true), gtk_expander_set_expanded)
  _WRAP_METHOD(bool get_expanded() const, gtk_expander_get_expanded)

  _WRAP_METHOD(void set_spacing(int spacing), gtk_expander_set_spacing)
  _WRAP_METHOD(int get_spacing() const, gtk_expander_get_spacing)

  _WRAP_METHOD(void set_label(const Glib::ustring& label), gtk_expander_set_label)
  _WRAP_METHOD(Glib::ustring get_label() const, gtk_expander_get_label)

  _WRAP_METHOD(void set_use_underline(bool use_underline = true), gtk_expander_set_use_underline)
  _WRAP_METHOD(bool get_use_underline() const, gtk_expander_get_use_underline)

  _WRAP_METHOD(void set_use_markup(bool use_markup = true), gtk_expander_set_use_markup)
  _WRAP_METHOD(bool get_use_markup() const, gtk_expander_get_use_markup)

  _WRAP_METHOD(void set_label_widget(Widget& label_widget), gtk_expander_set_label_widget)
  _WRAP_METHOD(Widget* get_label_widget(), gtk_expander_get_label_widget)
  _WRAP_METHOD(const Widget* get_label_widget() const, gtk_expander_get_label_widget)

  _IGNORE_SIGNAL("activate") //keybinding

  _WRAP_PROPERTY("expanded", bool)
  _WRAP_PROPERTY("label", Glib::ustring)
  _WRAP_PROPERTY("use_underline", bool)
  _WRAP_PROPERTY("Use markup", bool)
  _WRAP_PROPERTY("spacing", int)
  _WRAP_PROPERTY("label_widget", Widget*)            
};


} // namespace Gtk

