/* $Id$ */

/* combobox.h
 * 
 * Copyright (C) 2003 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <gtkmm/bin.h>
#include <gtkmm/treemodel.h>
#include <gtkmm/cellrenderer.h>
_DEFS(gtkmm,gtk)
_PINCLUDE(gtkmm/private/bin_p.h)


namespace Gtk
{

/** 
 *
 * @ingroup Widgets
 */
class ComboBox : public Bin
{
  _CLASS_GTKOBJECT(ComboBox, GtkComboBox, GTK_COMBO_BOX, Gtk::Bin, GtkBin)
public:
  explicit ComboBox();
  _WRAP_CTOR(ComboBox(const Glib::RefPtr<TreeModel>& model), gtk_combo_box_new)
  _IGNORE(gtk_combo_box_new)
  //TODO: _WRAP_METHOD(Widget* new_text(), gtk_combo_box_new_text)

  _WRAP_METHOD(void pack_start(CellRenderer& cell, bool expand = true), gtk_combo_box_pack_start)
  _WRAP_METHOD(void pack_end(CellRenderer& cell, bool expand = true), gtk_combo_box_pack_end)
//TODO:  _WRAP_METHOD(void set_attributes(CellRenderer& cell, ...), gtk_combo_box_set_attributes)
  _WRAP_METHOD(void clear(), gtk_combo_box_clear)

/* grids */
  _WRAP_METHOD(void set_wrap_width(int width), gtk_combo_box_set_wrap_width)
  _WRAP_METHOD(void set_row_span_column(int row_span), gtk_combo_box_set_row_span_column)
  _WRAP_METHOD(void set_column_span_column(int column_span), gtk_combo_box_set_column_span_column)

/* get/set active item */
  _WRAP_METHOD(int get_active() const, gtk_combo_box_get_active)
  _WRAP_METHOD(void set_active(int index), gtk_combo_box_set_active)

/* getters and setters */
  _WRAP_METHOD(Glib::RefPtr<TreeModel> get_model(), gtk_combo_box_get_model)
  _WRAP_METHOD(Glib::RefPtr<const TreeModel> get_model() const, gtk_combo_box_get_model)
  
/* convenience -- text */
  _WRAP_METHOD(void append_text(const Glib::ustring& text), gtk_combo_box_append_text)
  _WRAP_METHOD(void insert_text(int position, const Glib::ustring& text), gtk_combo_box_insert_text)
  _WRAP_METHOD(void repend_text(const Glib::ustring& text), gtk_combo_box_prepend_text)

protected:

  //Tree model columns:
  class TextModelColumns : public Gtk::TreeModel::ColumnRecord
  {
  public:
    TextModelColumns()
    { add(m_column); }

    Gtk::TreeModelColumn<Glib::ustring> m_column;
  };

  TextModelColumns m_text_columns;
                                              
};


} // namespace Gtk

