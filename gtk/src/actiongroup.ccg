// -*- c++ -*-
/* $Id$ */

/* Copyright 2003 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <gtk/gtkactiongroup.h>


namespace Gtk
{

void ActionGroup::add_action(const Glib::RefPtr<Action>& action, const Action::SlotActivate& slot)
{
  //This is meant to be similar to the gtk_action_group_add_actions() convenience method that is used from C.
  //This also does the work of gtk_action_group_add_toggle_actions() and gtk_action_group_add_radio_actions_full(),
  //because the extra stuff there is already done when the Action (or a derived type, such as ToggleAction) is create()ed.
  
  action->signal_activate().connect(slot);
  //TODO: Use the translation_func?
  add_action(action);
}

void ActionGroup::add_action(const Glib::RefPtr<Action>& action, const AccelKey& /* accel_key */, const Action::SlotActivate& slot)
{
  //This is meant to be similar to the gtk_action_group_add_actions() convenience method that is used from C.
  //This also does the work of gtk_action_group_add_toggle_actions() and gtk_action_group_add_radio_actions_full(),
  //because the extra stuff there is already done when the Action (or a derived type, such as ToggleAction) is create()ed.

  add_action(action, slot);
  //TODO: Add the accellerator.
}  


} // namespace Gtk

