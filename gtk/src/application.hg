/* Copyright (C) 2003 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

_CONFIGINCLUDE(gtkmmconfig.h)

#include <giomm/application.h>
#include <gtkmm/actiongroup.h>

_DEFS(gtkmm,gtk)
_PINCLUDE(giomm/private/application_p.h)

namespace Gtk
{

class Window;

/** TODO
 */
class Application
  : public Gio::Application
{
protected:
  _CLASS_GOBJECT(Application, GtkApplication, GTK_APPLICATION, Gio::Application, GApplication)

  //TODO: Constructor?
public:

#m4 _CONVERSION(`Gio::ApplicationFlags',`GApplicationFlags',`(GApplicationFlags)($3)')
  _WRAP_METHOD(static Glib::RefPtr<Application> create(const Glib::ustring& appid, Gio::ApplicationFlags flags = Gio::APPLICATION_FLAGS_NONE), gtk_application_new)

#m4 _CONVERSION(`GList*',`Glib::ListHandle<Window*>',`$2($3, Glib::OWNERSHIP_NONE)')
  _WRAP_METHOD(Glib::ListHandle<Window*> get_windows(), gtk_application_get_windows)

#m4 _CONVERSION(`GList*',`Glib::ListHandle<const Window*>',`$2($3, Glib::OWNERSHIP_NONE)')
  _WRAP_METHOD(Glib::ListHandle<const Window*> get_windows() const, gtk_application_get_windows)

  _WRAP_METHOD(void add_window(Window& window), gtk_application_add_window)
  _WRAP_METHOD(void remove_window(Window& window), gtk_application_remove_window)
};

} // namespace Gtk
