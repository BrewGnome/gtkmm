/* $Id$ */

/* adjustment.h
 * 
 * Copyright (C) 1998-2002 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <gtkmm/object.h>
_DEFS(gtkmm,gtk)
_PINCLUDE(gtkmm/private/object_p.h)


namespace Gtk
{

/** A class representing an adjustable bounded value.
 *
 * The Gtk::Adjustment object represents a value which has an associated
 * lower and upper bound, together with step and page increments, and a page
 * size.  It is used within several gtkmm widgets, including
 * Gtk::SpinButton, Gtk::Viewport, and Gtk::Range (which is a base class for
 * Gtk::HScrollbar, Gtk::VScrollbar, Gtk::HScale, and Gtk::VScale).
 *
 * The Gtk::Adjustment object does not update the value itself. Instead it
 * is left up to the owner of the Gtk::Adjustment to control the value.
 *
 * The owner of the Gtk::Adjustment typically calls the value_changed() and
 * changed() functions after changing the value and its bounds. This results
 * in the emission of the "value_changed" or "changed" signal respectively. 
 *
 */
class Adjustment : public Object
{
  _CLASS_GTKOBJECT(Adjustment,GtkAdjustment,GTK_ADJUSTMENT,Gtk::Object,GtkObject)
public:

  friend class Range;
  friend class HScrollbar;
  friend class VScrollbar;

  Adjustment(double value,
      	     double lower,  double upper,
      	     double step_increment = 1, double page_increment = 10,
      	     double page_size = 0);
  


  _WRAP_METHOD(void changed(), gtk_adjustment_changed)
  _WRAP_METHOD(void value_changed(), gtk_adjustment_value_changed)

  _WRAP_METHOD(void clamp_page(double lower, double upper), gtk_adjustment_clamp_page)

  _WRAP_METHOD(void set_value(double value), gtk_adjustment_set_value)
  _WRAP_METHOD(double get_value() const, gtk_adjustment_get_value)

  //: other internal fields accessors
  _MEMBER_GET(lower,lower,double,double)
  _MEMBER_GET(upper,upper,double,double)
  _MEMBER_GET(step_increment,step_increment,double,double)
  _MEMBER_GET(page_increment,page_increment,double,double)
  _MEMBER_GET(page_size,page_size,double,double)

  // TODO: This section needs changing. We must be able to set more at a time,
  // emitting "changed" signal only once.
  void set_lower(double lower);
  void set_upper(double upper);
  void set_step_increment(double incr);
  void set_page_increment(double incr);
  void set_page_size(double size);

  _WRAP_SIGNAL(void changed(), "changed")
  _WRAP_SIGNAL(void value_changed(), "value_changed")

};

} /* namespace Gtk */

