/* $Id$ */


/* Copyright (C) 1998-2002 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <glibmm/interface.h>
#include <gtkmm/enums.h>
#include <gtkmm/treemodelcolumn.h>
#include <gtkmm/treemodel.h>
#include <gtkmm/treeiter.h>
#include <gtk/gtktreesortable.h>

_DEFS(gtkmm,gtk)
_PINCLUDE(glibmm/private/interface_p.h)

namespace Gtk
{

/**
 * @ingroup TreeView
*/
class TreeSortable : public Glib::Interface
{
  _CLASS_INTERFACE(TreeSortable, GtkTreeSortable, GTK_TREE_SORTABLE, GtkTreeSortableIface)

public:
  enum { DEFAULT_SORT_COLUMN_ID = -1 };

  _WRAP_METHOD(bool get_sort_column_id(int& sort_column_id, SortType& order) const,
               gtk_tree_sortable_get_sort_column_id)

  _WRAP_METHOD(void set_sort_column_id(const TreeModelColumnBase& sort_column_id, SortType order),
               gtk_tree_sortable_set_sort_column_id)
  _WRAP_METHOD(void set_sort_column_id(int sort_column_id, SortType order),
               gtk_tree_sortable_set_sort_column_id)

  typedef SigC::Slot2<int, const Gtk::TreeModel::iterator&, const Gtk::TreeModel::iterator&> SlotCompare;

  _IGNORE(gtk_tree_sortable_set_sort_func, gtk_tree_sortable_set_default_sort_func)
  void set_sort_func(const TreeModelColumnBase& sort_column_id, const SlotCompare& slot);
  void set_sort_func(int sort_column_id, const SlotCompare& slot);
  void set_default_sort_func(const SlotCompare& slot);

  _WRAP_METHOD(bool has_default_sort_func() const, gtk_tree_sortable_has_default_sort_func)

  _WRAP_METHOD(void sort_column_changed(), gtk_tree_sortable_sort_column_changed)
  _WRAP_SIGNAL(void sort_column_changed(), "sort_column_changed")

protected:
  _WRAP_VFUNC(bool get_sort_column_id(int* sort_column_id, SortType* order) const, get_sort_column_id)
  _WRAP_VFUNC(void set_sort_column_id(int sort_column_id, SortType order), set_sort_column_id)
  _WRAP_VFUNC(void set_sort_func(int sort_column_id, GtkTreeIterCompareFunc func, void* data, GtkDestroyNotify destroy), set_sort_func)
  _WRAP_VFUNC(void set_default_sort_func(GtkTreeIterCompareFunc func, void* data, GtkDestroyNotify destroy), set_default_sort_func)
  _WRAP_VFUNC(bool has_default_sort_func() const, has_default_sort_func)
  _WRAP_VFUNC(void sort_column_changed() const, sort_column_changed)
};

} // namespace Gtk

