/* Copyright (C) 2006 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <glibmm/object.h>

#include <cairomm/context.h>

#include <pangomm/fontmap.h>
#include <pangomm/context.h>
#include <pangomm/layout.h>

#include <gtkmm/pagesetup.h>

_DEFS(gtkmm,gtk)
_PINCLUDE(glibmm/private/object_p.h)

namespace Gtk
{

class PrintContext : public Glib::Object
{
  _CLASS_GOBJECT(PrintContext, GtkPrintContext, GTK_PRINT_CONTEXT, Glib::Object, GObject)

  //TODO: ctor?

public:

  Cairo::RefPtr<Cairo::Context> get_cairo();
  Cairo::RefPtr<Cairo::Context> get_cairo() const;
  _IGNORE(gtk_print_context_get_cairo)

  _WRAP_METHOD(Glib::RefPtr<PageSetup> get_page_setup(), gtk_print_context_get_page_setup, refreturn)
  _WRAP_METHOD(Glib::RefPtr<PageSetup> get_page_setup() const, gtk_print_context_get_page_setup, refreturn, constversion)

  _WRAP_METHOD(double get_width() const, gtk_print_context_get_width)
  _WRAP_METHOD(double get_height() const, gtk_print_context_get_height)

  _WRAP_METHOD(double get_dpi_x() const, gtk_print_context_get_dpi_x)
  _WRAP_METHOD(double get_dpi_y() const, gtk_print_context_get_dpi_y)

  _WRAP_METHOD(Glib::RefPtr<Pango::FontMap> get_fontmap(), gtk_print_context_get_fontmap, refreturn)
  _WRAP_METHOD(Glib::RefPtr<Pango::FontMap> get_fontmap() const, gtk_print_context_get_fontmap, refreturn, constversion)

  _WRAP_METHOD(Glib::RefPtr<Pango::Context> create_context(), gtk_print_context_create_context)
  _WRAP_METHOD(Glib::RefPtr<Pango::Layout> create_layout(), gtk_print_context_create_layout)
};

} // namespace Gtk
