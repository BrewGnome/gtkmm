/* $Id$ */

/* Copyright (C) 2003 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <gtkmm/toggleaction.h>

_DEFS(gtkmm,gtk)
_PINCLUDE(gtkmm/private/toggleaction_p.h)


namespace Gtk
{

class RadioAction : public Gtk::ToggleAction
{
  _CLASS_GOBJECT(RadioAction, GtkRadioAction, GTK_RADIO_ACTION, Gtk::ToggleAction, GtkToggleAction)

  _CTOR_DEFAULT
  explicit RadioAction(const Glib::ustring& name, const StockID& stock_id, const Glib::ustring& label = Glib::ustring(), const Glib::ustring& tooltip = Glib::ustring());
public:
  _WRAP_CREATE()

  //TODO: If the stock_id and the other arguments are mutually exclusive, then we should have create() and create_from_stock().
  _WRAP_CREATE(const Glib::ustring& name, const Gtk::StockID& stock_id = Gtk::StockID(), const Glib::ustring& label = Glib::ustring(), const Glib::ustring& tooltip = Glib::ustring())


  //TODO: const version:
  _WRAP_METHOD(Glib::SListHandle< Glib::RefPtr<RadioAction> > get_group(), gtk_radio_action_get_group)
  _WRAP_METHOD(void set_group(const Glib::SListHandle< Glib::RefPtr<RadioAction> >& group), gtk_radio_action_set_group)
  _WRAP_METHOD(int get_current_value() const, gtk_radio_action_get_current_value)

  _WRAP_SIGNAL(void changed(const Glib::RefPtr<RadioAction>& current), changed)

  _WRAP_PROPERTY("value", int)
};

} // namespace Gtk

